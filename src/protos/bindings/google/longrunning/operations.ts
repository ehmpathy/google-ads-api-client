// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "google/longrunning/operations.proto" (package "google.longrunning", syntax proto3)
// tslint:disable
//
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { Empty } from "../protobuf/empty";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Duration } from "../protobuf/duration";
import { Status } from "../rpc/status";
import { Any } from "../protobuf/any";
/**
 * This resource represents a long-running operation that is the result of a
 * network API call.
 *
 * @generated from protobuf message google.longrunning.Operation
 */
export interface Operation {
    /**
     * The server-assigned name, which is only unique within the same service that
     * originally returns it. If you use the default HTTP mapping, the
     * `name` should be a resource name ending with `operations/{unique_id}`.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * Service-specific metadata associated with the operation.  It typically
     * contains progress information and common metadata such as create time.
     * Some services might not provide such metadata.  Any method that returns a
     * long-running operation should document the metadata type, if any.
     *
     * @generated from protobuf field: google.protobuf.Any metadata = 2;
     */
    metadata?: Any;
    /**
     * If the value is `false`, it means the operation is still in progress.
     * If `true`, the operation is completed, and either `error` or `response` is
     * available.
     *
     * @generated from protobuf field: bool done = 3;
     */
    done: boolean;
    /**
     * @generated from protobuf oneof: result
     */
    result: {
        oneofKind: "error";
        /**
         * The error result of the operation in case of failure or cancellation.
         *
         * @generated from protobuf field: google.rpc.Status error = 4;
         */
        error: Status;
    } | {
        oneofKind: "response";
        /**
         * The normal response of the operation in case of success.  If the original
         * method returns no data on success, such as `Delete`, the response is
         * `google.protobuf.Empty`.  If the original method is standard
         * `Get`/`Create`/`Update`, the response should be the resource.  For other
         * methods, the response should have the type `XxxResponse`, where `Xxx`
         * is the original method name.  For example, if the original method name
         * is `TakeSnapshot()`, the inferred response type is
         * `TakeSnapshotResponse`.
         *
         * @generated from protobuf field: google.protobuf.Any response = 5;
         */
        response: Any;
    } | {
        oneofKind: undefined;
    };
}
/**
 * The request message for [Operations.GetOperation][google.longrunning.Operations.GetOperation].
 *
 * @generated from protobuf message google.longrunning.GetOperationRequest
 */
export interface GetOperationRequest {
    /**
     * The name of the operation resource.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * The request message for [Operations.ListOperations][google.longrunning.Operations.ListOperations].
 *
 * @generated from protobuf message google.longrunning.ListOperationsRequest
 */
export interface ListOperationsRequest {
    /**
     * The name of the operation's parent resource.
     *
     * @generated from protobuf field: string name = 4;
     */
    name: string;
    /**
     * The standard list filter.
     *
     * @generated from protobuf field: string filter = 1;
     */
    filter: string;
    /**
     * The standard list page size.
     *
     * @generated from protobuf field: int32 page_size = 2;
     */
    pageSize: number;
    /**
     * The standard list page token.
     *
     * @generated from protobuf field: string page_token = 3;
     */
    pageToken: string;
}
/**
 * The response message for [Operations.ListOperations][google.longrunning.Operations.ListOperations].
 *
 * @generated from protobuf message google.longrunning.ListOperationsResponse
 */
export interface ListOperationsResponse {
    /**
     * A list of operations that matches the specified filter in the request.
     *
     * @generated from protobuf field: repeated google.longrunning.Operation operations = 1;
     */
    operations: Operation[];
    /**
     * The standard List next-page token.
     *
     * @generated from protobuf field: string next_page_token = 2;
     */
    nextPageToken: string;
}
/**
 * The request message for [Operations.CancelOperation][google.longrunning.Operations.CancelOperation].
 *
 * @generated from protobuf message google.longrunning.CancelOperationRequest
 */
export interface CancelOperationRequest {
    /**
     * The name of the operation resource to be cancelled.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * The request message for [Operations.DeleteOperation][google.longrunning.Operations.DeleteOperation].
 *
 * @generated from protobuf message google.longrunning.DeleteOperationRequest
 */
export interface DeleteOperationRequest {
    /**
     * The name of the operation resource to be deleted.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * The request message for [Operations.WaitOperation][google.longrunning.Operations.WaitOperation].
 *
 * @generated from protobuf message google.longrunning.WaitOperationRequest
 */
export interface WaitOperationRequest {
    /**
     * The name of the operation resource to wait on.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The maximum duration to wait before timing out. If left blank, the wait
     * will be at most the time permitted by the underlying HTTP/RPC protocol.
     * If RPC context deadline is also specified, the shorter one will be used.
     *
     * @generated from protobuf field: google.protobuf.Duration timeout = 2;
     */
    timeout?: Duration;
}
/**
 * A message representing the message types used by a long-running operation.
 *
 * Example:
 *
 *   rpc LongRunningRecognize(LongRunningRecognizeRequest)
 *       returns (google.longrunning.Operation) {
 *     option (google.longrunning.operation_info) = {
 *       response_type: "LongRunningRecognizeResponse"
 *       metadata_type: "LongRunningRecognizeMetadata"
 *     };
 *   }
 *
 * @generated from protobuf message google.longrunning.OperationInfo
 */
export interface OperationInfo {
    /**
     * Required. The message name of the primary return type for this
     * long-running operation.
     * This type will be used to deserialize the LRO's response.
     *
     * If the response is in a different package from the rpc, a fully-qualified
     * message name must be used (e.g. `google.protobuf.Struct`).
     *
     * Note: Altering this value constitutes a breaking change.
     *
     * @generated from protobuf field: string response_type = 1;
     */
    responseType: string;
    /**
     * Required. The message name of the metadata type for this long-running
     * operation.
     *
     * If the response is in a different package from the rpc, a fully-qualified
     * message name must be used (e.g. `google.protobuf.Struct`).
     *
     * Note: Altering this value constitutes a breaking change.
     *
     * @generated from protobuf field: string metadata_type = 2;
     */
    metadataType: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class Operation$Type extends MessageType<Operation> {
    constructor() {
        super("google.longrunning.Operation", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "metadata", kind: "message", T: () => Any },
            { no: 3, name: "done", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "error", kind: "message", oneof: "result", T: () => Status },
            { no: 5, name: "response", kind: "message", oneof: "result", T: () => Any }
        ]);
    }
    create(value?: PartialMessage<Operation>): Operation {
        const message = { name: "", done: false, result: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Operation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Operation): Operation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.protobuf.Any metadata */ 2:
                    message.metadata = Any.internalBinaryRead(reader, reader.uint32(), options, message.metadata);
                    break;
                case /* bool done */ 3:
                    message.done = reader.bool();
                    break;
                case /* google.rpc.Status error */ 4:
                    message.result = {
                        oneofKind: "error",
                        error: Status.internalBinaryRead(reader, reader.uint32(), options, (message.result as any).error)
                    };
                    break;
                case /* google.protobuf.Any response */ 5:
                    message.result = {
                        oneofKind: "response",
                        response: Any.internalBinaryRead(reader, reader.uint32(), options, (message.result as any).response)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Operation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* google.protobuf.Any metadata = 2; */
        if (message.metadata)
            Any.internalBinaryWrite(message.metadata, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool done = 3; */
        if (message.done !== false)
            writer.tag(3, WireType.Varint).bool(message.done);
        /* google.rpc.Status error = 4; */
        if (message.result.oneofKind === "error")
            Status.internalBinaryWrite(message.result.error, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Any response = 5; */
        if (message.result.oneofKind === "response")
            Any.internalBinaryWrite(message.result.response, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.longrunning.Operation
 */
export const Operation = new Operation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOperationRequest$Type extends MessageType<GetOperationRequest> {
    constructor() {
        super("google.longrunning.GetOperationRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GetOperationRequest>): GetOperationRequest {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetOperationRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetOperationRequest): GetOperationRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetOperationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.longrunning.GetOperationRequest
 */
export const GetOperationRequest = new GetOperationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListOperationsRequest$Type extends MessageType<ListOperationsRequest> {
    constructor() {
        super("google.longrunning.ListOperationsRequest", [
            { no: 4, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 1, name: "filter", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListOperationsRequest>): ListOperationsRequest {
        const message = { name: "", filter: "", pageSize: 0, pageToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListOperationsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListOperationsRequest): ListOperationsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 4:
                    message.name = reader.string();
                    break;
                case /* string filter */ 1:
                    message.filter = reader.string();
                    break;
                case /* int32 page_size */ 2:
                    message.pageSize = reader.int32();
                    break;
                case /* string page_token */ 3:
                    message.pageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListOperationsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 4; */
        if (message.name !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.name);
        /* string filter = 1; */
        if (message.filter !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.filter);
        /* int32 page_size = 2; */
        if (message.pageSize !== 0)
            writer.tag(2, WireType.Varint).int32(message.pageSize);
        /* string page_token = 3; */
        if (message.pageToken !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.pageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.longrunning.ListOperationsRequest
 */
export const ListOperationsRequest = new ListOperationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListOperationsResponse$Type extends MessageType<ListOperationsResponse> {
    constructor() {
        super("google.longrunning.ListOperationsResponse", [
            { no: 1, name: "operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Operation },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListOperationsResponse>): ListOperationsResponse {
        const message = { operations: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListOperationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListOperationsResponse): ListOperationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.longrunning.Operation operations */ 1:
                    message.operations.push(Operation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListOperationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.longrunning.Operation operations = 1; */
        for (let i = 0; i < message.operations.length; i++)
            Operation.internalBinaryWrite(message.operations[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.longrunning.ListOperationsResponse
 */
export const ListOperationsResponse = new ListOperationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CancelOperationRequest$Type extends MessageType<CancelOperationRequest> {
    constructor() {
        super("google.longrunning.CancelOperationRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<CancelOperationRequest>): CancelOperationRequest {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CancelOperationRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CancelOperationRequest): CancelOperationRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CancelOperationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.longrunning.CancelOperationRequest
 */
export const CancelOperationRequest = new CancelOperationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteOperationRequest$Type extends MessageType<DeleteOperationRequest> {
    constructor() {
        super("google.longrunning.DeleteOperationRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<DeleteOperationRequest>): DeleteOperationRequest {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeleteOperationRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteOperationRequest): DeleteOperationRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DeleteOperationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.longrunning.DeleteOperationRequest
 */
export const DeleteOperationRequest = new DeleteOperationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WaitOperationRequest$Type extends MessageType<WaitOperationRequest> {
    constructor() {
        super("google.longrunning.WaitOperationRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "timeout", kind: "message", T: () => Duration }
        ]);
    }
    create(value?: PartialMessage<WaitOperationRequest>): WaitOperationRequest {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WaitOperationRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WaitOperationRequest): WaitOperationRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.protobuf.Duration timeout */ 2:
                    message.timeout = Duration.internalBinaryRead(reader, reader.uint32(), options, message.timeout);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WaitOperationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* google.protobuf.Duration timeout = 2; */
        if (message.timeout)
            Duration.internalBinaryWrite(message.timeout, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.longrunning.WaitOperationRequest
 */
export const WaitOperationRequest = new WaitOperationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OperationInfo$Type extends MessageType<OperationInfo> {
    constructor() {
        super("google.longrunning.OperationInfo", [
            { no: 1, name: "response_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "metadata_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<OperationInfo>): OperationInfo {
        const message = { responseType: "", metadataType: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OperationInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OperationInfo): OperationInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string response_type */ 1:
                    message.responseType = reader.string();
                    break;
                case /* string metadata_type */ 2:
                    message.metadataType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OperationInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string response_type = 1; */
        if (message.responseType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.responseType);
        /* string metadata_type = 2; */
        if (message.metadataType !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.metadataType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.longrunning.OperationInfo
 */
export const OperationInfo = new OperationInfo$Type();
/**
 * @generated ServiceType for protobuf service google.longrunning.Operations
 */
export const Operations = new ServiceType("google.longrunning.Operations", [
    { name: "ListOperations", options: { "google.api.http": { get: "/v1/{name=operations}" }, "google.api.method_signature": ["name,filter"] }, I: ListOperationsRequest, O: ListOperationsResponse },
    { name: "GetOperation", options: { "google.api.http": { get: "/v1/{name=operations/**}" }, "google.api.method_signature": ["name"] }, I: GetOperationRequest, O: Operation },
    { name: "DeleteOperation", options: { "google.api.http": { delete: "/v1/{name=operations/**}" }, "google.api.method_signature": ["name"] }, I: DeleteOperationRequest, O: Empty },
    { name: "CancelOperation", options: { "google.api.http": { post: "/v1/{name=operations/**}:cancel", body: "*" }, "google.api.method_signature": ["name"] }, I: CancelOperationRequest, O: Empty },
    { name: "WaitOperation", options: {}, I: WaitOperationRequest, O: Operation }
], { "google.api.default_host": "longrunning.googleapis.com" });
