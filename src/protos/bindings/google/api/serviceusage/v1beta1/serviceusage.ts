// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "google/api/serviceusage/v1beta1/serviceusage.proto" (package "google.api.serviceusage.v1beta1", syntax proto3)
// tslint:disable
//
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { ConsumerQuotaLimit } from "./resources";
import { Operation } from "../../../longrunning/operations";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ServiceIdentity } from "./resources";
import { AdminQuotaPolicy } from "./resources";
import { OverrideInlineSource } from "./resources";
import { FieldMask } from "../../../protobuf/field_mask";
import { QuotaSafetyCheck } from "./resources";
import { QuotaOverride } from "./resources";
import { ConsumerQuotaMetric } from "./resources";
import { QuotaView } from "./resources";
import { Service } from "./resources";
/**
 * Request message for the `EnableService` method.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.EnableServiceRequest
 */
export interface EnableServiceRequest {
    /**
     * Name of the consumer and service to enable the service on.
     *
     * The `EnableService` and `DisableService` methods currently only support
     * projects.
     *
     * Enabling a service requires that the service is public or is shared with
     * the user enabling the service.
     *
     * An example name would be:
     * `projects/123/services/serviceusage.googleapis.com`
     * where `123` is the project number (not project ID).
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * Request message for the `DisableService` method.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.DisableServiceRequest
 */
export interface DisableServiceRequest {
    /**
     * Name of the consumer and service to disable the service on.
     *
     * The enable and disable methods currently only support projects.
     *
     * An example name would be:
     * `projects/123/services/serviceusage.googleapis.com`
     * where `123` is the project number (not project ID).
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * Request message for the `GetService` method.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.GetServiceRequest
 */
export interface GetServiceRequest {
    /**
     * Name of the consumer and service to get the `ConsumerState` for.
     *
     * An example name would be:
     * `projects/123/services/serviceusage.googleapis.com`
     * where `123` is the project number (not project ID).
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * Request message for the `ListServices` method.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ListServicesRequest
 */
export interface ListServicesRequest {
    /**
     * Parent to search for services on.
     *
     * An example name would be:
     * `projects/123`
     * where `123` is the project number (not project ID).
     *
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
    /**
     * Requested size of the next page of data.
     * Requested page size cannot exceed 200.
     *  If not set, the default page size is 50.
     *
     * @generated from protobuf field: int32 page_size = 2;
     */
    pageSize: number;
    /**
     * Token identifying which result to start with, which is returned by a
     * previous list call.
     *
     * @generated from protobuf field: string page_token = 3;
     */
    pageToken: string;
    /**
     * Only list services that conform to the given filter.
     * The allowed filter strings are `state:ENABLED` and `state:DISABLED`.
     *
     * @generated from protobuf field: string filter = 4;
     */
    filter: string;
}
/**
 * Response message for the `ListServices` method.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ListServicesResponse
 */
export interface ListServicesResponse {
    /**
     * The available services for the requested project.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.Service services = 1;
     */
    services: Service[];
    /**
     * Token that can be passed to `ListServices` to resume a paginated
     * query.
     *
     * @generated from protobuf field: string next_page_token = 2;
     */
    nextPageToken: string;
}
/**
 * Request message for the `BatchEnableServices` method.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.BatchEnableServicesRequest
 */
export interface BatchEnableServicesRequest {
    /**
     * Parent to enable services on.
     *
     * An example name would be:
     * `projects/123`
     * where `123` is the project number (not project ID).
     *
     * The `BatchEnableServices` method currently only supports projects.
     *
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
    /**
     * The identifiers of the services to enable on the project.
     *
     * A valid identifier would be:
     * serviceusage.googleapis.com
     *
     * Enabling services requires that each service is public or is shared with
     * the user enabling the service.
     *
     * Two or more services must be specified. To enable a single service,
     * use the `EnableService` method instead.
     *
     * A single request can enable a maximum of 20 services at a time. If more
     * than 20 services are specified, the request will fail, and no state changes
     * will occur.
     *
     * @generated from protobuf field: repeated string service_ids = 2;
     */
    serviceIds: string[];
}
/**
 * Request message for ListConsumerQuotaMetrics
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ListConsumerQuotaMetricsRequest
 */
export interface ListConsumerQuotaMetricsRequest {
    /**
     * Parent of the quotas resource.
     *
     * Some example names would be:
     * `projects/123/services/serviceconsumermanagement.googleapis.com`
     * `folders/345/services/serviceconsumermanagement.googleapis.com`
     * `organizations/456/services/serviceconsumermanagement.googleapis.com`
     *
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
    /**
     * Requested size of the next page of data.
     *
     * @generated from protobuf field: int32 page_size = 2;
     */
    pageSize: number;
    /**
     * Token identifying which result to start with; returned by a previous list
     * call.
     *
     * @generated from protobuf field: string page_token = 3;
     */
    pageToken: string;
    /**
     * Specifies the level of detail for quota information in the response.
     *
     * @generated from protobuf field: google.api.serviceusage.v1beta1.QuotaView view = 4;
     */
    view: QuotaView;
}
/**
 * Response message for ListConsumerQuotaMetrics
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ListConsumerQuotaMetricsResponse
 */
export interface ListConsumerQuotaMetricsResponse {
    /**
     * Quota settings for the consumer, organized by quota metric.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.ConsumerQuotaMetric metrics = 1;
     */
    metrics: ConsumerQuotaMetric[];
    /**
     * Token identifying which result to start with; returned by a previous list
     * call.
     *
     * @generated from protobuf field: string next_page_token = 2;
     */
    nextPageToken: string;
}
/**
 * Request message for GetConsumerQuotaMetric
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.GetConsumerQuotaMetricRequest
 */
export interface GetConsumerQuotaMetricRequest {
    /**
     * The resource name of the quota limit.
     *
     * An example name would be:
     * `projects/123/services/serviceusage.googleapis.com/quotas/metrics/serviceusage.googleapis.com%2Fmutate_requests`
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * Specifies the level of detail for quota information in the response.
     *
     * @generated from protobuf field: google.api.serviceusage.v1beta1.QuotaView view = 2;
     */
    view: QuotaView;
}
/**
 * Request message for GetConsumerQuotaLimit
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.GetConsumerQuotaLimitRequest
 */
export interface GetConsumerQuotaLimitRequest {
    /**
     * The resource name of the quota limit.
     *
     * Use the quota limit resource name returned by previous
     * ListConsumerQuotaMetrics and GetConsumerQuotaMetric API calls.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * Specifies the level of detail for quota information in the response.
     *
     * @generated from protobuf field: google.api.serviceusage.v1beta1.QuotaView view = 2;
     */
    view: QuotaView;
}
/**
 * Request message for CreateAdminOverride.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.CreateAdminOverrideRequest
 */
export interface CreateAdminOverrideRequest {
    /**
     * The resource name of the parent quota limit, returned by a
     * ListConsumerQuotaMetrics or GetConsumerQuotaMetric call.
     *
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
     *
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
    /**
     * The admin override to create.
     *
     * @generated from protobuf field: google.api.serviceusage.v1beta1.QuotaOverride override = 2;
     */
    override?: QuotaOverride;
    /**
     * Whether to force the creation of the quota override.
     * Setting the force parameter to 'true' ignores all quota safety checks that
     * would fail the request. QuotaSafetyCheck lists all such validations.
     *
     * @generated from protobuf field: bool force = 3;
     */
    force: boolean;
    /**
     * The list of quota safety checks to ignore before the override mutation.
     * Unlike 'force' field that ignores all the quota safety checks, the
     * 'force_only' field ignores only the specified checks; other checks are
     * still enforced. The 'force' and 'force_only' fields cannot both be set.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4;
     */
    forceOnly: QuotaSafetyCheck[];
}
/**
 * Request message for UpdateAdminOverride.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.UpdateAdminOverrideRequest
 */
export interface UpdateAdminOverrideRequest {
    /**
     * The resource name of the override to update.
     *
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminOverrides/4a3f2c1d`
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The new override.
     * Only the override_value is updated; all other fields are ignored.
     *
     * @generated from protobuf field: google.api.serviceusage.v1beta1.QuotaOverride override = 2;
     */
    override?: QuotaOverride;
    /**
     * Whether to force the update of the quota override.
     * Setting the force parameter to 'true' ignores all quota safety checks that
     * would fail the request. QuotaSafetyCheck lists all such validations.
     *
     * @generated from protobuf field: bool force = 3;
     */
    force: boolean;
    /**
     * Update only the specified fields of the override.
     * If unset, all fields will be updated.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 4;
     */
    updateMask?: FieldMask;
    /**
     * The list of quota safety checks to ignore before the override mutation.
     * Unlike 'force' field that ignores all the quota safety checks, the
     * 'force_only' field ignores only the specified checks; other checks are
     * still enforced. The 'force' and 'force_only' fields cannot both be set.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 5;
     */
    forceOnly: QuotaSafetyCheck[];
}
/**
 * Request message for DeleteAdminOverride.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.DeleteAdminOverrideRequest
 */
export interface DeleteAdminOverrideRequest {
    /**
     * The resource name of the override to delete.
     *
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminOverrides/4a3f2c1d`
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * Whether to force the deletion of the quota override.
     * Setting the force parameter to 'true' ignores all quota safety checks that
     * would fail the request. QuotaSafetyCheck lists all such validations.
     *
     * @generated from protobuf field: bool force = 2;
     */
    force: boolean;
    /**
     * The list of quota safety checks to ignore before the override mutation.
     * Unlike 'force' field that ignores all the quota safety checks, the
     * 'force_only' field ignores only the specified checks; other checks are
     * still enforced. The 'force' and 'force_only' fields cannot both be set.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 3;
     */
    forceOnly: QuotaSafetyCheck[];
}
/**
 * Request message for ListAdminOverrides
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ListAdminOverridesRequest
 */
export interface ListAdminOverridesRequest {
    /**
     * The resource name of the parent quota limit, returned by a
     * ListConsumerQuotaMetrics or GetConsumerQuotaMetric call.
     *
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
     *
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
    /**
     * Requested size of the next page of data.
     *
     * @generated from protobuf field: int32 page_size = 2;
     */
    pageSize: number;
    /**
     * Token identifying which result to start with; returned by a previous list
     * call.
     *
     * @generated from protobuf field: string page_token = 3;
     */
    pageToken: string;
}
/**
 * Response message for ListAdminOverrides.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ListAdminOverridesResponse
 */
export interface ListAdminOverridesResponse {
    /**
     * Admin overrides on this limit.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
     */
    overrides: QuotaOverride[];
    /**
     * Token identifying which result to start with; returned by a previous list
     * call.
     *
     * @generated from protobuf field: string next_page_token = 2;
     */
    nextPageToken: string;
}
/**
 * Response message for BatchCreateAdminOverrides
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.BatchCreateAdminOverridesResponse
 */
export interface BatchCreateAdminOverridesResponse {
    /**
     * The overrides that were created.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
     */
    overrides: QuotaOverride[];
}
/**
 * Request message for ImportAdminOverrides
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ImportAdminOverridesRequest
 */
export interface ImportAdminOverridesRequest {
    /**
     * The resource name of the consumer.
     *
     * An example name would be:
     * `projects/123/services/compute.googleapis.com`
     *
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
    /**
     * @generated from protobuf oneof: source
     */
    source: {
        oneofKind: "inlineSource";
        /**
         * The import data is specified in the request message itself
         *
         * @generated from protobuf field: google.api.serviceusage.v1beta1.OverrideInlineSource inline_source = 2;
         */
        inlineSource: OverrideInlineSource;
    } | {
        oneofKind: undefined;
    };
    /**
     * Whether to force the creation of the quota overrides.
     * Setting the force parameter to 'true' ignores all quota safety checks that
     * would fail the request. QuotaSafetyCheck lists all such validations.
     *
     * @generated from protobuf field: bool force = 3;
     */
    force: boolean;
    /**
     * The list of quota safety checks to ignore before the override mutation.
     * Unlike 'force' field that ignores all the quota safety checks, the
     * 'force_only' field ignores only the specified checks; other checks are
     * still enforced. The 'force' and 'force_only' fields cannot both be set.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4;
     */
    forceOnly: QuotaSafetyCheck[];
}
/**
 * Response message for ImportAdminOverrides
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ImportAdminOverridesResponse
 */
export interface ImportAdminOverridesResponse {
    /**
     * The overrides that were created from the imported data.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
     */
    overrides: QuotaOverride[];
}
/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by ImportAdminOverrides.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ImportAdminOverridesMetadata
 */
export interface ImportAdminOverridesMetadata {
}
/**
 * Request message for CreateConsumerOverride.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.CreateConsumerOverrideRequest
 */
export interface CreateConsumerOverrideRequest {
    /**
     * The resource name of the parent quota limit, returned by a
     * ListConsumerQuotaMetrics or GetConsumerQuotaMetric call.
     *
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
     *
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
    /**
     * The override to create.
     *
     * @generated from protobuf field: google.api.serviceusage.v1beta1.QuotaOverride override = 2;
     */
    override?: QuotaOverride;
    /**
     * Whether to force the creation of the quota override.
     * Setting the force parameter to 'true' ignores all quota safety checks that
     * would fail the request. QuotaSafetyCheck lists all such validations.
     *
     * @generated from protobuf field: bool force = 3;
     */
    force: boolean;
    /**
     * The list of quota safety checks to ignore before the override mutation.
     * Unlike 'force' field that ignores all the quota safety checks, the
     * 'force_only' field ignores only the specified checks; other checks are
     * still enforced. The 'force' and 'force_only' fields cannot both be set.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4;
     */
    forceOnly: QuotaSafetyCheck[];
}
/**
 * Request message for UpdateConsumerOverride.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.UpdateConsumerOverrideRequest
 */
export interface UpdateConsumerOverrideRequest {
    /**
     * The resource name of the override to update.
     *
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/consumerOverrides/4a3f2c1d`
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The new override.
     * Only the override_value is updated; all other fields are ignored.
     *
     * @generated from protobuf field: google.api.serviceusage.v1beta1.QuotaOverride override = 2;
     */
    override?: QuotaOverride;
    /**
     * Whether to force the update of the quota override.
     * Setting the force parameter to 'true' ignores all quota safety checks that
     * would fail the request. QuotaSafetyCheck lists all such validations.
     *
     * @generated from protobuf field: bool force = 3;
     */
    force: boolean;
    /**
     * Update only the specified fields of the override.
     * If unset, all fields will be updated.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 4;
     */
    updateMask?: FieldMask;
    /**
     * The list of quota safety checks to ignore before the override mutation.
     * Unlike 'force' field that ignores all the quota safety checks, the
     * 'force_only' field ignores only the specified checks; other checks are
     * still enforced. The 'force' and 'force_only' fields cannot both be set.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 5;
     */
    forceOnly: QuotaSafetyCheck[];
}
/**
 * Request message for DeleteConsumerOverride.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.DeleteConsumerOverrideRequest
 */
export interface DeleteConsumerOverrideRequest {
    /**
     * The resource name of the override to delete.
     *
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/consumerOverrides/4a3f2c1d`
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * Whether to force the deletion of the quota override.
     * Setting the force parameter to 'true' ignores all quota safety checks that
     * would fail the request. QuotaSafetyCheck lists all such validations.
     *
     * @generated from protobuf field: bool force = 2;
     */
    force: boolean;
    /**
     * The list of quota safety checks to ignore before the override mutation.
     * Unlike 'force' field that ignores all the quota safety checks, the
     * 'force_only' field ignores only the specified checks; other checks are
     * still enforced. The 'force' and 'force_only' fields cannot both be set.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 3;
     */
    forceOnly: QuotaSafetyCheck[];
}
/**
 * Request message for ListConsumerOverrides
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ListConsumerOverridesRequest
 */
export interface ListConsumerOverridesRequest {
    /**
     * The resource name of the parent quota limit, returned by a
     * ListConsumerQuotaMetrics or GetConsumerQuotaMetric call.
     *
     * An example name would be:
     * `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion`
     *
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
    /**
     * Requested size of the next page of data.
     *
     * @generated from protobuf field: int32 page_size = 2;
     */
    pageSize: number;
    /**
     * Token identifying which result to start with; returned by a previous list
     * call.
     *
     * @generated from protobuf field: string page_token = 3;
     */
    pageToken: string;
}
/**
 * Response message for ListConsumerOverrides.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ListConsumerOverridesResponse
 */
export interface ListConsumerOverridesResponse {
    /**
     * Consumer overrides on this limit.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
     */
    overrides: QuotaOverride[];
    /**
     * Token identifying which result to start with; returned by a previous list
     * call.
     *
     * @generated from protobuf field: string next_page_token = 2;
     */
    nextPageToken: string;
}
/**
 * Response message for BatchCreateConsumerOverrides
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.BatchCreateConsumerOverridesResponse
 */
export interface BatchCreateConsumerOverridesResponse {
    /**
     * The overrides that were created.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
     */
    overrides: QuotaOverride[];
}
/**
 * Request message for ImportConsumerOverrides
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ImportConsumerOverridesRequest
 */
export interface ImportConsumerOverridesRequest {
    /**
     * The resource name of the consumer.
     *
     * An example name would be:
     * `projects/123/services/compute.googleapis.com`
     *
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
    /**
     * @generated from protobuf oneof: source
     */
    source: {
        oneofKind: "inlineSource";
        /**
         * The import data is specified in the request message itself
         *
         * @generated from protobuf field: google.api.serviceusage.v1beta1.OverrideInlineSource inline_source = 2;
         */
        inlineSource: OverrideInlineSource;
    } | {
        oneofKind: undefined;
    };
    /**
     * Whether to force the creation of the quota overrides.
     * Setting the force parameter to 'true' ignores all quota safety checks that
     * would fail the request. QuotaSafetyCheck lists all such validations.
     *
     * @generated from protobuf field: bool force = 3;
     */
    force: boolean;
    /**
     * The list of quota safety checks to ignore before the override mutation.
     * Unlike 'force' field that ignores all the quota safety checks, the
     * 'force_only' field ignores only the specified checks; other checks are
     * still enforced. The 'force' and 'force_only' fields cannot both be set.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4;
     */
    forceOnly: QuotaSafetyCheck[];
}
/**
 * Response message for ImportConsumerOverrides
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ImportConsumerOverridesResponse
 */
export interface ImportConsumerOverridesResponse {
    /**
     * The overrides that were created from the imported data.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1;
     */
    overrides: QuotaOverride[];
}
/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by ImportConsumerOverrides.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ImportConsumerOverridesMetadata
 */
export interface ImportConsumerOverridesMetadata {
}
/**
 * Response message for ImportAdminQuotaPolicies
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ImportAdminQuotaPoliciesResponse
 */
export interface ImportAdminQuotaPoliciesResponse {
    /**
     * The policies that were created from the imported data.
     *
     * @generated from protobuf field: repeated google.api.serviceusage.v1beta1.AdminQuotaPolicy policies = 1;
     */
    policies: AdminQuotaPolicy[];
}
/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by ImportAdminQuotaPolicies.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.ImportAdminQuotaPoliciesMetadata
 */
export interface ImportAdminQuotaPoliciesMetadata {
}
/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by CreateAdminQuotaPolicy.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.CreateAdminQuotaPolicyMetadata
 */
export interface CreateAdminQuotaPolicyMetadata {
}
/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by UpdateAdminQuotaPolicy.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.UpdateAdminQuotaPolicyMetadata
 */
export interface UpdateAdminQuotaPolicyMetadata {
}
/**
 * Metadata message that provides information such as progress,
 * partial failures, and similar information on each GetOperation call
 * of LRO returned by DeleteAdminQuotaPolicy.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.DeleteAdminQuotaPolicyMetadata
 */
export interface DeleteAdminQuotaPolicyMetadata {
}
/**
 * Request message for generating service identity.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.GenerateServiceIdentityRequest
 */
export interface GenerateServiceIdentityRequest {
    /**
     * Name of the consumer and service to generate an identity for.
     *
     * The `GenerateServiceIdentity` methods currently only support projects.
     *
     * An example name would be:
     * `projects/123/services/example.googleapis.com` where `123` is the
     * project number.
     *
     * @generated from protobuf field: string parent = 1;
     */
    parent: string;
}
/**
 * Response message for getting service identity.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.GetServiceIdentityResponse
 */
export interface GetServiceIdentityResponse {
    /**
     * Service identity that service producer can use to access consumer
     * resources. If exists is true, it contains email and unique_id. If exists is
     * false, it contains pre-constructed email and empty unique_id.
     *
     * @generated from protobuf field: google.api.serviceusage.v1beta1.ServiceIdentity identity = 1;
     */
    identity?: ServiceIdentity;
    /**
     * Service identity state.
     *
     * @generated from protobuf field: google.api.serviceusage.v1beta1.GetServiceIdentityResponse.IdentityState state = 2;
     */
    state: GetServiceIdentityResponse_IdentityState;
}
/**
 * Enum for service identity state.
 *
 * @generated from protobuf enum google.api.serviceusage.v1beta1.GetServiceIdentityResponse.IdentityState
 */
export enum GetServiceIdentityResponse_IdentityState {
    /**
     * Default service identity state. This value is used if the state is
     * omitted.
     *
     * @generated from protobuf enum value: IDENTITY_STATE_UNSPECIFIED = 0;
     */
    IDENTITY_STATE_UNSPECIFIED = 0,
    /**
     * Service identity has been created and can be used.
     *
     * @generated from protobuf enum value: ACTIVE = 1;
     */
    ACTIVE = 1
}
/**
 * Metadata for the `GetServiceIdentity` method.
 *
 * @generated from protobuf message google.api.serviceusage.v1beta1.GetServiceIdentityMetadata
 */
export interface GetServiceIdentityMetadata {
}
// @generated message type with reflection information, may provide speed optimized methods
class EnableServiceRequest$Type extends MessageType<EnableServiceRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.EnableServiceRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<EnableServiceRequest>): EnableServiceRequest {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EnableServiceRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EnableServiceRequest): EnableServiceRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EnableServiceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.EnableServiceRequest
 */
export const EnableServiceRequest = new EnableServiceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DisableServiceRequest$Type extends MessageType<DisableServiceRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.DisableServiceRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<DisableServiceRequest>): DisableServiceRequest {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DisableServiceRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DisableServiceRequest): DisableServiceRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DisableServiceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.DisableServiceRequest
 */
export const DisableServiceRequest = new DisableServiceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetServiceRequest$Type extends MessageType<GetServiceRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.GetServiceRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GetServiceRequest>): GetServiceRequest {
        const message = { name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetServiceRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetServiceRequest): GetServiceRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetServiceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.GetServiceRequest
 */
export const GetServiceRequest = new GetServiceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListServicesRequest$Type extends MessageType<ListServicesRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ListServicesRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "filter", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListServicesRequest>): ListServicesRequest {
        const message = { parent: "", pageSize: 0, pageToken: "", filter: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListServicesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListServicesRequest): ListServicesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* int32 page_size */ 2:
                    message.pageSize = reader.int32();
                    break;
                case /* string page_token */ 3:
                    message.pageToken = reader.string();
                    break;
                case /* string filter */ 4:
                    message.filter = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListServicesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.parent);
        /* int32 page_size = 2; */
        if (message.pageSize !== 0)
            writer.tag(2, WireType.Varint).int32(message.pageSize);
        /* string page_token = 3; */
        if (message.pageToken !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.pageToken);
        /* string filter = 4; */
        if (message.filter !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.filter);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ListServicesRequest
 */
export const ListServicesRequest = new ListServicesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListServicesResponse$Type extends MessageType<ListServicesResponse> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ListServicesResponse", [
            { no: 1, name: "services", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Service },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListServicesResponse>): ListServicesResponse {
        const message = { services: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListServicesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListServicesResponse): ListServicesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.serviceusage.v1beta1.Service services */ 1:
                    message.services.push(Service.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListServicesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.serviceusage.v1beta1.Service services = 1; */
        for (let i = 0; i < message.services.length; i++)
            Service.internalBinaryWrite(message.services[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ListServicesResponse
 */
export const ListServicesResponse = new ListServicesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BatchEnableServicesRequest$Type extends MessageType<BatchEnableServicesRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.BatchEnableServicesRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "service_ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<BatchEnableServicesRequest>): BatchEnableServicesRequest {
        const message = { parent: "", serviceIds: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BatchEnableServicesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BatchEnableServicesRequest): BatchEnableServicesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* repeated string service_ids */ 2:
                    message.serviceIds.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BatchEnableServicesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.parent);
        /* repeated string service_ids = 2; */
        for (let i = 0; i < message.serviceIds.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.serviceIds[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.BatchEnableServicesRequest
 */
export const BatchEnableServicesRequest = new BatchEnableServicesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListConsumerQuotaMetricsRequest$Type extends MessageType<ListConsumerQuotaMetricsRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ListConsumerQuotaMetricsRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "view", kind: "enum", T: () => ["google.api.serviceusage.v1beta1.QuotaView", QuotaView] }
        ]);
    }
    create(value?: PartialMessage<ListConsumerQuotaMetricsRequest>): ListConsumerQuotaMetricsRequest {
        const message = { parent: "", pageSize: 0, pageToken: "", view: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListConsumerQuotaMetricsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListConsumerQuotaMetricsRequest): ListConsumerQuotaMetricsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* int32 page_size */ 2:
                    message.pageSize = reader.int32();
                    break;
                case /* string page_token */ 3:
                    message.pageToken = reader.string();
                    break;
                case /* google.api.serviceusage.v1beta1.QuotaView view */ 4:
                    message.view = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListConsumerQuotaMetricsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.parent);
        /* int32 page_size = 2; */
        if (message.pageSize !== 0)
            writer.tag(2, WireType.Varint).int32(message.pageSize);
        /* string page_token = 3; */
        if (message.pageToken !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.pageToken);
        /* google.api.serviceusage.v1beta1.QuotaView view = 4; */
        if (message.view !== 0)
            writer.tag(4, WireType.Varint).int32(message.view);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ListConsumerQuotaMetricsRequest
 */
export const ListConsumerQuotaMetricsRequest = new ListConsumerQuotaMetricsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListConsumerQuotaMetricsResponse$Type extends MessageType<ListConsumerQuotaMetricsResponse> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ListConsumerQuotaMetricsResponse", [
            { no: 1, name: "metrics", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ConsumerQuotaMetric },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListConsumerQuotaMetricsResponse>): ListConsumerQuotaMetricsResponse {
        const message = { metrics: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListConsumerQuotaMetricsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListConsumerQuotaMetricsResponse): ListConsumerQuotaMetricsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.serviceusage.v1beta1.ConsumerQuotaMetric metrics */ 1:
                    message.metrics.push(ConsumerQuotaMetric.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListConsumerQuotaMetricsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.serviceusage.v1beta1.ConsumerQuotaMetric metrics = 1; */
        for (let i = 0; i < message.metrics.length; i++)
            ConsumerQuotaMetric.internalBinaryWrite(message.metrics[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ListConsumerQuotaMetricsResponse
 */
export const ListConsumerQuotaMetricsResponse = new ListConsumerQuotaMetricsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetConsumerQuotaMetricRequest$Type extends MessageType<GetConsumerQuotaMetricRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.GetConsumerQuotaMetricRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "view", kind: "enum", T: () => ["google.api.serviceusage.v1beta1.QuotaView", QuotaView] }
        ]);
    }
    create(value?: PartialMessage<GetConsumerQuotaMetricRequest>): GetConsumerQuotaMetricRequest {
        const message = { name: "", view: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetConsumerQuotaMetricRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetConsumerQuotaMetricRequest): GetConsumerQuotaMetricRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.api.serviceusage.v1beta1.QuotaView view */ 2:
                    message.view = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetConsumerQuotaMetricRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* google.api.serviceusage.v1beta1.QuotaView view = 2; */
        if (message.view !== 0)
            writer.tag(2, WireType.Varint).int32(message.view);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.GetConsumerQuotaMetricRequest
 */
export const GetConsumerQuotaMetricRequest = new GetConsumerQuotaMetricRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetConsumerQuotaLimitRequest$Type extends MessageType<GetConsumerQuotaLimitRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.GetConsumerQuotaLimitRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "view", kind: "enum", T: () => ["google.api.serviceusage.v1beta1.QuotaView", QuotaView] }
        ]);
    }
    create(value?: PartialMessage<GetConsumerQuotaLimitRequest>): GetConsumerQuotaLimitRequest {
        const message = { name: "", view: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetConsumerQuotaLimitRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetConsumerQuotaLimitRequest): GetConsumerQuotaLimitRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.api.serviceusage.v1beta1.QuotaView view */ 2:
                    message.view = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetConsumerQuotaLimitRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* google.api.serviceusage.v1beta1.QuotaView view = 2; */
        if (message.view !== 0)
            writer.tag(2, WireType.Varint).int32(message.view);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.GetConsumerQuotaLimitRequest
 */
export const GetConsumerQuotaLimitRequest = new GetConsumerQuotaLimitRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateAdminOverrideRequest$Type extends MessageType<CreateAdminOverrideRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.CreateAdminOverrideRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "override", kind: "message", T: () => QuotaOverride },
            { no: 3, name: "force", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "force_only", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.api.serviceusage.v1beta1.QuotaSafetyCheck", QuotaSafetyCheck] }
        ]);
    }
    create(value?: PartialMessage<CreateAdminOverrideRequest>): CreateAdminOverrideRequest {
        const message = { parent: "", force: false, forceOnly: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CreateAdminOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateAdminOverrideRequest): CreateAdminOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* google.api.serviceusage.v1beta1.QuotaOverride override */ 2:
                    message.override = QuotaOverride.internalBinaryRead(reader, reader.uint32(), options, message.override);
                    break;
                case /* bool force */ 3:
                    message.force = reader.bool();
                    break;
                case /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.forceOnly.push(reader.int32());
                    else
                        message.forceOnly.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CreateAdminOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.parent);
        /* google.api.serviceusage.v1beta1.QuotaOverride override = 2; */
        if (message.override)
            QuotaOverride.internalBinaryWrite(message.override, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool force = 3; */
        if (message.force !== false)
            writer.tag(3, WireType.Varint).bool(message.force);
        /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4; */
        if (message.forceOnly.length) {
            writer.tag(4, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.forceOnly.length; i++)
                writer.int32(message.forceOnly[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.CreateAdminOverrideRequest
 */
export const CreateAdminOverrideRequest = new CreateAdminOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateAdminOverrideRequest$Type extends MessageType<UpdateAdminOverrideRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.UpdateAdminOverrideRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "override", kind: "message", T: () => QuotaOverride },
            { no: 3, name: "force", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "update_mask", kind: "message", T: () => FieldMask },
            { no: 5, name: "force_only", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.api.serviceusage.v1beta1.QuotaSafetyCheck", QuotaSafetyCheck] }
        ]);
    }
    create(value?: PartialMessage<UpdateAdminOverrideRequest>): UpdateAdminOverrideRequest {
        const message = { name: "", force: false, forceOnly: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdateAdminOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateAdminOverrideRequest): UpdateAdminOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.api.serviceusage.v1beta1.QuotaOverride override */ 2:
                    message.override = QuotaOverride.internalBinaryRead(reader, reader.uint32(), options, message.override);
                    break;
                case /* bool force */ 3:
                    message.force = reader.bool();
                    break;
                case /* google.protobuf.FieldMask update_mask */ 4:
                    message.updateMask = FieldMask.internalBinaryRead(reader, reader.uint32(), options, message.updateMask);
                    break;
                case /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only */ 5:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.forceOnly.push(reader.int32());
                    else
                        message.forceOnly.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdateAdminOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* google.api.serviceusage.v1beta1.QuotaOverride override = 2; */
        if (message.override)
            QuotaOverride.internalBinaryWrite(message.override, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool force = 3; */
        if (message.force !== false)
            writer.tag(3, WireType.Varint).bool(message.force);
        /* google.protobuf.FieldMask update_mask = 4; */
        if (message.updateMask)
            FieldMask.internalBinaryWrite(message.updateMask, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 5; */
        if (message.forceOnly.length) {
            writer.tag(5, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.forceOnly.length; i++)
                writer.int32(message.forceOnly[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.UpdateAdminOverrideRequest
 */
export const UpdateAdminOverrideRequest = new UpdateAdminOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteAdminOverrideRequest$Type extends MessageType<DeleteAdminOverrideRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.DeleteAdminOverrideRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "force", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "force_only", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.api.serviceusage.v1beta1.QuotaSafetyCheck", QuotaSafetyCheck] }
        ]);
    }
    create(value?: PartialMessage<DeleteAdminOverrideRequest>): DeleteAdminOverrideRequest {
        const message = { name: "", force: false, forceOnly: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeleteAdminOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteAdminOverrideRequest): DeleteAdminOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* bool force */ 2:
                    message.force = reader.bool();
                    break;
                case /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.forceOnly.push(reader.int32());
                    else
                        message.forceOnly.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DeleteAdminOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* bool force = 2; */
        if (message.force !== false)
            writer.tag(2, WireType.Varint).bool(message.force);
        /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 3; */
        if (message.forceOnly.length) {
            writer.tag(3, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.forceOnly.length; i++)
                writer.int32(message.forceOnly[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.DeleteAdminOverrideRequest
 */
export const DeleteAdminOverrideRequest = new DeleteAdminOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListAdminOverridesRequest$Type extends MessageType<ListAdminOverridesRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ListAdminOverridesRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListAdminOverridesRequest>): ListAdminOverridesRequest {
        const message = { parent: "", pageSize: 0, pageToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListAdminOverridesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListAdminOverridesRequest): ListAdminOverridesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* int32 page_size */ 2:
                    message.pageSize = reader.int32();
                    break;
                case /* string page_token */ 3:
                    message.pageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListAdminOverridesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.parent);
        /* int32 page_size = 2; */
        if (message.pageSize !== 0)
            writer.tag(2, WireType.Varint).int32(message.pageSize);
        /* string page_token = 3; */
        if (message.pageToken !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.pageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ListAdminOverridesRequest
 */
export const ListAdminOverridesRequest = new ListAdminOverridesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListAdminOverridesResponse$Type extends MessageType<ListAdminOverridesResponse> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ListAdminOverridesResponse", [
            { no: 1, name: "overrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => QuotaOverride },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListAdminOverridesResponse>): ListAdminOverridesResponse {
        const message = { overrides: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListAdminOverridesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListAdminOverridesResponse): ListAdminOverridesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides */ 1:
                    message.overrides.push(QuotaOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListAdminOverridesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1; */
        for (let i = 0; i < message.overrides.length; i++)
            QuotaOverride.internalBinaryWrite(message.overrides[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ListAdminOverridesResponse
 */
export const ListAdminOverridesResponse = new ListAdminOverridesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BatchCreateAdminOverridesResponse$Type extends MessageType<BatchCreateAdminOverridesResponse> {
    constructor() {
        super("google.api.serviceusage.v1beta1.BatchCreateAdminOverridesResponse", [
            { no: 1, name: "overrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => QuotaOverride }
        ]);
    }
    create(value?: PartialMessage<BatchCreateAdminOverridesResponse>): BatchCreateAdminOverridesResponse {
        const message = { overrides: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BatchCreateAdminOverridesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BatchCreateAdminOverridesResponse): BatchCreateAdminOverridesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides */ 1:
                    message.overrides.push(QuotaOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BatchCreateAdminOverridesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1; */
        for (let i = 0; i < message.overrides.length; i++)
            QuotaOverride.internalBinaryWrite(message.overrides[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.BatchCreateAdminOverridesResponse
 */
export const BatchCreateAdminOverridesResponse = new BatchCreateAdminOverridesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ImportAdminOverridesRequest$Type extends MessageType<ImportAdminOverridesRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ImportAdminOverridesRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "inline_source", kind: "message", oneof: "source", T: () => OverrideInlineSource },
            { no: 3, name: "force", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "force_only", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.api.serviceusage.v1beta1.QuotaSafetyCheck", QuotaSafetyCheck] }
        ]);
    }
    create(value?: PartialMessage<ImportAdminOverridesRequest>): ImportAdminOverridesRequest {
        const message = { parent: "", source: { oneofKind: undefined }, force: false, forceOnly: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ImportAdminOverridesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ImportAdminOverridesRequest): ImportAdminOverridesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* google.api.serviceusage.v1beta1.OverrideInlineSource inline_source */ 2:
                    message.source = {
                        oneofKind: "inlineSource",
                        inlineSource: OverrideInlineSource.internalBinaryRead(reader, reader.uint32(), options, (message.source as any).inlineSource)
                    };
                    break;
                case /* bool force */ 3:
                    message.force = reader.bool();
                    break;
                case /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.forceOnly.push(reader.int32());
                    else
                        message.forceOnly.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ImportAdminOverridesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.parent);
        /* google.api.serviceusage.v1beta1.OverrideInlineSource inline_source = 2; */
        if (message.source.oneofKind === "inlineSource")
            OverrideInlineSource.internalBinaryWrite(message.source.inlineSource, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool force = 3; */
        if (message.force !== false)
            writer.tag(3, WireType.Varint).bool(message.force);
        /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4; */
        if (message.forceOnly.length) {
            writer.tag(4, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.forceOnly.length; i++)
                writer.int32(message.forceOnly[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ImportAdminOverridesRequest
 */
export const ImportAdminOverridesRequest = new ImportAdminOverridesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ImportAdminOverridesResponse$Type extends MessageType<ImportAdminOverridesResponse> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ImportAdminOverridesResponse", [
            { no: 1, name: "overrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => QuotaOverride }
        ]);
    }
    create(value?: PartialMessage<ImportAdminOverridesResponse>): ImportAdminOverridesResponse {
        const message = { overrides: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ImportAdminOverridesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ImportAdminOverridesResponse): ImportAdminOverridesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides */ 1:
                    message.overrides.push(QuotaOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ImportAdminOverridesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1; */
        for (let i = 0; i < message.overrides.length; i++)
            QuotaOverride.internalBinaryWrite(message.overrides[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ImportAdminOverridesResponse
 */
export const ImportAdminOverridesResponse = new ImportAdminOverridesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ImportAdminOverridesMetadata$Type extends MessageType<ImportAdminOverridesMetadata> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ImportAdminOverridesMetadata", []);
    }
    create(value?: PartialMessage<ImportAdminOverridesMetadata>): ImportAdminOverridesMetadata {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ImportAdminOverridesMetadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ImportAdminOverridesMetadata): ImportAdminOverridesMetadata {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ImportAdminOverridesMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ImportAdminOverridesMetadata
 */
export const ImportAdminOverridesMetadata = new ImportAdminOverridesMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateConsumerOverrideRequest$Type extends MessageType<CreateConsumerOverrideRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.CreateConsumerOverrideRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "override", kind: "message", T: () => QuotaOverride },
            { no: 3, name: "force", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "force_only", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.api.serviceusage.v1beta1.QuotaSafetyCheck", QuotaSafetyCheck] }
        ]);
    }
    create(value?: PartialMessage<CreateConsumerOverrideRequest>): CreateConsumerOverrideRequest {
        const message = { parent: "", force: false, forceOnly: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CreateConsumerOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateConsumerOverrideRequest): CreateConsumerOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* google.api.serviceusage.v1beta1.QuotaOverride override */ 2:
                    message.override = QuotaOverride.internalBinaryRead(reader, reader.uint32(), options, message.override);
                    break;
                case /* bool force */ 3:
                    message.force = reader.bool();
                    break;
                case /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.forceOnly.push(reader.int32());
                    else
                        message.forceOnly.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CreateConsumerOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.parent);
        /* google.api.serviceusage.v1beta1.QuotaOverride override = 2; */
        if (message.override)
            QuotaOverride.internalBinaryWrite(message.override, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool force = 3; */
        if (message.force !== false)
            writer.tag(3, WireType.Varint).bool(message.force);
        /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4; */
        if (message.forceOnly.length) {
            writer.tag(4, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.forceOnly.length; i++)
                writer.int32(message.forceOnly[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.CreateConsumerOverrideRequest
 */
export const CreateConsumerOverrideRequest = new CreateConsumerOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateConsumerOverrideRequest$Type extends MessageType<UpdateConsumerOverrideRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.UpdateConsumerOverrideRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "override", kind: "message", T: () => QuotaOverride },
            { no: 3, name: "force", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "update_mask", kind: "message", T: () => FieldMask },
            { no: 5, name: "force_only", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.api.serviceusage.v1beta1.QuotaSafetyCheck", QuotaSafetyCheck] }
        ]);
    }
    create(value?: PartialMessage<UpdateConsumerOverrideRequest>): UpdateConsumerOverrideRequest {
        const message = { name: "", force: false, forceOnly: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdateConsumerOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateConsumerOverrideRequest): UpdateConsumerOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* google.api.serviceusage.v1beta1.QuotaOverride override */ 2:
                    message.override = QuotaOverride.internalBinaryRead(reader, reader.uint32(), options, message.override);
                    break;
                case /* bool force */ 3:
                    message.force = reader.bool();
                    break;
                case /* google.protobuf.FieldMask update_mask */ 4:
                    message.updateMask = FieldMask.internalBinaryRead(reader, reader.uint32(), options, message.updateMask);
                    break;
                case /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only */ 5:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.forceOnly.push(reader.int32());
                    else
                        message.forceOnly.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdateConsumerOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* google.api.serviceusage.v1beta1.QuotaOverride override = 2; */
        if (message.override)
            QuotaOverride.internalBinaryWrite(message.override, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool force = 3; */
        if (message.force !== false)
            writer.tag(3, WireType.Varint).bool(message.force);
        /* google.protobuf.FieldMask update_mask = 4; */
        if (message.updateMask)
            FieldMask.internalBinaryWrite(message.updateMask, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 5; */
        if (message.forceOnly.length) {
            writer.tag(5, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.forceOnly.length; i++)
                writer.int32(message.forceOnly[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.UpdateConsumerOverrideRequest
 */
export const UpdateConsumerOverrideRequest = new UpdateConsumerOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteConsumerOverrideRequest$Type extends MessageType<DeleteConsumerOverrideRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.DeleteConsumerOverrideRequest", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "force", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "force_only", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.api.serviceusage.v1beta1.QuotaSafetyCheck", QuotaSafetyCheck] }
        ]);
    }
    create(value?: PartialMessage<DeleteConsumerOverrideRequest>): DeleteConsumerOverrideRequest {
        const message = { name: "", force: false, forceOnly: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeleteConsumerOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteConsumerOverrideRequest): DeleteConsumerOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* bool force */ 2:
                    message.force = reader.bool();
                    break;
                case /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.forceOnly.push(reader.int32());
                    else
                        message.forceOnly.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DeleteConsumerOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* bool force = 2; */
        if (message.force !== false)
            writer.tag(2, WireType.Varint).bool(message.force);
        /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 3; */
        if (message.forceOnly.length) {
            writer.tag(3, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.forceOnly.length; i++)
                writer.int32(message.forceOnly[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.DeleteConsumerOverrideRequest
 */
export const DeleteConsumerOverrideRequest = new DeleteConsumerOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListConsumerOverridesRequest$Type extends MessageType<ListConsumerOverridesRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ListConsumerOverridesRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListConsumerOverridesRequest>): ListConsumerOverridesRequest {
        const message = { parent: "", pageSize: 0, pageToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListConsumerOverridesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListConsumerOverridesRequest): ListConsumerOverridesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* int32 page_size */ 2:
                    message.pageSize = reader.int32();
                    break;
                case /* string page_token */ 3:
                    message.pageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListConsumerOverridesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.parent);
        /* int32 page_size = 2; */
        if (message.pageSize !== 0)
            writer.tag(2, WireType.Varint).int32(message.pageSize);
        /* string page_token = 3; */
        if (message.pageToken !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.pageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ListConsumerOverridesRequest
 */
export const ListConsumerOverridesRequest = new ListConsumerOverridesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListConsumerOverridesResponse$Type extends MessageType<ListConsumerOverridesResponse> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ListConsumerOverridesResponse", [
            { no: 1, name: "overrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => QuotaOverride },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListConsumerOverridesResponse>): ListConsumerOverridesResponse {
        const message = { overrides: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListConsumerOverridesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListConsumerOverridesResponse): ListConsumerOverridesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides */ 1:
                    message.overrides.push(QuotaOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListConsumerOverridesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1; */
        for (let i = 0; i < message.overrides.length; i++)
            QuotaOverride.internalBinaryWrite(message.overrides[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ListConsumerOverridesResponse
 */
export const ListConsumerOverridesResponse = new ListConsumerOverridesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BatchCreateConsumerOverridesResponse$Type extends MessageType<BatchCreateConsumerOverridesResponse> {
    constructor() {
        super("google.api.serviceusage.v1beta1.BatchCreateConsumerOverridesResponse", [
            { no: 1, name: "overrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => QuotaOverride }
        ]);
    }
    create(value?: PartialMessage<BatchCreateConsumerOverridesResponse>): BatchCreateConsumerOverridesResponse {
        const message = { overrides: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BatchCreateConsumerOverridesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BatchCreateConsumerOverridesResponse): BatchCreateConsumerOverridesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides */ 1:
                    message.overrides.push(QuotaOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BatchCreateConsumerOverridesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1; */
        for (let i = 0; i < message.overrides.length; i++)
            QuotaOverride.internalBinaryWrite(message.overrides[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.BatchCreateConsumerOverridesResponse
 */
export const BatchCreateConsumerOverridesResponse = new BatchCreateConsumerOverridesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ImportConsumerOverridesRequest$Type extends MessageType<ImportConsumerOverridesRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ImportConsumerOverridesRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "inline_source", kind: "message", oneof: "source", T: () => OverrideInlineSource },
            { no: 3, name: "force", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "force_only", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.api.serviceusage.v1beta1.QuotaSafetyCheck", QuotaSafetyCheck] }
        ]);
    }
    create(value?: PartialMessage<ImportConsumerOverridesRequest>): ImportConsumerOverridesRequest {
        const message = { parent: "", source: { oneofKind: undefined }, force: false, forceOnly: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ImportConsumerOverridesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ImportConsumerOverridesRequest): ImportConsumerOverridesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                case /* google.api.serviceusage.v1beta1.OverrideInlineSource inline_source */ 2:
                    message.source = {
                        oneofKind: "inlineSource",
                        inlineSource: OverrideInlineSource.internalBinaryRead(reader, reader.uint32(), options, (message.source as any).inlineSource)
                    };
                    break;
                case /* bool force */ 3:
                    message.force = reader.bool();
                    break;
                case /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.forceOnly.push(reader.int32());
                    else
                        message.forceOnly.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ImportConsumerOverridesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.parent);
        /* google.api.serviceusage.v1beta1.OverrideInlineSource inline_source = 2; */
        if (message.source.oneofKind === "inlineSource")
            OverrideInlineSource.internalBinaryWrite(message.source.inlineSource, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool force = 3; */
        if (message.force !== false)
            writer.tag(3, WireType.Varint).bool(message.force);
        /* repeated google.api.serviceusage.v1beta1.QuotaSafetyCheck force_only = 4; */
        if (message.forceOnly.length) {
            writer.tag(4, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.forceOnly.length; i++)
                writer.int32(message.forceOnly[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ImportConsumerOverridesRequest
 */
export const ImportConsumerOverridesRequest = new ImportConsumerOverridesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ImportConsumerOverridesResponse$Type extends MessageType<ImportConsumerOverridesResponse> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ImportConsumerOverridesResponse", [
            { no: 1, name: "overrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => QuotaOverride }
        ]);
    }
    create(value?: PartialMessage<ImportConsumerOverridesResponse>): ImportConsumerOverridesResponse {
        const message = { overrides: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ImportConsumerOverridesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ImportConsumerOverridesResponse): ImportConsumerOverridesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides */ 1:
                    message.overrides.push(QuotaOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ImportConsumerOverridesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.serviceusage.v1beta1.QuotaOverride overrides = 1; */
        for (let i = 0; i < message.overrides.length; i++)
            QuotaOverride.internalBinaryWrite(message.overrides[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ImportConsumerOverridesResponse
 */
export const ImportConsumerOverridesResponse = new ImportConsumerOverridesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ImportConsumerOverridesMetadata$Type extends MessageType<ImportConsumerOverridesMetadata> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ImportConsumerOverridesMetadata", []);
    }
    create(value?: PartialMessage<ImportConsumerOverridesMetadata>): ImportConsumerOverridesMetadata {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ImportConsumerOverridesMetadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ImportConsumerOverridesMetadata): ImportConsumerOverridesMetadata {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ImportConsumerOverridesMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ImportConsumerOverridesMetadata
 */
export const ImportConsumerOverridesMetadata = new ImportConsumerOverridesMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ImportAdminQuotaPoliciesResponse$Type extends MessageType<ImportAdminQuotaPoliciesResponse> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ImportAdminQuotaPoliciesResponse", [
            { no: 1, name: "policies", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AdminQuotaPolicy }
        ]);
    }
    create(value?: PartialMessage<ImportAdminQuotaPoliciesResponse>): ImportAdminQuotaPoliciesResponse {
        const message = { policies: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ImportAdminQuotaPoliciesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ImportAdminQuotaPoliciesResponse): ImportAdminQuotaPoliciesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.serviceusage.v1beta1.AdminQuotaPolicy policies */ 1:
                    message.policies.push(AdminQuotaPolicy.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ImportAdminQuotaPoliciesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.serviceusage.v1beta1.AdminQuotaPolicy policies = 1; */
        for (let i = 0; i < message.policies.length; i++)
            AdminQuotaPolicy.internalBinaryWrite(message.policies[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ImportAdminQuotaPoliciesResponse
 */
export const ImportAdminQuotaPoliciesResponse = new ImportAdminQuotaPoliciesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ImportAdminQuotaPoliciesMetadata$Type extends MessageType<ImportAdminQuotaPoliciesMetadata> {
    constructor() {
        super("google.api.serviceusage.v1beta1.ImportAdminQuotaPoliciesMetadata", []);
    }
    create(value?: PartialMessage<ImportAdminQuotaPoliciesMetadata>): ImportAdminQuotaPoliciesMetadata {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ImportAdminQuotaPoliciesMetadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ImportAdminQuotaPoliciesMetadata): ImportAdminQuotaPoliciesMetadata {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ImportAdminQuotaPoliciesMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.ImportAdminQuotaPoliciesMetadata
 */
export const ImportAdminQuotaPoliciesMetadata = new ImportAdminQuotaPoliciesMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateAdminQuotaPolicyMetadata$Type extends MessageType<CreateAdminQuotaPolicyMetadata> {
    constructor() {
        super("google.api.serviceusage.v1beta1.CreateAdminQuotaPolicyMetadata", []);
    }
    create(value?: PartialMessage<CreateAdminQuotaPolicyMetadata>): CreateAdminQuotaPolicyMetadata {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CreateAdminQuotaPolicyMetadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateAdminQuotaPolicyMetadata): CreateAdminQuotaPolicyMetadata {
        return target ?? this.create();
    }
    internalBinaryWrite(message: CreateAdminQuotaPolicyMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.CreateAdminQuotaPolicyMetadata
 */
export const CreateAdminQuotaPolicyMetadata = new CreateAdminQuotaPolicyMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateAdminQuotaPolicyMetadata$Type extends MessageType<UpdateAdminQuotaPolicyMetadata> {
    constructor() {
        super("google.api.serviceusage.v1beta1.UpdateAdminQuotaPolicyMetadata", []);
    }
    create(value?: PartialMessage<UpdateAdminQuotaPolicyMetadata>): UpdateAdminQuotaPolicyMetadata {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdateAdminQuotaPolicyMetadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateAdminQuotaPolicyMetadata): UpdateAdminQuotaPolicyMetadata {
        return target ?? this.create();
    }
    internalBinaryWrite(message: UpdateAdminQuotaPolicyMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.UpdateAdminQuotaPolicyMetadata
 */
export const UpdateAdminQuotaPolicyMetadata = new UpdateAdminQuotaPolicyMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteAdminQuotaPolicyMetadata$Type extends MessageType<DeleteAdminQuotaPolicyMetadata> {
    constructor() {
        super("google.api.serviceusage.v1beta1.DeleteAdminQuotaPolicyMetadata", []);
    }
    create(value?: PartialMessage<DeleteAdminQuotaPolicyMetadata>): DeleteAdminQuotaPolicyMetadata {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeleteAdminQuotaPolicyMetadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteAdminQuotaPolicyMetadata): DeleteAdminQuotaPolicyMetadata {
        return target ?? this.create();
    }
    internalBinaryWrite(message: DeleteAdminQuotaPolicyMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.DeleteAdminQuotaPolicyMetadata
 */
export const DeleteAdminQuotaPolicyMetadata = new DeleteAdminQuotaPolicyMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateServiceIdentityRequest$Type extends MessageType<GenerateServiceIdentityRequest> {
    constructor() {
        super("google.api.serviceusage.v1beta1.GenerateServiceIdentityRequest", [
            { no: 1, name: "parent", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GenerateServiceIdentityRequest>): GenerateServiceIdentityRequest {
        const message = { parent: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenerateServiceIdentityRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateServiceIdentityRequest): GenerateServiceIdentityRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string parent */ 1:
                    message.parent = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenerateServiceIdentityRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string parent = 1; */
        if (message.parent !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.parent);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.GenerateServiceIdentityRequest
 */
export const GenerateServiceIdentityRequest = new GenerateServiceIdentityRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetServiceIdentityResponse$Type extends MessageType<GetServiceIdentityResponse> {
    constructor() {
        super("google.api.serviceusage.v1beta1.GetServiceIdentityResponse", [
            { no: 1, name: "identity", kind: "message", T: () => ServiceIdentity },
            { no: 2, name: "state", kind: "enum", T: () => ["google.api.serviceusage.v1beta1.GetServiceIdentityResponse.IdentityState", GetServiceIdentityResponse_IdentityState] }
        ]);
    }
    create(value?: PartialMessage<GetServiceIdentityResponse>): GetServiceIdentityResponse {
        const message = { state: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetServiceIdentityResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetServiceIdentityResponse): GetServiceIdentityResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.serviceusage.v1beta1.ServiceIdentity identity */ 1:
                    message.identity = ServiceIdentity.internalBinaryRead(reader, reader.uint32(), options, message.identity);
                    break;
                case /* google.api.serviceusage.v1beta1.GetServiceIdentityResponse.IdentityState state */ 2:
                    message.state = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetServiceIdentityResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.api.serviceusage.v1beta1.ServiceIdentity identity = 1; */
        if (message.identity)
            ServiceIdentity.internalBinaryWrite(message.identity, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.api.serviceusage.v1beta1.GetServiceIdentityResponse.IdentityState state = 2; */
        if (message.state !== 0)
            writer.tag(2, WireType.Varint).int32(message.state);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.GetServiceIdentityResponse
 */
export const GetServiceIdentityResponse = new GetServiceIdentityResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetServiceIdentityMetadata$Type extends MessageType<GetServiceIdentityMetadata> {
    constructor() {
        super("google.api.serviceusage.v1beta1.GetServiceIdentityMetadata", []);
    }
    create(value?: PartialMessage<GetServiceIdentityMetadata>): GetServiceIdentityMetadata {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetServiceIdentityMetadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetServiceIdentityMetadata): GetServiceIdentityMetadata {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetServiceIdentityMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.serviceusage.v1beta1.GetServiceIdentityMetadata
 */
export const GetServiceIdentityMetadata = new GetServiceIdentityMetadata$Type();
/**
 * @generated ServiceType for protobuf service google.api.serviceusage.v1beta1.ServiceUsage
 */
export const ServiceUsage = new ServiceType("google.api.serviceusage.v1beta1.ServiceUsage", [
    { name: "EnableService", options: { "google.api.http": { post: "/v1beta1/{name=*/*/services/*}:enable", body: "*" }, "google.longrunning.operation_info": { responseType: "google.protobuf.Empty", metadataType: "OperationMetadata" } }, I: EnableServiceRequest, O: Operation },
    { name: "DisableService", options: { "google.api.http": { post: "/v1beta1/{name=*/*/services/*}:disable", body: "*" }, "google.longrunning.operation_info": { responseType: "google.protobuf.Empty", metadataType: "OperationMetadata" } }, I: DisableServiceRequest, O: Operation },
    { name: "GetService", options: { "google.api.http": { get: "/v1beta1/{name=*/*/services/*}" } }, I: GetServiceRequest, O: Service },
    { name: "ListServices", options: { "google.api.http": { get: "/v1beta1/{parent=*/*}/services" } }, I: ListServicesRequest, O: ListServicesResponse },
    { name: "BatchEnableServices", options: { "google.api.http": { post: "/v1beta1/{parent=*/*}/services:batchEnable", body: "*" }, "google.longrunning.operation_info": { responseType: "google.protobuf.Empty", metadataType: "OperationMetadata" } }, I: BatchEnableServicesRequest, O: Operation },
    { name: "ListConsumerQuotaMetrics", options: { "google.api.http": { get: "/v1beta1/{parent=*/*/services/*}/consumerQuotaMetrics" } }, I: ListConsumerQuotaMetricsRequest, O: ListConsumerQuotaMetricsResponse },
    { name: "GetConsumerQuotaMetric", options: { "google.api.http": { get: "/v1beta1/{name=*/*/services/*/consumerQuotaMetrics/*}" } }, I: GetConsumerQuotaMetricRequest, O: ConsumerQuotaMetric },
    { name: "GetConsumerQuotaLimit", options: { "google.api.http": { get: "/v1beta1/{name=*/*/services/*/consumerQuotaMetrics/*/limits/*}" } }, I: GetConsumerQuotaLimitRequest, O: ConsumerQuotaLimit },
    { name: "CreateAdminOverride", options: { "google.api.http": { post: "/v1beta1/{parent=*/*/services/*/consumerQuotaMetrics/*/limits/*}/adminOverrides", body: "override" }, "google.longrunning.operation_info": { responseType: "QuotaOverride", metadataType: "OperationMetadata" } }, I: CreateAdminOverrideRequest, O: Operation },
    { name: "UpdateAdminOverride", options: { "google.api.http": { patch: "/v1beta1/{name=*/*/services/*/consumerQuotaMetrics/*/limits/*/adminOverrides/*}", body: "override" }, "google.longrunning.operation_info": { responseType: "QuotaOverride", metadataType: "OperationMetadata" } }, I: UpdateAdminOverrideRequest, O: Operation },
    { name: "DeleteAdminOverride", options: { "google.api.http": { delete: "/v1beta1/{name=*/*/services/*/consumerQuotaMetrics/*/limits/*/adminOverrides/*}" }, "google.longrunning.operation_info": { responseType: "google.protobuf.Empty", metadataType: "OperationMetadata" } }, I: DeleteAdminOverrideRequest, O: Operation },
    { name: "ListAdminOverrides", options: { "google.api.http": { get: "/v1beta1/{parent=*/*/services/*/consumerQuotaMetrics/*/limits/*}/adminOverrides" } }, I: ListAdminOverridesRequest, O: ListAdminOverridesResponse },
    { name: "ImportAdminOverrides", options: { "google.api.http": { post: "/v1beta1/{parent=*/*/services/*}/consumerQuotaMetrics:importAdminOverrides", body: "*" }, "google.longrunning.operation_info": { responseType: "ImportAdminOverridesResponse", metadataType: "ImportAdminOverridesMetadata" } }, I: ImportAdminOverridesRequest, O: Operation },
    { name: "CreateConsumerOverride", options: { "google.api.http": { post: "/v1beta1/{parent=*/*/services/*/consumerQuotaMetrics/*/limits/*}/consumerOverrides", body: "override" }, "google.longrunning.operation_info": { responseType: "QuotaOverride", metadataType: "OperationMetadata" } }, I: CreateConsumerOverrideRequest, O: Operation },
    { name: "UpdateConsumerOverride", options: { "google.api.http": { patch: "/v1beta1/{name=*/*/services/*/consumerQuotaMetrics/*/limits/*/consumerOverrides/*}", body: "override" }, "google.longrunning.operation_info": { responseType: "QuotaOverride", metadataType: "OperationMetadata" } }, I: UpdateConsumerOverrideRequest, O: Operation },
    { name: "DeleteConsumerOverride", options: { "google.api.http": { delete: "/v1beta1/{name=*/*/services/*/consumerQuotaMetrics/*/limits/*/consumerOverrides/*}" }, "google.longrunning.operation_info": { responseType: "google.protobuf.Empty", metadataType: "OperationMetadata" } }, I: DeleteConsumerOverrideRequest, O: Operation },
    { name: "ListConsumerOverrides", options: { "google.api.http": { get: "/v1beta1/{parent=*/*/services/*/consumerQuotaMetrics/*/limits/*}/consumerOverrides" } }, I: ListConsumerOverridesRequest, O: ListConsumerOverridesResponse },
    { name: "ImportConsumerOverrides", options: { "google.api.http": { post: "/v1beta1/{parent=*/*/services/*}/consumerQuotaMetrics:importConsumerOverrides", body: "*" }, "google.longrunning.operation_info": { responseType: "ImportConsumerOverridesResponse", metadataType: "ImportConsumerOverridesMetadata" } }, I: ImportConsumerOverridesRequest, O: Operation },
    { name: "GenerateServiceIdentity", options: { "google.api.http": { post: "/v1beta1/{parent=*/*/services/*}:generateServiceIdentity" }, "google.longrunning.operation_info": { responseType: "ServiceIdentity", metadataType: "google.protobuf.Empty" } }, I: GenerateServiceIdentityRequest, O: Operation }
], { "google.api.default_host": "serviceusage.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only,https://www.googleapis.com/auth/service.management" });
