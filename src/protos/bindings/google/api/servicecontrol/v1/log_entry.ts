// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "google/api/servicecontrol/v1/log_entry.proto" (package "google.api.servicecontrol.v1", syntax proto3)
// tslint:disable
//
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Struct } from "../../../protobuf/struct";
import { Any } from "../../../protobuf/any";
import { HttpRequest } from "./http_request";
import { LogSeverity } from "../../../logging/type/log_severity";
import { Timestamp } from "../../../protobuf/timestamp";
/**
 * An individual log entry.
 *
 * @generated from protobuf message google.api.servicecontrol.v1.LogEntry
 */
export interface LogEntry {
    /**
     * Required. The log to which this log entry belongs. Examples: `"syslog"`,
     * `"book_log"`.
     *
     * @generated from protobuf field: string name = 10;
     */
    name: string;
    /**
     * The time the event described by the log entry occurred. If
     * omitted, defaults to operation start time.
     *
     * @generated from protobuf field: google.protobuf.Timestamp timestamp = 11;
     */
    timestamp?: Timestamp;
    /**
     * The severity of the log entry. The default value is
     * `LogSeverity.DEFAULT`.
     *
     * @generated from protobuf field: google.logging.type.LogSeverity severity = 12;
     */
    severity: LogSeverity;
    /**
     * Optional. Information about the HTTP request associated with this
     * log entry, if applicable.
     *
     * @generated from protobuf field: google.api.servicecontrol.v1.HttpRequest http_request = 14;
     */
    httpRequest?: HttpRequest;
    /**
     * Optional. Resource name of the trace associated with the log entry, if any.
     * If this field contains a relative resource name, you can assume the name is
     * relative to `//tracing.googleapis.com`. Example:
     * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
     *
     * @generated from protobuf field: string trace = 15;
     */
    trace: string;
    /**
     * A unique ID for the log entry used for deduplication. If omitted,
     * the implementation will generate one based on operation_id.
     *
     * @generated from protobuf field: string insert_id = 4;
     */
    insertId: string;
    /**
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     *
     * @generated from protobuf field: map<string, string> labels = 13;
     */
    labels: {
        [key: string]: string;
    };
    /**
     * @generated from protobuf oneof: payload
     */
    payload: {
        oneofKind: "protoPayload";
        /**
         * The log entry payload, represented as a protocol buffer that is
         * expressed as a JSON object. The only accepted type currently is
         * [AuditLog][google.cloud.audit.AuditLog].
         *
         * @generated from protobuf field: google.protobuf.Any proto_payload = 2;
         */
        protoPayload: Any;
    } | {
        oneofKind: "textPayload";
        /**
         * The log entry payload, represented as a Unicode string (UTF-8).
         *
         * @generated from protobuf field: string text_payload = 3;
         */
        textPayload: string;
    } | {
        oneofKind: "structPayload";
        /**
         * The log entry payload, represented as a structure that
         * is expressed as a JSON object.
         *
         * @generated from protobuf field: google.protobuf.Struct struct_payload = 6;
         */
        structPayload: Struct;
    } | {
        oneofKind: undefined;
    };
    /**
     * Optional. Information about an operation associated with the log entry, if
     * applicable.
     *
     * @generated from protobuf field: google.api.servicecontrol.v1.LogEntryOperation operation = 16;
     */
    operation?: LogEntryOperation;
    /**
     * Optional. Source code location information associated with the log entry,
     * if any.
     *
     * @generated from protobuf field: google.api.servicecontrol.v1.LogEntrySourceLocation source_location = 17;
     */
    sourceLocation?: LogEntrySourceLocation;
}
/**
 * Additional information about a potentially long-running operation with which
 * a log entry is associated.
 *
 * @generated from protobuf message google.api.servicecontrol.v1.LogEntryOperation
 */
export interface LogEntryOperation {
    /**
     * Optional. An arbitrary operation identifier. Log entries with the
     * same identifier are assumed to be part of the same operation.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * Optional. An arbitrary producer identifier. The combination of
     * `id` and `producer` must be globally unique.  Examples for `producer`:
     * `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
     *
     * @generated from protobuf field: string producer = 2;
     */
    producer: string;
    /**
     * Optional. Set this to True if this is the first log entry in the operation.
     *
     * @generated from protobuf field: bool first = 3;
     */
    first: boolean;
    /**
     * Optional. Set this to True if this is the last log entry in the operation.
     *
     * @generated from protobuf field: bool last = 4;
     */
    last: boolean;
}
/**
 * Additional information about the source code location that produced the log
 * entry.
 *
 * @generated from protobuf message google.api.servicecontrol.v1.LogEntrySourceLocation
 */
export interface LogEntrySourceLocation {
    /**
     * Optional. Source file name. Depending on the runtime environment, this
     * might be a simple name or a fully-qualified name.
     *
     * @generated from protobuf field: string file = 1;
     */
    file: string;
    /**
     * Optional. Line within the source file. 1-based; 0 indicates no line number
     * available.
     *
     * @generated from protobuf field: int64 line = 2;
     */
    line: bigint;
    /**
     * Optional. Human-readable name of the function or method being invoked, with
     * optional context such as the class or package name. This information may be
     * used in contexts such as the logs viewer, where a file and line number are
     * less meaningful. The format can vary by language. For example:
     * `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function`
     * (Python).
     *
     * @generated from protobuf field: string function = 3;
     */
    function: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class LogEntry$Type extends MessageType<LogEntry> {
    constructor() {
        super("google.api.servicecontrol.v1.LogEntry", [
            { no: 10, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "timestamp", kind: "message", T: () => Timestamp },
            { no: 12, name: "severity", kind: "enum", T: () => ["google.logging.type.LogSeverity", LogSeverity] },
            { no: 14, name: "http_request", kind: "message", T: () => HttpRequest },
            { no: 15, name: "trace", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "insert_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "labels", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } },
            { no: 2, name: "proto_payload", kind: "message", oneof: "payload", T: () => Any },
            { no: 3, name: "text_payload", kind: "scalar", oneof: "payload", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "struct_payload", kind: "message", oneof: "payload", T: () => Struct },
            { no: 16, name: "operation", kind: "message", T: () => LogEntryOperation },
            { no: 17, name: "source_location", kind: "message", T: () => LogEntrySourceLocation }
        ]);
    }
    create(value?: PartialMessage<LogEntry>): LogEntry {
        const message = { name: "", severity: 0, trace: "", insertId: "", labels: {}, payload: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LogEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LogEntry): LogEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 10:
                    message.name = reader.string();
                    break;
                case /* google.protobuf.Timestamp timestamp */ 11:
                    message.timestamp = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.timestamp);
                    break;
                case /* google.logging.type.LogSeverity severity */ 12:
                    message.severity = reader.int32();
                    break;
                case /* google.api.servicecontrol.v1.HttpRequest http_request */ 14:
                    message.httpRequest = HttpRequest.internalBinaryRead(reader, reader.uint32(), options, message.httpRequest);
                    break;
                case /* string trace */ 15:
                    message.trace = reader.string();
                    break;
                case /* string insert_id */ 4:
                    message.insertId = reader.string();
                    break;
                case /* map<string, string> labels */ 13:
                    this.binaryReadMap13(message.labels, reader, options);
                    break;
                case /* google.protobuf.Any proto_payload */ 2:
                    message.payload = {
                        oneofKind: "protoPayload",
                        protoPayload: Any.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).protoPayload)
                    };
                    break;
                case /* string text_payload */ 3:
                    message.payload = {
                        oneofKind: "textPayload",
                        textPayload: reader.string()
                    };
                    break;
                case /* google.protobuf.Struct struct_payload */ 6:
                    message.payload = {
                        oneofKind: "structPayload",
                        structPayload: Struct.internalBinaryRead(reader, reader.uint32(), options, (message.payload as any).structPayload)
                    };
                    break;
                case /* google.api.servicecontrol.v1.LogEntryOperation operation */ 16:
                    message.operation = LogEntryOperation.internalBinaryRead(reader, reader.uint32(), options, message.operation);
                    break;
                case /* google.api.servicecontrol.v1.LogEntrySourceLocation source_location */ 17:
                    message.sourceLocation = LogEntrySourceLocation.internalBinaryRead(reader, reader.uint32(), options, message.sourceLocation);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap13(map: LogEntry["labels"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof LogEntry["labels"] | undefined, val: LogEntry["labels"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.string();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field google.api.servicecontrol.v1.LogEntry.labels");
            }
        }
        map[key ?? ""] = val ?? "";
    }
    internalBinaryWrite(message: LogEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 10; */
        if (message.name !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.name);
        /* google.protobuf.Timestamp timestamp = 11; */
        if (message.timestamp)
            Timestamp.internalBinaryWrite(message.timestamp, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* google.logging.type.LogSeverity severity = 12; */
        if (message.severity !== 0)
            writer.tag(12, WireType.Varint).int32(message.severity);
        /* google.api.servicecontrol.v1.HttpRequest http_request = 14; */
        if (message.httpRequest)
            HttpRequest.internalBinaryWrite(message.httpRequest, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* string trace = 15; */
        if (message.trace !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.trace);
        /* string insert_id = 4; */
        if (message.insertId !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.insertId);
        /* map<string, string> labels = 13; */
        for (let k of Object.keys(message.labels))
            writer.tag(13, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.LengthDelimited).string(message.labels[k]).join();
        /* google.protobuf.Any proto_payload = 2; */
        if (message.payload.oneofKind === "protoPayload")
            Any.internalBinaryWrite(message.payload.protoPayload, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string text_payload = 3; */
        if (message.payload.oneofKind === "textPayload")
            writer.tag(3, WireType.LengthDelimited).string(message.payload.textPayload);
        /* google.protobuf.Struct struct_payload = 6; */
        if (message.payload.oneofKind === "structPayload")
            Struct.internalBinaryWrite(message.payload.structPayload, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* google.api.servicecontrol.v1.LogEntryOperation operation = 16; */
        if (message.operation)
            LogEntryOperation.internalBinaryWrite(message.operation, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* google.api.servicecontrol.v1.LogEntrySourceLocation source_location = 17; */
        if (message.sourceLocation)
            LogEntrySourceLocation.internalBinaryWrite(message.sourceLocation, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicecontrol.v1.LogEntry
 */
export const LogEntry = new LogEntry$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogEntryOperation$Type extends MessageType<LogEntryOperation> {
    constructor() {
        super("google.api.servicecontrol.v1.LogEntryOperation", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "producer", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "first", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "last", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<LogEntryOperation>): LogEntryOperation {
        const message = { id: "", producer: "", first: false, last: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LogEntryOperation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LogEntryOperation): LogEntryOperation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                case /* string producer */ 2:
                    message.producer = reader.string();
                    break;
                case /* bool first */ 3:
                    message.first = reader.bool();
                    break;
                case /* bool last */ 4:
                    message.last = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LogEntryOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        /* string producer = 2; */
        if (message.producer !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.producer);
        /* bool first = 3; */
        if (message.first !== false)
            writer.tag(3, WireType.Varint).bool(message.first);
        /* bool last = 4; */
        if (message.last !== false)
            writer.tag(4, WireType.Varint).bool(message.last);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicecontrol.v1.LogEntryOperation
 */
export const LogEntryOperation = new LogEntryOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogEntrySourceLocation$Type extends MessageType<LogEntrySourceLocation> {
    constructor() {
        super("google.api.servicecontrol.v1.LogEntrySourceLocation", [
            { no: 1, name: "file", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "line", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "function", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LogEntrySourceLocation>): LogEntrySourceLocation {
        const message = { file: "", line: 0n, function: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LogEntrySourceLocation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LogEntrySourceLocation): LogEntrySourceLocation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string file */ 1:
                    message.file = reader.string();
                    break;
                case /* int64 line */ 2:
                    message.line = reader.int64().toBigInt();
                    break;
                case /* string function */ 3:
                    message.function = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LogEntrySourceLocation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string file = 1; */
        if (message.file !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.file);
        /* int64 line = 2; */
        if (message.line !== 0n)
            writer.tag(2, WireType.Varint).int64(message.line);
        /* string function = 3; */
        if (message.function !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.function);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.servicecontrol.v1.LogEntrySourceLocation
 */
export const LogEntrySourceLocation = new LogEntrySourceLocation$Type();
