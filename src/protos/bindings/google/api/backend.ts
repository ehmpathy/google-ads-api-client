// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "google/api/backend.proto" (package "google.api", syntax proto3)
// tslint:disable
//
// Copyright 2015 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * `Backend` defines the backend configuration for a service.
 *
 * @generated from protobuf message google.api.Backend
 */
export interface Backend {
    /**
     * A list of API backend rules that apply to individual API methods.
     *
     * **NOTE:** All service configuration rules follow "last one wins" order.
     *
     * @generated from protobuf field: repeated google.api.BackendRule rules = 1;
     */
    rules: BackendRule[];
}
/**
 * A backend rule provides configuration for an individual API element.
 *
 * @generated from protobuf message google.api.BackendRule
 */
export interface BackendRule {
    /**
     * Selects the methods to which this rule applies.
     *
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     *
     * @generated from protobuf field: string selector = 1;
     */
    selector: string;
    /**
     * The address of the API backend.
     *
     * The scheme is used to determine the backend protocol and security.
     * The following schemes are accepted:
     *
     *    SCHEME        PROTOCOL    SECURITY
     *    http://       HTTP        None
     *    https://      HTTP        TLS
     *    grpc://       gRPC        None
     *    grpcs://      gRPC        TLS
     *
     * It is recommended to explicitly include a scheme. Leaving out the scheme
     * may cause constrasting behaviors across platforms.
     *
     * If the port is unspecified, the default is:
     * - 80 for schemes without TLS
     * - 443 for schemes with TLS
     *
     * For HTTP backends, use [protocol][google.api.BackendRule.protocol]
     * to specify the protocol version.
     *
     * @generated from protobuf field: string address = 2;
     */
    address: string;
    /**
     * The number of seconds to wait for a response from a request. The default
     * varies based on the request protocol and deployment environment.
     *
     * @generated from protobuf field: double deadline = 3;
     */
    deadline: number;
    /**
     * Minimum deadline in seconds needed for this method. Calls having deadline
     * value lower than this will be rejected.
     *
     * @generated from protobuf field: double min_deadline = 4;
     */
    minDeadline: number;
    /**
     * The number of seconds to wait for the completion of a long running
     * operation. The default is no deadline.
     *
     * @generated from protobuf field: double operation_deadline = 5;
     */
    operationDeadline: number;
    /**
     * @generated from protobuf field: google.api.BackendRule.PathTranslation path_translation = 6;
     */
    pathTranslation: BackendRule_PathTranslation;
    /**
     * @generated from protobuf oneof: authentication
     */
    authentication: {
        oneofKind: "jwtAudience";
        /**
         * The JWT audience is used when generating a JWT ID token for the backend.
         * This ID token will be added in the HTTP "authorization" header, and sent
         * to the backend.
         *
         * @generated from protobuf field: string jwt_audience = 7;
         */
        jwtAudience: string;
    } | {
        oneofKind: "disableAuth";
        /**
         * When disable_auth is true, a JWT ID token won't be generated and the
         * original "Authorization" HTTP header will be preserved. If the header is
         * used to carry the original token and is expected by the backend, this
         * field must be set to true to preserve the header.
         *
         * @generated from protobuf field: bool disable_auth = 8;
         */
        disableAuth: boolean;
    } | {
        oneofKind: undefined;
    };
    /**
     * The protocol used for sending a request to the backend.
     * The supported values are "http/1.1" and "h2".
     *
     * The default value is inferred from the scheme in the
     * [address][google.api.BackendRule.address] field:
     *
     *    SCHEME        PROTOCOL
     *    http://       http/1.1
     *    https://      http/1.1
     *    grpc://       h2
     *    grpcs://      h2
     *
     * For secure HTTP backends (https://) that support HTTP/2, set this field
     * to "h2" for improved performance.
     *
     * Configuring this field to non-default values is only supported for secure
     * HTTP backends. This field will be ignored for all other backends.
     *
     * See
     * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
     * for more details on the supported values.
     *
     * @generated from protobuf field: string protocol = 9;
     */
    protocol: string;
}
/**
 * Path Translation specifies how to combine the backend address with the
 * request path in order to produce the appropriate forwarding URL for the
 * request.
 *
 * Path Translation is applicable only to HTTP-based backends. Backends which
 * do not accept requests over HTTP/HTTPS should leave `path_translation`
 * unspecified.
 *
 * @generated from protobuf enum google.api.BackendRule.PathTranslation
 */
export enum BackendRule_PathTranslation {
    /**
     * @generated from protobuf enum value: PATH_TRANSLATION_UNSPECIFIED = 0;
     */
    PATH_TRANSLATION_UNSPECIFIED = 0,
    /**
     * Use the backend address as-is, with no modification to the path. If the
     * URL pattern contains variables, the variable names and values will be
     * appended to the query string. If a query string parameter and a URL
     * pattern variable have the same name, this may result in duplicate keys in
     * the query string.
     *
     * # Examples
     *
     * Given the following operation config:
     *
     *     Method path:        /api/company/{cid}/user/{uid}
     *     Backend address:    https://example.cloudfunctions.net/getUser
     *
     * Requests to the following request paths will call the backend at the
     * translated path:
     *
     *     Request path: /api/company/widgetworks/user/johndoe
     *     Translated:
     *     https://example.cloudfunctions.net/getUser?cid=widgetworks&uid=johndoe
     *
     *     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
     *     Translated:
     *     https://example.cloudfunctions.net/getUser?timezone=EST&cid=widgetworks&uid=johndoe
     *
     * @generated from protobuf enum value: CONSTANT_ADDRESS = 1;
     */
    CONSTANT_ADDRESS = 1,
    /**
     * The request path will be appended to the backend address.
     *
     * # Examples
     *
     * Given the following operation config:
     *
     *     Method path:        /api/company/{cid}/user/{uid}
     *     Backend address:    https://example.appspot.com
     *
     * Requests to the following request paths will call the backend at the
     * translated path:
     *
     *     Request path: /api/company/widgetworks/user/johndoe
     *     Translated:
     *     https://example.appspot.com/api/company/widgetworks/user/johndoe
     *
     *     Request path: /api/company/widgetworks/user/johndoe?timezone=EST
     *     Translated:
     *     https://example.appspot.com/api/company/widgetworks/user/johndoe?timezone=EST
     *
     * @generated from protobuf enum value: APPEND_PATH_TO_ADDRESS = 2;
     */
    APPEND_PATH_TO_ADDRESS = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class Backend$Type extends MessageType<Backend> {
    constructor() {
        super("google.api.Backend", [
            { no: 1, name: "rules", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BackendRule }
        ]);
    }
    create(value?: PartialMessage<Backend>): Backend {
        const message = { rules: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Backend>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Backend): Backend {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.BackendRule rules */ 1:
                    message.rules.push(BackendRule.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Backend, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.BackendRule rules = 1; */
        for (let i = 0; i < message.rules.length; i++)
            BackendRule.internalBinaryWrite(message.rules[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.Backend
 */
export const Backend = new Backend$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BackendRule$Type extends MessageType<BackendRule> {
    constructor() {
        super("google.api.BackendRule", [
            { no: 1, name: "selector", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "deadline", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "min_deadline", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "operation_deadline", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "path_translation", kind: "enum", T: () => ["google.api.BackendRule.PathTranslation", BackendRule_PathTranslation] },
            { no: 7, name: "jwt_audience", kind: "scalar", oneof: "authentication", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "disable_auth", kind: "scalar", oneof: "authentication", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "protocol", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<BackendRule>): BackendRule {
        const message = { selector: "", address: "", deadline: 0, minDeadline: 0, operationDeadline: 0, pathTranslation: 0, authentication: { oneofKind: undefined }, protocol: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BackendRule>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BackendRule): BackendRule {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string selector */ 1:
                    message.selector = reader.string();
                    break;
                case /* string address */ 2:
                    message.address = reader.string();
                    break;
                case /* double deadline */ 3:
                    message.deadline = reader.double();
                    break;
                case /* double min_deadline */ 4:
                    message.minDeadline = reader.double();
                    break;
                case /* double operation_deadline */ 5:
                    message.operationDeadline = reader.double();
                    break;
                case /* google.api.BackendRule.PathTranslation path_translation */ 6:
                    message.pathTranslation = reader.int32();
                    break;
                case /* string jwt_audience */ 7:
                    message.authentication = {
                        oneofKind: "jwtAudience",
                        jwtAudience: reader.string()
                    };
                    break;
                case /* bool disable_auth */ 8:
                    message.authentication = {
                        oneofKind: "disableAuth",
                        disableAuth: reader.bool()
                    };
                    break;
                case /* string protocol */ 9:
                    message.protocol = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BackendRule, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string selector = 1; */
        if (message.selector !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.selector);
        /* string address = 2; */
        if (message.address !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.address);
        /* double deadline = 3; */
        if (message.deadline !== 0)
            writer.tag(3, WireType.Bit64).double(message.deadline);
        /* double min_deadline = 4; */
        if (message.minDeadline !== 0)
            writer.tag(4, WireType.Bit64).double(message.minDeadline);
        /* double operation_deadline = 5; */
        if (message.operationDeadline !== 0)
            writer.tag(5, WireType.Bit64).double(message.operationDeadline);
        /* google.api.BackendRule.PathTranslation path_translation = 6; */
        if (message.pathTranslation !== 0)
            writer.tag(6, WireType.Varint).int32(message.pathTranslation);
        /* string jwt_audience = 7; */
        if (message.authentication.oneofKind === "jwtAudience")
            writer.tag(7, WireType.LengthDelimited).string(message.authentication.jwtAudience);
        /* bool disable_auth = 8; */
        if (message.authentication.oneofKind === "disableAuth")
            writer.tag(8, WireType.Varint).bool(message.authentication.disableAuth);
        /* string protocol = 9; */
        if (message.protocol !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.protocol);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.BackendRule
 */
export const BackendRule = new BackendRule$Type();
