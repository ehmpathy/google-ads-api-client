// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "google/api/expr/v1alpha1/value.proto" (package "google.api.expr.v1alpha1", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../protobuf/any";
import { NullValue } from "../../../protobuf/struct";
// Contains representations for CEL runtime values.

/**
 * Represents a CEL value.
 *
 * This is similar to `google.protobuf.Value`, but can represent CEL's full
 * range of values.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.Value
 */
export interface Value {
    /**
     * @generated from protobuf oneof: kind
     */
    kind: {
        oneofKind: "nullValue";
        /**
         * Null value.
         *
         * @generated from protobuf field: google.protobuf.NullValue null_value = 1;
         */
        nullValue: NullValue;
    } | {
        oneofKind: "boolValue";
        /**
         * Boolean value.
         *
         * @generated from protobuf field: bool bool_value = 2;
         */
        boolValue: boolean;
    } | {
        oneofKind: "int64Value";
        /**
         * Signed integer value.
         *
         * @generated from protobuf field: int64 int64_value = 3;
         */
        int64Value: bigint;
    } | {
        oneofKind: "uint64Value";
        /**
         * Unsigned integer value.
         *
         * @generated from protobuf field: uint64 uint64_value = 4;
         */
        uint64Value: bigint;
    } | {
        oneofKind: "doubleValue";
        /**
         * Floating point value.
         *
         * @generated from protobuf field: double double_value = 5;
         */
        doubleValue: number;
    } | {
        oneofKind: "stringValue";
        /**
         * UTF-8 string value.
         *
         * @generated from protobuf field: string string_value = 6;
         */
        stringValue: string;
    } | {
        oneofKind: "bytesValue";
        /**
         * Byte string value.
         *
         * @generated from protobuf field: bytes bytes_value = 7;
         */
        bytesValue: Uint8Array;
    } | {
        oneofKind: "enumValue";
        /**
         * An enum value.
         *
         * @generated from protobuf field: google.api.expr.v1alpha1.EnumValue enum_value = 9;
         */
        enumValue: EnumValue;
    } | {
        oneofKind: "objectValue";
        /**
         * The proto message backing an object value.
         *
         * @generated from protobuf field: google.protobuf.Any object_value = 10;
         */
        objectValue: Any;
    } | {
        oneofKind: "mapValue";
        /**
         * Map value.
         *
         * @generated from protobuf field: google.api.expr.v1alpha1.MapValue map_value = 11;
         */
        mapValue: MapValue;
    } | {
        oneofKind: "listValue";
        /**
         * List value.
         *
         * @generated from protobuf field: google.api.expr.v1alpha1.ListValue list_value = 12;
         */
        listValue: ListValue;
    } | {
        oneofKind: "typeValue";
        /**
         * Type value.
         *
         * @generated from protobuf field: string type_value = 15;
         */
        typeValue: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * An enum value.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.EnumValue
 */
export interface EnumValue {
    /**
     * The fully qualified name of the enum type.
     *
     * @generated from protobuf field: string type = 1;
     */
    type: string;
    /**
     * The value of the enum.
     *
     * @generated from protobuf field: int32 value = 2;
     */
    value: number;
}
/**
 * A list.
 *
 * Wrapped in a message so 'not set' and empty can be differentiated, which is
 * required for use in a 'oneof'.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.ListValue
 */
export interface ListValue {
    /**
     * The ordered values in the list.
     *
     * @generated from protobuf field: repeated google.api.expr.v1alpha1.Value values = 1;
     */
    values: Value[];
}
/**
 * A map.
 *
 * Wrapped in a message so 'not set' and empty can be differentiated, which is
 * required for use in a 'oneof'.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.MapValue
 */
export interface MapValue {
    /**
     * The set of map entries.
     *
     * CEL has fewer restrictions on keys, so a protobuf map represenation
     * cannot be used.
     *
     * @generated from protobuf field: repeated google.api.expr.v1alpha1.MapValue.Entry entries = 1;
     */
    entries: MapValue_Entry[];
}
/**
 * An entry in the map.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.MapValue.Entry
 */
export interface MapValue_Entry {
    /**
     * The key.
     *
     * Must be unique with in the map.
     * Currently only boolean, int, uint, and string values can be keys.
     *
     * @generated from protobuf field: google.api.expr.v1alpha1.Value key = 1;
     */
    key?: Value;
    /**
     * The value.
     *
     * @generated from protobuf field: google.api.expr.v1alpha1.Value value = 2;
     */
    value?: Value;
}
// @generated message type with reflection information, may provide speed optimized methods
class Value$Type extends MessageType<Value> {
    constructor() {
        super("google.api.expr.v1alpha1.Value", [
            { no: 1, name: "null_value", kind: "enum", oneof: "kind", T: () => ["google.protobuf.NullValue", NullValue] },
            { no: 2, name: "bool_value", kind: "scalar", oneof: "kind", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "int64_value", kind: "scalar", oneof: "kind", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "uint64_value", kind: "scalar", oneof: "kind", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "double_value", kind: "scalar", oneof: "kind", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "string_value", kind: "scalar", oneof: "kind", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "bytes_value", kind: "scalar", oneof: "kind", T: 12 /*ScalarType.BYTES*/ },
            { no: 9, name: "enum_value", kind: "message", oneof: "kind", T: () => EnumValue },
            { no: 10, name: "object_value", kind: "message", oneof: "kind", T: () => Any },
            { no: 11, name: "map_value", kind: "message", oneof: "kind", T: () => MapValue },
            { no: 12, name: "list_value", kind: "message", oneof: "kind", T: () => ListValue },
            { no: 15, name: "type_value", kind: "scalar", oneof: "kind", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Value>): Value {
        const message = { kind: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Value>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Value): Value {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.NullValue null_value */ 1:
                    message.kind = {
                        oneofKind: "nullValue",
                        nullValue: reader.int32()
                    };
                    break;
                case /* bool bool_value */ 2:
                    message.kind = {
                        oneofKind: "boolValue",
                        boolValue: reader.bool()
                    };
                    break;
                case /* int64 int64_value */ 3:
                    message.kind = {
                        oneofKind: "int64Value",
                        int64Value: reader.int64().toBigInt()
                    };
                    break;
                case /* uint64 uint64_value */ 4:
                    message.kind = {
                        oneofKind: "uint64Value",
                        uint64Value: reader.uint64().toBigInt()
                    };
                    break;
                case /* double double_value */ 5:
                    message.kind = {
                        oneofKind: "doubleValue",
                        doubleValue: reader.double()
                    };
                    break;
                case /* string string_value */ 6:
                    message.kind = {
                        oneofKind: "stringValue",
                        stringValue: reader.string()
                    };
                    break;
                case /* bytes bytes_value */ 7:
                    message.kind = {
                        oneofKind: "bytesValue",
                        bytesValue: reader.bytes()
                    };
                    break;
                case /* google.api.expr.v1alpha1.EnumValue enum_value */ 9:
                    message.kind = {
                        oneofKind: "enumValue",
                        enumValue: EnumValue.internalBinaryRead(reader, reader.uint32(), options, (message.kind as any).enumValue)
                    };
                    break;
                case /* google.protobuf.Any object_value */ 10:
                    message.kind = {
                        oneofKind: "objectValue",
                        objectValue: Any.internalBinaryRead(reader, reader.uint32(), options, (message.kind as any).objectValue)
                    };
                    break;
                case /* google.api.expr.v1alpha1.MapValue map_value */ 11:
                    message.kind = {
                        oneofKind: "mapValue",
                        mapValue: MapValue.internalBinaryRead(reader, reader.uint32(), options, (message.kind as any).mapValue)
                    };
                    break;
                case /* google.api.expr.v1alpha1.ListValue list_value */ 12:
                    message.kind = {
                        oneofKind: "listValue",
                        listValue: ListValue.internalBinaryRead(reader, reader.uint32(), options, (message.kind as any).listValue)
                    };
                    break;
                case /* string type_value */ 15:
                    message.kind = {
                        oneofKind: "typeValue",
                        typeValue: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Value, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.NullValue null_value = 1; */
        if (message.kind.oneofKind === "nullValue")
            writer.tag(1, WireType.Varint).int32(message.kind.nullValue);
        /* bool bool_value = 2; */
        if (message.kind.oneofKind === "boolValue")
            writer.tag(2, WireType.Varint).bool(message.kind.boolValue);
        /* int64 int64_value = 3; */
        if (message.kind.oneofKind === "int64Value")
            writer.tag(3, WireType.Varint).int64(message.kind.int64Value);
        /* uint64 uint64_value = 4; */
        if (message.kind.oneofKind === "uint64Value")
            writer.tag(4, WireType.Varint).uint64(message.kind.uint64Value);
        /* double double_value = 5; */
        if (message.kind.oneofKind === "doubleValue")
            writer.tag(5, WireType.Bit64).double(message.kind.doubleValue);
        /* string string_value = 6; */
        if (message.kind.oneofKind === "stringValue")
            writer.tag(6, WireType.LengthDelimited).string(message.kind.stringValue);
        /* bytes bytes_value = 7; */
        if (message.kind.oneofKind === "bytesValue")
            writer.tag(7, WireType.LengthDelimited).bytes(message.kind.bytesValue);
        /* google.api.expr.v1alpha1.EnumValue enum_value = 9; */
        if (message.kind.oneofKind === "enumValue")
            EnumValue.internalBinaryWrite(message.kind.enumValue, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Any object_value = 10; */
        if (message.kind.oneofKind === "objectValue")
            Any.internalBinaryWrite(message.kind.objectValue, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.MapValue map_value = 11; */
        if (message.kind.oneofKind === "mapValue")
            MapValue.internalBinaryWrite(message.kind.mapValue, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.ListValue list_value = 12; */
        if (message.kind.oneofKind === "listValue")
            ListValue.internalBinaryWrite(message.kind.listValue, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* string type_value = 15; */
        if (message.kind.oneofKind === "typeValue")
            writer.tag(15, WireType.LengthDelimited).string(message.kind.typeValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Value
 */
export const Value = new Value$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EnumValue$Type extends MessageType<EnumValue> {
    constructor() {
        super("google.api.expr.v1alpha1.EnumValue", [
            { no: 1, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "value", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<EnumValue>): EnumValue {
        const message = { type: "", value: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EnumValue>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EnumValue): EnumValue {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string type */ 1:
                    message.type = reader.string();
                    break;
                case /* int32 value */ 2:
                    message.value = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EnumValue, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string type = 1; */
        if (message.type !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.type);
        /* int32 value = 2; */
        if (message.value !== 0)
            writer.tag(2, WireType.Varint).int32(message.value);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.EnumValue
 */
export const EnumValue = new EnumValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListValue$Type extends MessageType<ListValue> {
    constructor() {
        super("google.api.expr.v1alpha1.ListValue", [
            { no: 1, name: "values", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Value }
        ]);
    }
    create(value?: PartialMessage<ListValue>): ListValue {
        const message = { values: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListValue>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListValue): ListValue {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.expr.v1alpha1.Value values */ 1:
                    message.values.push(Value.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListValue, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.expr.v1alpha1.Value values = 1; */
        for (let i = 0; i < message.values.length; i++)
            Value.internalBinaryWrite(message.values[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.ListValue
 */
export const ListValue = new ListValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MapValue$Type extends MessageType<MapValue> {
    constructor() {
        super("google.api.expr.v1alpha1.MapValue", [
            { no: 1, name: "entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MapValue_Entry }
        ]);
    }
    create(value?: PartialMessage<MapValue>): MapValue {
        const message = { entries: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MapValue>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MapValue): MapValue {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.expr.v1alpha1.MapValue.Entry entries */ 1:
                    message.entries.push(MapValue_Entry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MapValue, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.expr.v1alpha1.MapValue.Entry entries = 1; */
        for (let i = 0; i < message.entries.length; i++)
            MapValue_Entry.internalBinaryWrite(message.entries[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.MapValue
 */
export const MapValue = new MapValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MapValue_Entry$Type extends MessageType<MapValue_Entry> {
    constructor() {
        super("google.api.expr.v1alpha1.MapValue.Entry", [
            { no: 1, name: "key", kind: "message", T: () => Value },
            { no: 2, name: "value", kind: "message", T: () => Value }
        ]);
    }
    create(value?: PartialMessage<MapValue_Entry>): MapValue_Entry {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MapValue_Entry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MapValue_Entry): MapValue_Entry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.api.expr.v1alpha1.Value key */ 1:
                    message.key = Value.internalBinaryRead(reader, reader.uint32(), options, message.key);
                    break;
                case /* google.api.expr.v1alpha1.Value value */ 2:
                    message.value = Value.internalBinaryRead(reader, reader.uint32(), options, message.value);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MapValue_Entry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.api.expr.v1alpha1.Value key = 1; */
        if (message.key)
            Value.internalBinaryWrite(message.key, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.api.expr.v1alpha1.Value value = 2; */
        if (message.value)
            Value.internalBinaryWrite(message.value, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.MapValue.Entry
 */
export const MapValue_Entry = new MapValue_Entry$Type();
