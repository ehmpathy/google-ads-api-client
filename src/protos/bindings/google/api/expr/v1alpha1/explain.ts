// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "google/api/expr/v1alpha1/explain.proto" (package "google.api.expr.v1alpha1", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Value } from "./value";
/**
 * Values of intermediate expressions produced when evaluating expression.
 * Deprecated, use `EvalState` instead.
 *
 * @deprecated
 * @generated from protobuf message google.api.expr.v1alpha1.Explain
 */
export interface Explain {
    /**
     * All of the observed values.
     *
     * The field value_index is an index in the values list.
     * Separating values from steps is needed to remove redundant values.
     *
     * @generated from protobuf field: repeated google.api.expr.v1alpha1.Value values = 1;
     */
    values: Value[];
    /**
     * List of steps.
     *
     * Repeated evaluations of the same expression generate new ExprStep
     * instances. The order of such ExprStep instances matches the order of
     * elements returned by Comprehension.iter_range.
     *
     * @generated from protobuf field: repeated google.api.expr.v1alpha1.Explain.ExprStep expr_steps = 2;
     */
    exprSteps: Explain_ExprStep[];
}
/**
 * ID and value index of one step.
 *
 * @generated from protobuf message google.api.expr.v1alpha1.Explain.ExprStep
 */
export interface Explain_ExprStep {
    /**
     * ID of corresponding Expr node.
     *
     * @generated from protobuf field: int64 id = 1;
     */
    id: bigint;
    /**
     * Index of the value in the values list.
     *
     * @generated from protobuf field: int32 value_index = 2;
     */
    valueIndex: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class Explain$Type extends MessageType<Explain> {
    constructor() {
        super("google.api.expr.v1alpha1.Explain", [
            { no: 1, name: "values", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Value },
            { no: 2, name: "expr_steps", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Explain_ExprStep }
        ]);
    }
    create(value?: PartialMessage<Explain>): Explain {
        const message = { values: [], exprSteps: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Explain>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Explain): Explain {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.expr.v1alpha1.Value values */ 1:
                    message.values.push(Value.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.api.expr.v1alpha1.Explain.ExprStep expr_steps */ 2:
                    message.exprSteps.push(Explain_ExprStep.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Explain, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.expr.v1alpha1.Value values = 1; */
        for (let i = 0; i < message.values.length; i++)
            Value.internalBinaryWrite(message.values[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.api.expr.v1alpha1.Explain.ExprStep expr_steps = 2; */
        for (let i = 0; i < message.exprSteps.length; i++)
            Explain_ExprStep.internalBinaryWrite(message.exprSteps[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @deprecated
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Explain
 */
export const Explain = new Explain$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Explain_ExprStep$Type extends MessageType<Explain_ExprStep> {
    constructor() {
        super("google.api.expr.v1alpha1.Explain.ExprStep", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "value_index", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<Explain_ExprStep>): Explain_ExprStep {
        const message = { id: 0n, valueIndex: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Explain_ExprStep>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Explain_ExprStep): Explain_ExprStep {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* int32 value_index */ 2:
                    message.valueIndex = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Explain_ExprStep, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* int32 value_index = 2; */
        if (message.valueIndex !== 0)
            writer.tag(2, WireType.Varint).int32(message.valueIndex);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.expr.v1alpha1.Explain.ExprStep
 */
export const Explain_ExprStep = new Explain_ExprStep$Type();
