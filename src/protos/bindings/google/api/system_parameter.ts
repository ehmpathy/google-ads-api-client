// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "google/api/system_parameter.proto" (package "google.api", syntax proto3)
// tslint:disable
//
// Copyright 2015 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * ### System parameter configuration
 *
 * A system parameter is a special kind of parameter defined by the API
 * system, not by an individual API. It is typically mapped to an HTTP header
 * and/or a URL query parameter. This configuration specifies which methods
 * change the names of the system parameters.
 *
 * @generated from protobuf message google.api.SystemParameters
 */
export interface SystemParameters {
    /**
     * Define system parameters.
     *
     * The parameters defined here will override the default parameters
     * implemented by the system. If this field is missing from the service
     * config, default system parameters will be used. Default system parameters
     * and names is implementation-dependent.
     *
     * Example: define api key for all methods
     *
     *     system_parameters
     *       rules:
     *         - selector: "*"
     *           parameters:
     *             - name: api_key
     *               url_query_parameter: api_key
     *
     *
     * Example: define 2 api key names for a specific method.
     *
     *     system_parameters
     *       rules:
     *         - selector: "/ListShelves"
     *           parameters:
     *             - name: api_key
     *               http_header: Api-Key1
     *             - name: api_key
     *               http_header: Api-Key2
     *
     * **NOTE:** All service configuration rules follow "last one wins" order.
     *
     * @generated from protobuf field: repeated google.api.SystemParameterRule rules = 1;
     */
    rules: SystemParameterRule[];
}
/**
 * Define a system parameter rule mapping system parameter definitions to
 * methods.
 *
 * @generated from protobuf message google.api.SystemParameterRule
 */
export interface SystemParameterRule {
    /**
     * Selects the methods to which this rule applies. Use '*' to indicate all
     * methods in all APIs.
     *
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     *
     * @generated from protobuf field: string selector = 1;
     */
    selector: string;
    /**
     * Define parameters. Multiple names may be defined for a parameter.
     * For a given method call, only one of them should be used. If multiple
     * names are used the behavior is implementation-dependent.
     * If none of the specified names are present the behavior is
     * parameter-dependent.
     *
     * @generated from protobuf field: repeated google.api.SystemParameter parameters = 2;
     */
    parameters: SystemParameter[];
}
/**
 * Define a parameter's name and location. The parameter may be passed as either
 * an HTTP header or a URL query parameter, and if both are passed the behavior
 * is implementation-dependent.
 *
 * @generated from protobuf message google.api.SystemParameter
 */
export interface SystemParameter {
    /**
     * Define the name of the parameter, such as "api_key" . It is case sensitive.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * Define the HTTP header name to use for the parameter. It is case
     * insensitive.
     *
     * @generated from protobuf field: string http_header = 2;
     */
    httpHeader: string;
    /**
     * Define the URL query parameter name to use for the parameter. It is case
     * sensitive.
     *
     * @generated from protobuf field: string url_query_parameter = 3;
     */
    urlQueryParameter: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class SystemParameters$Type extends MessageType<SystemParameters> {
    constructor() {
        super("google.api.SystemParameters", [
            { no: 1, name: "rules", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SystemParameterRule }
        ]);
    }
    create(value?: PartialMessage<SystemParameters>): SystemParameters {
        const message = { rules: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SystemParameters>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SystemParameters): SystemParameters {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.api.SystemParameterRule rules */ 1:
                    message.rules.push(SystemParameterRule.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SystemParameters, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.api.SystemParameterRule rules = 1; */
        for (let i = 0; i < message.rules.length; i++)
            SystemParameterRule.internalBinaryWrite(message.rules[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.SystemParameters
 */
export const SystemParameters = new SystemParameters$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SystemParameterRule$Type extends MessageType<SystemParameterRule> {
    constructor() {
        super("google.api.SystemParameterRule", [
            { no: 1, name: "selector", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "parameters", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SystemParameter }
        ]);
    }
    create(value?: PartialMessage<SystemParameterRule>): SystemParameterRule {
        const message = { selector: "", parameters: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SystemParameterRule>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SystemParameterRule): SystemParameterRule {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string selector */ 1:
                    message.selector = reader.string();
                    break;
                case /* repeated google.api.SystemParameter parameters */ 2:
                    message.parameters.push(SystemParameter.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SystemParameterRule, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string selector = 1; */
        if (message.selector !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.selector);
        /* repeated google.api.SystemParameter parameters = 2; */
        for (let i = 0; i < message.parameters.length; i++)
            SystemParameter.internalBinaryWrite(message.parameters[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.SystemParameterRule
 */
export const SystemParameterRule = new SystemParameterRule$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SystemParameter$Type extends MessageType<SystemParameter> {
    constructor() {
        super("google.api.SystemParameter", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "http_header", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "url_query_parameter", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SystemParameter>): SystemParameter {
        const message = { name: "", httpHeader: "", urlQueryParameter: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SystemParameter>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SystemParameter): SystemParameter {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string http_header */ 2:
                    message.httpHeader = reader.string();
                    break;
                case /* string url_query_parameter */ 3:
                    message.urlQueryParameter = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SystemParameter, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* string http_header = 2; */
        if (message.httpHeader !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.httpHeader);
        /* string url_query_parameter = 3; */
        if (message.urlQueryParameter !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.urlQueryParameter);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.api.SystemParameter
 */
export const SystemParameter = new SystemParameter$Type();
