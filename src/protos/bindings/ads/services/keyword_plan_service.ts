// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/keyword_plan_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { KeywordPlanHistoricalMetrics } from "../common/keyword_plan_common";
import { KeywordPlanAggregateMetricResults } from "../common/keyword_plan_common";
import { HistoricalMetricsOptions } from "../common/keyword_plan_common";
import { KeywordPlanAggregateMetrics } from "../common/keyword_plan_common";
import { Status } from "../../google/rpc/status";
import { KeywordPlan } from "../resources/keyword_plan";
import { FieldMask } from "../../google/protobuf/field_mask";
/**
 * Request message for [KeywordPlanService.MutateKeywordPlans][google.ads.googleads.v11.services.KeywordPlanService.MutateKeywordPlans].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateKeywordPlansRequest
 */
export interface MutateKeywordPlansRequest {
    /**
     * Required. The ID of the customer whose keyword plans are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on individual keyword plans.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.KeywordPlanOperation operations = 2;
     */
    operations: KeywordPlanOperation[];
    /**
     * If true, successful operations will be carried out and invalid
     * operations will return errors. If false, all operations will be carried
     * out in one transaction if and only if they are all valid.
     * Default is false.
     *
     * @generated from protobuf field: bool partial_failure = 3;
     */
    partialFailure: boolean;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 4;
     */
    validateOnly: boolean;
}
/**
 * A single operation (create, update, remove) on a keyword plan.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordPlanOperation
 */
export interface KeywordPlanOperation {
    /**
     * The FieldMask that determines which resource fields are modified in an
     * update.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 4;
     */
    updateMask?: FieldMask;
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "create";
        /**
         * Create operation: No resource name is expected for the new keyword plan.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.KeywordPlan create = 1;
         */
        create: KeywordPlan;
    } | {
        oneofKind: "update";
        /**
         * Update operation: The keyword plan is expected to have a valid resource
         * name.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.KeywordPlan update = 2;
         */
        update: KeywordPlan;
    } | {
        oneofKind: "remove";
        /**
         * Remove operation: A resource name for the removed keyword plan is
         * expected in this format:
         *
         * `customers/{customer_id}/keywordPlans/{keyword_plan_id}`
         *
         * @generated from protobuf field: string remove = 3;
         */
        remove: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for a keyword plan mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateKeywordPlansResponse
 */
export interface MutateKeywordPlansResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 3;
     */
    partialFailureError?: Status;
    /**
     * All results for the mutate.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateKeywordPlansResult results = 2;
     */
    results: MutateKeywordPlansResult[];
}
/**
 * The result for the keyword plan mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateKeywordPlansResult
 */
export interface MutateKeywordPlansResult {
    /**
     * Returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
}
/**
 * Request message for [KeywordPlanService.GenerateForecastCurve][google.ads.googleads.v11.services.KeywordPlanService.GenerateForecastCurve].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateForecastCurveRequest
 */
export interface GenerateForecastCurveRequest {
    /**
     * Required. The resource name of the keyword plan to be forecasted.
     *
     * @generated from protobuf field: string keyword_plan = 1;
     */
    keywordPlan: string;
}
/**
 * Response message for [KeywordPlanService.GenerateForecastCurve][google.ads.googleads.v11.services.KeywordPlanService.GenerateForecastCurve].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateForecastCurveResponse
 */
export interface GenerateForecastCurveResponse {
    /**
     * List of forecast curves for the keyword plan campaign.
     * One maximum.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.KeywordPlanCampaignForecastCurve campaign_forecast_curves = 1;
     */
    campaignForecastCurves: KeywordPlanCampaignForecastCurve[];
}
/**
 * Request message for [KeywordPlanService.GenerateForecastTimeSeries][google.ads.googleads.v11.services.KeywordPlanService.GenerateForecastTimeSeries].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateForecastTimeSeriesRequest
 */
export interface GenerateForecastTimeSeriesRequest {
    /**
     * Required. The resource name of the keyword plan to be forecasted.
     *
     * @generated from protobuf field: string keyword_plan = 1;
     */
    keywordPlan: string;
}
/**
 * Response message for [KeywordPlanService.GenerateForecastTimeSeries][google.ads.googleads.v11.services.KeywordPlanService.GenerateForecastTimeSeries].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateForecastTimeSeriesResponse
 */
export interface GenerateForecastTimeSeriesResponse {
    /**
     * List of weekly time series forecasts for the keyword plan campaign.
     * One maximum.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.KeywordPlanWeeklyTimeSeriesForecast weekly_time_series_forecasts = 1;
     */
    weeklyTimeSeriesForecasts: KeywordPlanWeeklyTimeSeriesForecast[];
}
/**
 * Request message for [KeywordPlanService.GenerateForecastMetrics][google.ads.googleads.v11.services.KeywordPlanService.GenerateForecastMetrics].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateForecastMetricsRequest
 */
export interface GenerateForecastMetricsRequest {
    /**
     * Required. The resource name of the keyword plan to be forecasted.
     *
     * @generated from protobuf field: string keyword_plan = 1;
     */
    keywordPlan: string;
}
/**
 * Response message for [KeywordPlanService.GenerateForecastMetrics][google.ads.googleads.v11.services.KeywordPlanService.GenerateForecastMetrics].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateForecastMetricsResponse
 */
export interface GenerateForecastMetricsResponse {
    /**
     * List of campaign forecasts.
     * One maximum.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.KeywordPlanCampaignForecast campaign_forecasts = 1;
     */
    campaignForecasts: KeywordPlanCampaignForecast[];
    /**
     * List of ad group forecasts.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.KeywordPlanAdGroupForecast ad_group_forecasts = 2;
     */
    adGroupForecasts: KeywordPlanAdGroupForecast[];
    /**
     * List of keyword forecasts.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.KeywordPlanKeywordForecast keyword_forecasts = 3;
     */
    keywordForecasts: KeywordPlanKeywordForecast[];
}
/**
 * A campaign forecast.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordPlanCampaignForecast
 */
export interface KeywordPlanCampaignForecast {
    /**
     * The resource name of the Keyword Plan campaign related to the forecast.
     *
     * `customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}`
     *
     * @generated from protobuf field: optional string keyword_plan_campaign = 3;
     */
    keywordPlanCampaign?: string;
    /**
     * The forecast for the Keyword Plan campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.ForecastMetrics campaign_forecast = 2;
     */
    campaignForecast?: ForecastMetrics;
}
/**
 * An ad group forecast.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordPlanAdGroupForecast
 */
export interface KeywordPlanAdGroupForecast {
    /**
     * The resource name of the Keyword Plan ad group related to the forecast.
     *
     * `customers/{customer_id}/keywordPlanAdGroups/{keyword_plan_ad_group_id}`
     *
     * @generated from protobuf field: optional string keyword_plan_ad_group = 3;
     */
    keywordPlanAdGroup?: string;
    /**
     * The forecast for the Keyword Plan ad group.
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.ForecastMetrics ad_group_forecast = 2;
     */
    adGroupForecast?: ForecastMetrics;
}
/**
 * A keyword forecast.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordPlanKeywordForecast
 */
export interface KeywordPlanKeywordForecast {
    /**
     * The resource name of the Keyword Plan keyword related to the forecast.
     *
     * `customers/{customer_id}/keywordPlanAdGroupKeywords/{keyword_plan_ad_group_keyword_id}`
     *
     * @generated from protobuf field: optional string keyword_plan_ad_group_keyword = 3;
     */
    keywordPlanAdGroupKeyword?: string;
    /**
     * The forecast for the Keyword Plan keyword.
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.ForecastMetrics keyword_forecast = 2;
     */
    keywordForecast?: ForecastMetrics;
}
/**
 * The forecast curve for the campaign.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordPlanCampaignForecastCurve
 */
export interface KeywordPlanCampaignForecastCurve {
    /**
     * The resource name of the Keyword Plan campaign related to the forecast.
     *
     * `customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}`
     *
     * @generated from protobuf field: optional string keyword_plan_campaign = 3;
     */
    keywordPlanCampaign?: string;
    /**
     * The max cpc bid forecast curve for the campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecastCurve max_cpc_bid_forecast_curve = 2;
     */
    maxCpcBidForecastCurve?: KeywordPlanMaxCpcBidForecastCurve;
}
/**
 * The max cpc bid forecast curve.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecastCurve
 */
export interface KeywordPlanMaxCpcBidForecastCurve {
    /**
     * The forecasts for the Keyword Plan campaign at different max CPC bids.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecast max_cpc_bid_forecasts = 1;
     */
    maxCpcBidForecasts: KeywordPlanMaxCpcBidForecast[];
}
/**
 * The forecast of the campaign at a specific bid.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecast
 */
export interface KeywordPlanMaxCpcBidForecast {
    /**
     * The max cpc bid in micros.
     *
     * @generated from protobuf field: optional int64 max_cpc_bid_micros = 3;
     */
    maxCpcBidMicros?: bigint;
    /**
     * The forecast for the Keyword Plan campaign at the specific bid.
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.ForecastMetrics max_cpc_bid_forecast = 2;
     */
    maxCpcBidForecast?: ForecastMetrics;
}
/**
 * The weekly time series forecast for the keyword plan campaign.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordPlanWeeklyTimeSeriesForecast
 */
export interface KeywordPlanWeeklyTimeSeriesForecast {
    /**
     * The resource name of the Keyword Plan campaign related to the forecast.
     *
     * `customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}`
     *
     * @generated from protobuf field: optional string keyword_plan_campaign = 1;
     */
    keywordPlanCampaign?: string;
    /**
     * The forecasts for the Keyword Plan campaign at different max CPC bids.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.KeywordPlanWeeklyForecast weekly_forecasts = 2;
     */
    weeklyForecasts: KeywordPlanWeeklyForecast[];
}
/**
 * The forecast of the campaign for the week starting start_date.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordPlanWeeklyForecast
 */
export interface KeywordPlanWeeklyForecast {
    /**
     * The start date, in yyyy-mm-dd format. This date is inclusive.
     *
     * @generated from protobuf field: optional string start_date = 1;
     */
    startDate?: string;
    /**
     * The forecast for the Keyword Plan campaign for the week.
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.ForecastMetrics forecast = 2;
     */
    forecast?: ForecastMetrics;
}
/**
 * Forecast metrics.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.ForecastMetrics
 */
export interface ForecastMetrics {
    /**
     * Impressions
     *
     * @generated from protobuf field: optional double impressions = 7;
     */
    impressions?: number;
    /**
     * Ctr
     *
     * @generated from protobuf field: optional double ctr = 8;
     */
    ctr?: number;
    /**
     * AVG cpc
     *
     * @generated from protobuf field: optional int64 average_cpc = 9;
     */
    averageCpc?: bigint;
    /**
     * Clicks
     *
     * @generated from protobuf field: optional double clicks = 10;
     */
    clicks?: number;
    /**
     * Cost
     *
     * @generated from protobuf field: optional int64 cost_micros = 11;
     */
    costMicros?: bigint;
}
/**
 * Request message for [KeywordPlanService.GenerateHistoricalMetrics][google.ads.googleads.v11.services.KeywordPlanService.GenerateHistoricalMetrics].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateHistoricalMetricsRequest
 */
export interface GenerateHistoricalMetricsRequest {
    /**
     * Required. The resource name of the keyword plan of which historical metrics are
     * requested.
     *
     * @generated from protobuf field: string keyword_plan = 1;
     */
    keywordPlan: string;
    /**
     * The aggregate fields to include in response.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics = 2;
     */
    aggregateMetrics?: KeywordPlanAggregateMetrics;
    /**
     * The options for historical metrics data.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options = 3;
     */
    historicalMetricsOptions?: HistoricalMetricsOptions;
}
/**
 * Response message for [KeywordPlanService.GenerateHistoricalMetrics][google.ads.googleads.v11.services.KeywordPlanService.GenerateHistoricalMetrics].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateHistoricalMetricsResponse
 */
export interface GenerateHistoricalMetricsResponse {
    /**
     * List of keyword historical metrics.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.KeywordPlanKeywordHistoricalMetrics metrics = 1;
     */
    metrics: KeywordPlanKeywordHistoricalMetrics[];
    /**
     * The aggregate metrics for all the keywords in the keyword planner plan.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results = 2;
     */
    aggregateMetricResults?: KeywordPlanAggregateMetricResults;
}
/**
 * A keyword historical metrics.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordPlanKeywordHistoricalMetrics
 */
export interface KeywordPlanKeywordHistoricalMetrics {
    /**
     * The text of the query associated with one or more ad_group_keywords in the
     * plan.
     *
     * Note that we de-dupe your keywords list, eliminating close variants before
     * returning the plan's keywords as text. For example, if your plan originally
     * contained the keywords 'car' and 'cars', the returned search query will
     * only contain 'cars'.
     * Starting V5, the list of de-duped queries will be included in
     * close_variants field.
     *
     * @generated from protobuf field: optional string search_query = 4;
     */
    searchQuery?: string;
    /**
     * The list of close variant queries for search_query whose search results
     * are combined into the search_query.
     *
     * @generated from protobuf field: repeated string close_variants = 3;
     */
    closeVariants: string[];
    /**
     * The historical metrics for the query associated with one or more
     * ad_group_keywords in the plan.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_metrics = 2;
     */
    keywordMetrics?: KeywordPlanHistoricalMetrics;
}
// @generated message type with reflection information, may provide speed optimized methods
class MutateKeywordPlansRequest$Type extends MessageType<MutateKeywordPlansRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateKeywordPlansRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => KeywordPlanOperation, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "partial_failure", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<MutateKeywordPlansRequest>): MutateKeywordPlansRequest {
        const message = { customerId: "", operations: [], partialFailure: false, validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateKeywordPlansRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateKeywordPlansRequest): MutateKeywordPlansRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.KeywordPlanOperation operations */ 2:
                    message.operations.push(KeywordPlanOperation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool partial_failure */ 3:
                    message.partialFailure = reader.bool();
                    break;
                case /* bool validate_only */ 4:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateKeywordPlansRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.customerId);
        /* repeated google.ads.googleads.v11.services.KeywordPlanOperation operations = 2; */
        for (let i = 0; i < message.operations.length; i++)
            KeywordPlanOperation.internalBinaryWrite(message.operations[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool partial_failure = 3; */
        if (message.partialFailure !== false)
            writer.tag(3, WireType.Varint).bool(message.partialFailure);
        /* bool validate_only = 4; */
        if (message.validateOnly !== false)
            writer.tag(4, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateKeywordPlansRequest
 */
export const MutateKeywordPlansRequest = new MutateKeywordPlansRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanOperation$Type extends MessageType<KeywordPlanOperation> {
    constructor() {
        super("google.ads.googleads.v11.services.KeywordPlanOperation", [
            { no: 4, name: "update_mask", kind: "message", T: () => FieldMask },
            { no: 1, name: "create", kind: "message", oneof: "operation", T: () => KeywordPlan },
            { no: 2, name: "update", kind: "message", oneof: "operation", T: () => KeywordPlan },
            { no: 3, name: "remove", kind: "scalar", oneof: "operation", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/KeywordPlan" } } }
        ]);
    }
    create(value?: PartialMessage<KeywordPlanOperation>): KeywordPlanOperation {
        const message = { operation: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanOperation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanOperation): KeywordPlanOperation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.FieldMask update_mask */ 4:
                    message.updateMask = FieldMask.internalBinaryRead(reader, reader.uint32(), options, message.updateMask);
                    break;
                case /* google.ads.googleads.v11.resources.KeywordPlan create */ 1:
                    message.operation = {
                        oneofKind: "create",
                        create: KeywordPlan.internalBinaryRead(reader, reader.uint32(), options, (message.operation as any).create)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.KeywordPlan update */ 2:
                    message.operation = {
                        oneofKind: "update",
                        update: KeywordPlan.internalBinaryRead(reader, reader.uint32(), options, (message.operation as any).update)
                    };
                    break;
                case /* string remove */ 3:
                    message.operation = {
                        oneofKind: "remove",
                        remove: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.FieldMask update_mask = 4; */
        if (message.updateMask)
            FieldMask.internalBinaryWrite(message.updateMask, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.KeywordPlan create = 1; */
        if (message.operation.oneofKind === "create")
            KeywordPlan.internalBinaryWrite(message.operation.create, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.KeywordPlan update = 2; */
        if (message.operation.oneofKind === "update")
            KeywordPlan.internalBinaryWrite(message.operation.update, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string remove = 3; */
        if (message.operation.oneofKind === "remove")
            writer.tag(3, WireType.LengthDelimited).string(message.operation.remove);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordPlanOperation
 */
export const KeywordPlanOperation = new KeywordPlanOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateKeywordPlansResponse$Type extends MessageType<MutateKeywordPlansResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateKeywordPlansResponse", [
            { no: 3, name: "partial_failure_error", kind: "message", T: () => Status },
            { no: 2, name: "results", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MutateKeywordPlansResult }
        ]);
    }
    create(value?: PartialMessage<MutateKeywordPlansResponse>): MutateKeywordPlansResponse {
        const message = { results: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateKeywordPlansResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateKeywordPlansResponse): MutateKeywordPlansResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.rpc.Status partial_failure_error */ 3:
                    message.partialFailureError = Status.internalBinaryRead(reader, reader.uint32(), options, message.partialFailureError);
                    break;
                case /* repeated google.ads.googleads.v11.services.MutateKeywordPlansResult results */ 2:
                    message.results.push(MutateKeywordPlansResult.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateKeywordPlansResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.rpc.Status partial_failure_error = 3; */
        if (message.partialFailureError)
            Status.internalBinaryWrite(message.partialFailureError, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.services.MutateKeywordPlansResult results = 2; */
        for (let i = 0; i < message.results.length; i++)
            MutateKeywordPlansResult.internalBinaryWrite(message.results[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateKeywordPlansResponse
 */
export const MutateKeywordPlansResponse = new MutateKeywordPlansResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateKeywordPlansResult$Type extends MessageType<MutateKeywordPlansResult> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateKeywordPlansResult", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/KeywordPlan" } } }
        ]);
    }
    create(value?: PartialMessage<MutateKeywordPlansResult>): MutateKeywordPlansResult {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateKeywordPlansResult>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateKeywordPlansResult): MutateKeywordPlansResult {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateKeywordPlansResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateKeywordPlansResult
 */
export const MutateKeywordPlansResult = new MutateKeywordPlansResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateForecastCurveRequest$Type extends MessageType<GenerateForecastCurveRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateForecastCurveRequest", [
            { no: 1, name: "keyword_plan", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/KeywordPlan" } } }
        ]);
    }
    create(value?: PartialMessage<GenerateForecastCurveRequest>): GenerateForecastCurveRequest {
        const message = { keywordPlan: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenerateForecastCurveRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateForecastCurveRequest): GenerateForecastCurveRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string keyword_plan */ 1:
                    message.keywordPlan = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenerateForecastCurveRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string keyword_plan = 1; */
        if (message.keywordPlan !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.keywordPlan);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateForecastCurveRequest
 */
export const GenerateForecastCurveRequest = new GenerateForecastCurveRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateForecastCurveResponse$Type extends MessageType<GenerateForecastCurveResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateForecastCurveResponse", [
            { no: 1, name: "campaign_forecast_curves", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => KeywordPlanCampaignForecastCurve }
        ]);
    }
    create(value?: PartialMessage<GenerateForecastCurveResponse>): GenerateForecastCurveResponse {
        const message = { campaignForecastCurves: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenerateForecastCurveResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateForecastCurveResponse): GenerateForecastCurveResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.KeywordPlanCampaignForecastCurve campaign_forecast_curves */ 1:
                    message.campaignForecastCurves.push(KeywordPlanCampaignForecastCurve.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenerateForecastCurveResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.services.KeywordPlanCampaignForecastCurve campaign_forecast_curves = 1; */
        for (let i = 0; i < message.campaignForecastCurves.length; i++)
            KeywordPlanCampaignForecastCurve.internalBinaryWrite(message.campaignForecastCurves[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateForecastCurveResponse
 */
export const GenerateForecastCurveResponse = new GenerateForecastCurveResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateForecastTimeSeriesRequest$Type extends MessageType<GenerateForecastTimeSeriesRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateForecastTimeSeriesRequest", [
            { no: 1, name: "keyword_plan", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/KeywordPlan" } } }
        ]);
    }
    create(value?: PartialMessage<GenerateForecastTimeSeriesRequest>): GenerateForecastTimeSeriesRequest {
        const message = { keywordPlan: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenerateForecastTimeSeriesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateForecastTimeSeriesRequest): GenerateForecastTimeSeriesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string keyword_plan */ 1:
                    message.keywordPlan = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenerateForecastTimeSeriesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string keyword_plan = 1; */
        if (message.keywordPlan !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.keywordPlan);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateForecastTimeSeriesRequest
 */
export const GenerateForecastTimeSeriesRequest = new GenerateForecastTimeSeriesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateForecastTimeSeriesResponse$Type extends MessageType<GenerateForecastTimeSeriesResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateForecastTimeSeriesResponse", [
            { no: 1, name: "weekly_time_series_forecasts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => KeywordPlanWeeklyTimeSeriesForecast }
        ]);
    }
    create(value?: PartialMessage<GenerateForecastTimeSeriesResponse>): GenerateForecastTimeSeriesResponse {
        const message = { weeklyTimeSeriesForecasts: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenerateForecastTimeSeriesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateForecastTimeSeriesResponse): GenerateForecastTimeSeriesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.KeywordPlanWeeklyTimeSeriesForecast weekly_time_series_forecasts */ 1:
                    message.weeklyTimeSeriesForecasts.push(KeywordPlanWeeklyTimeSeriesForecast.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenerateForecastTimeSeriesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.services.KeywordPlanWeeklyTimeSeriesForecast weekly_time_series_forecasts = 1; */
        for (let i = 0; i < message.weeklyTimeSeriesForecasts.length; i++)
            KeywordPlanWeeklyTimeSeriesForecast.internalBinaryWrite(message.weeklyTimeSeriesForecasts[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateForecastTimeSeriesResponse
 */
export const GenerateForecastTimeSeriesResponse = new GenerateForecastTimeSeriesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateForecastMetricsRequest$Type extends MessageType<GenerateForecastMetricsRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateForecastMetricsRequest", [
            { no: 1, name: "keyword_plan", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/KeywordPlan" } } }
        ]);
    }
    create(value?: PartialMessage<GenerateForecastMetricsRequest>): GenerateForecastMetricsRequest {
        const message = { keywordPlan: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenerateForecastMetricsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateForecastMetricsRequest): GenerateForecastMetricsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string keyword_plan */ 1:
                    message.keywordPlan = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenerateForecastMetricsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string keyword_plan = 1; */
        if (message.keywordPlan !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.keywordPlan);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateForecastMetricsRequest
 */
export const GenerateForecastMetricsRequest = new GenerateForecastMetricsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateForecastMetricsResponse$Type extends MessageType<GenerateForecastMetricsResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateForecastMetricsResponse", [
            { no: 1, name: "campaign_forecasts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => KeywordPlanCampaignForecast },
            { no: 2, name: "ad_group_forecasts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => KeywordPlanAdGroupForecast },
            { no: 3, name: "keyword_forecasts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => KeywordPlanKeywordForecast }
        ]);
    }
    create(value?: PartialMessage<GenerateForecastMetricsResponse>): GenerateForecastMetricsResponse {
        const message = { campaignForecasts: [], adGroupForecasts: [], keywordForecasts: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenerateForecastMetricsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateForecastMetricsResponse): GenerateForecastMetricsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.KeywordPlanCampaignForecast campaign_forecasts */ 1:
                    message.campaignForecasts.push(KeywordPlanCampaignForecast.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.ads.googleads.v11.services.KeywordPlanAdGroupForecast ad_group_forecasts */ 2:
                    message.adGroupForecasts.push(KeywordPlanAdGroupForecast.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.ads.googleads.v11.services.KeywordPlanKeywordForecast keyword_forecasts */ 3:
                    message.keywordForecasts.push(KeywordPlanKeywordForecast.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenerateForecastMetricsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.services.KeywordPlanCampaignForecast campaign_forecasts = 1; */
        for (let i = 0; i < message.campaignForecasts.length; i++)
            KeywordPlanCampaignForecast.internalBinaryWrite(message.campaignForecasts[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.services.KeywordPlanAdGroupForecast ad_group_forecasts = 2; */
        for (let i = 0; i < message.adGroupForecasts.length; i++)
            KeywordPlanAdGroupForecast.internalBinaryWrite(message.adGroupForecasts[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.services.KeywordPlanKeywordForecast keyword_forecasts = 3; */
        for (let i = 0; i < message.keywordForecasts.length; i++)
            KeywordPlanKeywordForecast.internalBinaryWrite(message.keywordForecasts[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateForecastMetricsResponse
 */
export const GenerateForecastMetricsResponse = new GenerateForecastMetricsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanCampaignForecast$Type extends MessageType<KeywordPlanCampaignForecast> {
    constructor() {
        super("google.ads.googleads.v11.services.KeywordPlanCampaignForecast", [
            { no: 3, name: "keyword_plan_campaign", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "campaign_forecast", kind: "message", T: () => ForecastMetrics }
        ]);
    }
    create(value?: PartialMessage<KeywordPlanCampaignForecast>): KeywordPlanCampaignForecast {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanCampaignForecast>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanCampaignForecast): KeywordPlanCampaignForecast {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string keyword_plan_campaign */ 3:
                    message.keywordPlanCampaign = reader.string();
                    break;
                case /* google.ads.googleads.v11.services.ForecastMetrics campaign_forecast */ 2:
                    message.campaignForecast = ForecastMetrics.internalBinaryRead(reader, reader.uint32(), options, message.campaignForecast);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanCampaignForecast, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string keyword_plan_campaign = 3; */
        if (message.keywordPlanCampaign !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.keywordPlanCampaign);
        /* google.ads.googleads.v11.services.ForecastMetrics campaign_forecast = 2; */
        if (message.campaignForecast)
            ForecastMetrics.internalBinaryWrite(message.campaignForecast, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordPlanCampaignForecast
 */
export const KeywordPlanCampaignForecast = new KeywordPlanCampaignForecast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanAdGroupForecast$Type extends MessageType<KeywordPlanAdGroupForecast> {
    constructor() {
        super("google.ads.googleads.v11.services.KeywordPlanAdGroupForecast", [
            { no: 3, name: "keyword_plan_ad_group", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "ad_group_forecast", kind: "message", T: () => ForecastMetrics }
        ]);
    }
    create(value?: PartialMessage<KeywordPlanAdGroupForecast>): KeywordPlanAdGroupForecast {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanAdGroupForecast>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanAdGroupForecast): KeywordPlanAdGroupForecast {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string keyword_plan_ad_group */ 3:
                    message.keywordPlanAdGroup = reader.string();
                    break;
                case /* google.ads.googleads.v11.services.ForecastMetrics ad_group_forecast */ 2:
                    message.adGroupForecast = ForecastMetrics.internalBinaryRead(reader, reader.uint32(), options, message.adGroupForecast);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanAdGroupForecast, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string keyword_plan_ad_group = 3; */
        if (message.keywordPlanAdGroup !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.keywordPlanAdGroup);
        /* google.ads.googleads.v11.services.ForecastMetrics ad_group_forecast = 2; */
        if (message.adGroupForecast)
            ForecastMetrics.internalBinaryWrite(message.adGroupForecast, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordPlanAdGroupForecast
 */
export const KeywordPlanAdGroupForecast = new KeywordPlanAdGroupForecast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanKeywordForecast$Type extends MessageType<KeywordPlanKeywordForecast> {
    constructor() {
        super("google.ads.googleads.v11.services.KeywordPlanKeywordForecast", [
            { no: 3, name: "keyword_plan_ad_group_keyword", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "keyword_forecast", kind: "message", T: () => ForecastMetrics }
        ]);
    }
    create(value?: PartialMessage<KeywordPlanKeywordForecast>): KeywordPlanKeywordForecast {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanKeywordForecast>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanKeywordForecast): KeywordPlanKeywordForecast {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string keyword_plan_ad_group_keyword */ 3:
                    message.keywordPlanAdGroupKeyword = reader.string();
                    break;
                case /* google.ads.googleads.v11.services.ForecastMetrics keyword_forecast */ 2:
                    message.keywordForecast = ForecastMetrics.internalBinaryRead(reader, reader.uint32(), options, message.keywordForecast);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanKeywordForecast, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string keyword_plan_ad_group_keyword = 3; */
        if (message.keywordPlanAdGroupKeyword !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.keywordPlanAdGroupKeyword);
        /* google.ads.googleads.v11.services.ForecastMetrics keyword_forecast = 2; */
        if (message.keywordForecast)
            ForecastMetrics.internalBinaryWrite(message.keywordForecast, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordPlanKeywordForecast
 */
export const KeywordPlanKeywordForecast = new KeywordPlanKeywordForecast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanCampaignForecastCurve$Type extends MessageType<KeywordPlanCampaignForecastCurve> {
    constructor() {
        super("google.ads.googleads.v11.services.KeywordPlanCampaignForecastCurve", [
            { no: 3, name: "keyword_plan_campaign", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "max_cpc_bid_forecast_curve", kind: "message", T: () => KeywordPlanMaxCpcBidForecastCurve }
        ]);
    }
    create(value?: PartialMessage<KeywordPlanCampaignForecastCurve>): KeywordPlanCampaignForecastCurve {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanCampaignForecastCurve>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanCampaignForecastCurve): KeywordPlanCampaignForecastCurve {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string keyword_plan_campaign */ 3:
                    message.keywordPlanCampaign = reader.string();
                    break;
                case /* google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecastCurve max_cpc_bid_forecast_curve */ 2:
                    message.maxCpcBidForecastCurve = KeywordPlanMaxCpcBidForecastCurve.internalBinaryRead(reader, reader.uint32(), options, message.maxCpcBidForecastCurve);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanCampaignForecastCurve, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string keyword_plan_campaign = 3; */
        if (message.keywordPlanCampaign !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.keywordPlanCampaign);
        /* google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecastCurve max_cpc_bid_forecast_curve = 2; */
        if (message.maxCpcBidForecastCurve)
            KeywordPlanMaxCpcBidForecastCurve.internalBinaryWrite(message.maxCpcBidForecastCurve, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordPlanCampaignForecastCurve
 */
export const KeywordPlanCampaignForecastCurve = new KeywordPlanCampaignForecastCurve$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanMaxCpcBidForecastCurve$Type extends MessageType<KeywordPlanMaxCpcBidForecastCurve> {
    constructor() {
        super("google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecastCurve", [
            { no: 1, name: "max_cpc_bid_forecasts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => KeywordPlanMaxCpcBidForecast }
        ]);
    }
    create(value?: PartialMessage<KeywordPlanMaxCpcBidForecastCurve>): KeywordPlanMaxCpcBidForecastCurve {
        const message = { maxCpcBidForecasts: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanMaxCpcBidForecastCurve>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanMaxCpcBidForecastCurve): KeywordPlanMaxCpcBidForecastCurve {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecast max_cpc_bid_forecasts */ 1:
                    message.maxCpcBidForecasts.push(KeywordPlanMaxCpcBidForecast.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanMaxCpcBidForecastCurve, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecast max_cpc_bid_forecasts = 1; */
        for (let i = 0; i < message.maxCpcBidForecasts.length; i++)
            KeywordPlanMaxCpcBidForecast.internalBinaryWrite(message.maxCpcBidForecasts[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecastCurve
 */
export const KeywordPlanMaxCpcBidForecastCurve = new KeywordPlanMaxCpcBidForecastCurve$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanMaxCpcBidForecast$Type extends MessageType<KeywordPlanMaxCpcBidForecast> {
    constructor() {
        super("google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecast", [
            { no: 3, name: "max_cpc_bid_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "max_cpc_bid_forecast", kind: "message", T: () => ForecastMetrics }
        ]);
    }
    create(value?: PartialMessage<KeywordPlanMaxCpcBidForecast>): KeywordPlanMaxCpcBidForecast {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanMaxCpcBidForecast>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanMaxCpcBidForecast): KeywordPlanMaxCpcBidForecast {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 max_cpc_bid_micros */ 3:
                    message.maxCpcBidMicros = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.services.ForecastMetrics max_cpc_bid_forecast */ 2:
                    message.maxCpcBidForecast = ForecastMetrics.internalBinaryRead(reader, reader.uint32(), options, message.maxCpcBidForecast);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanMaxCpcBidForecast, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 max_cpc_bid_micros = 3; */
        if (message.maxCpcBidMicros !== undefined)
            writer.tag(3, WireType.Varint).int64(message.maxCpcBidMicros);
        /* google.ads.googleads.v11.services.ForecastMetrics max_cpc_bid_forecast = 2; */
        if (message.maxCpcBidForecast)
            ForecastMetrics.internalBinaryWrite(message.maxCpcBidForecast, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordPlanMaxCpcBidForecast
 */
export const KeywordPlanMaxCpcBidForecast = new KeywordPlanMaxCpcBidForecast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanWeeklyTimeSeriesForecast$Type extends MessageType<KeywordPlanWeeklyTimeSeriesForecast> {
    constructor() {
        super("google.ads.googleads.v11.services.KeywordPlanWeeklyTimeSeriesForecast", [
            { no: 1, name: "keyword_plan_campaign", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "weekly_forecasts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => KeywordPlanWeeklyForecast }
        ]);
    }
    create(value?: PartialMessage<KeywordPlanWeeklyTimeSeriesForecast>): KeywordPlanWeeklyTimeSeriesForecast {
        const message = { weeklyForecasts: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanWeeklyTimeSeriesForecast>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanWeeklyTimeSeriesForecast): KeywordPlanWeeklyTimeSeriesForecast {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string keyword_plan_campaign */ 1:
                    message.keywordPlanCampaign = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.KeywordPlanWeeklyForecast weekly_forecasts */ 2:
                    message.weeklyForecasts.push(KeywordPlanWeeklyForecast.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanWeeklyTimeSeriesForecast, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string keyword_plan_campaign = 1; */
        if (message.keywordPlanCampaign !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.keywordPlanCampaign);
        /* repeated google.ads.googleads.v11.services.KeywordPlanWeeklyForecast weekly_forecasts = 2; */
        for (let i = 0; i < message.weeklyForecasts.length; i++)
            KeywordPlanWeeklyForecast.internalBinaryWrite(message.weeklyForecasts[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordPlanWeeklyTimeSeriesForecast
 */
export const KeywordPlanWeeklyTimeSeriesForecast = new KeywordPlanWeeklyTimeSeriesForecast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanWeeklyForecast$Type extends MessageType<KeywordPlanWeeklyForecast> {
    constructor() {
        super("google.ads.googleads.v11.services.KeywordPlanWeeklyForecast", [
            { no: 1, name: "start_date", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "forecast", kind: "message", T: () => ForecastMetrics }
        ]);
    }
    create(value?: PartialMessage<KeywordPlanWeeklyForecast>): KeywordPlanWeeklyForecast {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanWeeklyForecast>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanWeeklyForecast): KeywordPlanWeeklyForecast {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string start_date */ 1:
                    message.startDate = reader.string();
                    break;
                case /* google.ads.googleads.v11.services.ForecastMetrics forecast */ 2:
                    message.forecast = ForecastMetrics.internalBinaryRead(reader, reader.uint32(), options, message.forecast);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanWeeklyForecast, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string start_date = 1; */
        if (message.startDate !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.startDate);
        /* google.ads.googleads.v11.services.ForecastMetrics forecast = 2; */
        if (message.forecast)
            ForecastMetrics.internalBinaryWrite(message.forecast, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordPlanWeeklyForecast
 */
export const KeywordPlanWeeklyForecast = new KeywordPlanWeeklyForecast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ForecastMetrics$Type extends MessageType<ForecastMetrics> {
    constructor() {
        super("google.ads.googleads.v11.services.ForecastMetrics", [
            { no: 7, name: "impressions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 8, name: "ctr", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 9, name: "average_cpc", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "clicks", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 11, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<ForecastMetrics>): ForecastMetrics {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ForecastMetrics>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ForecastMetrics): ForecastMetrics {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double impressions */ 7:
                    message.impressions = reader.double();
                    break;
                case /* optional double ctr */ 8:
                    message.ctr = reader.double();
                    break;
                case /* optional int64 average_cpc */ 9:
                    message.averageCpc = reader.int64().toBigInt();
                    break;
                case /* optional double clicks */ 10:
                    message.clicks = reader.double();
                    break;
                case /* optional int64 cost_micros */ 11:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ForecastMetrics, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional double impressions = 7; */
        if (message.impressions !== undefined)
            writer.tag(7, WireType.Bit64).double(message.impressions);
        /* optional double ctr = 8; */
        if (message.ctr !== undefined)
            writer.tag(8, WireType.Bit64).double(message.ctr);
        /* optional int64 average_cpc = 9; */
        if (message.averageCpc !== undefined)
            writer.tag(9, WireType.Varint).int64(message.averageCpc);
        /* optional double clicks = 10; */
        if (message.clicks !== undefined)
            writer.tag(10, WireType.Bit64).double(message.clicks);
        /* optional int64 cost_micros = 11; */
        if (message.costMicros !== undefined)
            writer.tag(11, WireType.Varint).int64(message.costMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ForecastMetrics
 */
export const ForecastMetrics = new ForecastMetrics$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateHistoricalMetricsRequest$Type extends MessageType<GenerateHistoricalMetricsRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateHistoricalMetricsRequest", [
            { no: 1, name: "keyword_plan", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/KeywordPlan" } } },
            { no: 2, name: "aggregate_metrics", kind: "message", T: () => KeywordPlanAggregateMetrics },
            { no: 3, name: "historical_metrics_options", kind: "message", T: () => HistoricalMetricsOptions }
        ]);
    }
    create(value?: PartialMessage<GenerateHistoricalMetricsRequest>): GenerateHistoricalMetricsRequest {
        const message = { keywordPlan: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenerateHistoricalMetricsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateHistoricalMetricsRequest): GenerateHistoricalMetricsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string keyword_plan */ 1:
                    message.keywordPlan = reader.string();
                    break;
                case /* google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics */ 2:
                    message.aggregateMetrics = KeywordPlanAggregateMetrics.internalBinaryRead(reader, reader.uint32(), options, message.aggregateMetrics);
                    break;
                case /* google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options */ 3:
                    message.historicalMetricsOptions = HistoricalMetricsOptions.internalBinaryRead(reader, reader.uint32(), options, message.historicalMetricsOptions);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenerateHistoricalMetricsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string keyword_plan = 1; */
        if (message.keywordPlan !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.keywordPlan);
        /* google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics = 2; */
        if (message.aggregateMetrics)
            KeywordPlanAggregateMetrics.internalBinaryWrite(message.aggregateMetrics, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options = 3; */
        if (message.historicalMetricsOptions)
            HistoricalMetricsOptions.internalBinaryWrite(message.historicalMetricsOptions, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateHistoricalMetricsRequest
 */
export const GenerateHistoricalMetricsRequest = new GenerateHistoricalMetricsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateHistoricalMetricsResponse$Type extends MessageType<GenerateHistoricalMetricsResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.GenerateHistoricalMetricsResponse", [
            { no: 1, name: "metrics", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => KeywordPlanKeywordHistoricalMetrics },
            { no: 2, name: "aggregate_metric_results", kind: "message", T: () => KeywordPlanAggregateMetricResults }
        ]);
    }
    create(value?: PartialMessage<GenerateHistoricalMetricsResponse>): GenerateHistoricalMetricsResponse {
        const message = { metrics: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenerateHistoricalMetricsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenerateHistoricalMetricsResponse): GenerateHistoricalMetricsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.KeywordPlanKeywordHistoricalMetrics metrics */ 1:
                    message.metrics.push(KeywordPlanKeywordHistoricalMetrics.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results */ 2:
                    message.aggregateMetricResults = KeywordPlanAggregateMetricResults.internalBinaryRead(reader, reader.uint32(), options, message.aggregateMetricResults);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenerateHistoricalMetricsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.services.KeywordPlanKeywordHistoricalMetrics metrics = 1; */
        for (let i = 0; i < message.metrics.length; i++)
            KeywordPlanKeywordHistoricalMetrics.internalBinaryWrite(message.metrics[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results = 2; */
        if (message.aggregateMetricResults)
            KeywordPlanAggregateMetricResults.internalBinaryWrite(message.aggregateMetricResults, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateHistoricalMetricsResponse
 */
export const GenerateHistoricalMetricsResponse = new GenerateHistoricalMetricsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanKeywordHistoricalMetrics$Type extends MessageType<KeywordPlanKeywordHistoricalMetrics> {
    constructor() {
        super("google.ads.googleads.v11.services.KeywordPlanKeywordHistoricalMetrics", [
            { no: 4, name: "search_query", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "close_variants", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "keyword_metrics", kind: "message", T: () => KeywordPlanHistoricalMetrics }
        ]);
    }
    create(value?: PartialMessage<KeywordPlanKeywordHistoricalMetrics>): KeywordPlanKeywordHistoricalMetrics {
        const message = { closeVariants: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanKeywordHistoricalMetrics>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanKeywordHistoricalMetrics): KeywordPlanKeywordHistoricalMetrics {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string search_query */ 4:
                    message.searchQuery = reader.string();
                    break;
                case /* repeated string close_variants */ 3:
                    message.closeVariants.push(reader.string());
                    break;
                case /* google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_metrics */ 2:
                    message.keywordMetrics = KeywordPlanHistoricalMetrics.internalBinaryRead(reader, reader.uint32(), options, message.keywordMetrics);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanKeywordHistoricalMetrics, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string search_query = 4; */
        if (message.searchQuery !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.searchQuery);
        /* repeated string close_variants = 3; */
        for (let i = 0; i < message.closeVariants.length; i++)
            writer.tag(3, WireType.LengthDelimited).string(message.closeVariants[i]);
        /* google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_metrics = 2; */
        if (message.keywordMetrics)
            KeywordPlanHistoricalMetrics.internalBinaryWrite(message.keywordMetrics, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordPlanKeywordHistoricalMetrics
 */
export const KeywordPlanKeywordHistoricalMetrics = new KeywordPlanKeywordHistoricalMetrics$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.KeywordPlanService
 */
export const KeywordPlanService = new ServiceType("google.ads.googleads.v11.services.KeywordPlanService", [
    { name: "MutateKeywordPlans", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}/keywordPlans:mutate", body: "*" }, "google.api.method_signature": ["customer_id,operations"] }, I: MutateKeywordPlansRequest, O: MutateKeywordPlansResponse },
    { name: "GenerateForecastCurve", options: { "google.api.http": { post: "/v11/{keyword_plan=customers/*/keywordPlans/*}:generateForecastCurve", body: "*" }, "google.api.method_signature": ["keyword_plan"] }, I: GenerateForecastCurveRequest, O: GenerateForecastCurveResponse },
    { name: "GenerateForecastTimeSeries", options: { "google.api.http": { post: "/v11/{keyword_plan=customers/*/keywordPlans/*}:generateForecastTimeSeries", body: "*" }, "google.api.method_signature": ["keyword_plan"] }, I: GenerateForecastTimeSeriesRequest, O: GenerateForecastTimeSeriesResponse },
    { name: "GenerateForecastMetrics", options: { "google.api.http": { post: "/v11/{keyword_plan=customers/*/keywordPlans/*}:generateForecastMetrics", body: "*" }, "google.api.method_signature": ["keyword_plan"] }, I: GenerateForecastMetricsRequest, O: GenerateForecastMetricsResponse },
    { name: "GenerateHistoricalMetrics", options: { "google.api.http": { post: "/v11/{keyword_plan=customers/*/keywordPlans/*}:generateHistoricalMetrics", body: "*" }, "google.api.method_signature": ["keyword_plan"] }, I: GenerateHistoricalMetricsRequest, O: GenerateHistoricalMetricsResponse }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
