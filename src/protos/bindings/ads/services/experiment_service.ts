// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/experiment_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { Operation } from "../../google/longrunning/operations";
import { Empty } from "../../google/protobuf/empty";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { Experiment } from "../resources/experiment";
import { FieldMask } from "../../google/protobuf/field_mask";
/**
 * Request message for [ExperimentService.MutateExperiments][google.ads.googleads.v11.services.ExperimentService.MutateExperiments].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateExperimentsRequest
 */
export interface MutateExperimentsRequest {
    /**
     * Required. The ID of the customer whose experiments are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on individual experiments.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.ExperimentOperation operations = 2;
     */
    operations: ExperimentOperation[];
    /**
     * If true, successful operations will be carried out and invalid
     * operations will return errors. If false, all operations will be carried
     * out in one transaction if and only if they are all valid.
     * Default is false.
     *
     * @generated from protobuf field: bool partial_failure = 3;
     */
    partialFailure: boolean;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 4;
     */
    validateOnly: boolean;
}
/**
 * A single operation on an experiment.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.ExperimentOperation
 */
export interface ExperimentOperation {
    /**
     * FieldMask that determines which resource fields are modified in an update.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 4;
     */
    updateMask?: FieldMask;
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "create";
        /**
         * Create operation
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Experiment create = 1;
         */
        create: Experiment;
    } | {
        oneofKind: "update";
        /**
         * Update operation: The experiment is expected to have a valid
         * resource name.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Experiment update = 2;
         */
        update: Experiment;
    } | {
        oneofKind: "remove";
        /**
         * Remove operation: The experiment is expected to have a valid
         * resource name, in this format:
         *
         * `customers/{customer_id}/experiments/{campaign_experiment_id}`
         *
         * @generated from protobuf field: string remove = 3;
         */
        remove: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for experiment mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateExperimentsResponse
 */
export interface MutateExperimentsResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 1;
     */
    partialFailureError?: Status;
    /**
     * All results for the mutate.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateExperimentResult results = 2;
     */
    results: MutateExperimentResult[];
}
/**
 * The result for the campaign experiment mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateExperimentResult
 */
export interface MutateExperimentResult {
    /**
     * Returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
}
/**
 * Request message for [ExperimentService.EndExperiment][google.ads.googleads.v11.services.ExperimentService.EndExperiment].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.EndExperimentRequest
 */
export interface EndExperimentRequest {
    /**
     * Required. The resource name of the campaign experiment to end.
     *
     * @generated from protobuf field: string experiment = 1;
     */
    experiment: string;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 2;
     */
    validateOnly: boolean;
}
/**
 * Request message for
 * [ExperimentService.ListExperimentAsyncErrors][google.ads.googleads.v11.services.ExperimentService.ListExperimentAsyncErrors].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.ListExperimentAsyncErrorsRequest
 */
export interface ListExperimentAsyncErrorsRequest {
    /**
     * Required. The name of the experiment from which to retrieve the async
     * errors.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Token of the page to retrieve. If not specified, the first
     * page of results will be returned. Use the value obtained from
     * `next_page_token` in the previous response in order to request
     * the next page of results.
     *
     * @generated from protobuf field: string page_token = 2;
     */
    pageToken: string;
    /**
     * Number of elements to retrieve in a single page.
     * When a page request is too large, the server may decide to
     * further limit the number of returned resources.
     * The maximum page size is 1000.
     *
     * @generated from protobuf field: int32 page_size = 3;
     */
    pageSize: number;
}
/**
 * Response message for
 * [ExperimentService.ListExperimentAsyncErrors][google.ads.googleads.v11.services.ExperimentService.ListExperimentAsyncErrors].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.ListExperimentAsyncErrorsResponse
 */
export interface ListExperimentAsyncErrorsResponse {
    /**
     * details of the errors when performing the asynchronous operation.
     *
     * @generated from protobuf field: repeated google.rpc.Status errors = 1;
     */
    errors: Status[];
    /**
     * Pagination token used to retrieve the next page of results.
     * Pass the content of this string as the `page_token` attribute of
     * the next request. `next_page_token` is not returned for the last
     * page.
     *
     * @generated from protobuf field: string next_page_token = 2;
     */
    nextPageToken: string;
}
/**
 * Request message for [ExperimentService.GraduateExperiment][google.ads.googleads.v11.services.ExperimentService.GraduateExperiment].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GraduateExperimentRequest
 */
export interface GraduateExperimentRequest {
    /**
     * Required. The experiment to be graduated.
     *
     * @generated from protobuf field: string experiment = 1;
     */
    experiment: string;
    /**
     * Required. List of campaign budget mappings for graduation. Each campaign that
     * appears here will graduate, and will be assigned a new budget that is
     * paired with it in the mapping. The maximum size is one.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.CampaignBudgetMapping campaign_budget_mappings = 2;
     */
    campaignBudgetMappings: CampaignBudgetMapping[];
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 3;
     */
    validateOnly: boolean;
}
/**
 * The mapping of experiment campaign and budget to be graduated.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.CampaignBudgetMapping
 */
export interface CampaignBudgetMapping {
    /**
     * Required. The experiment campaign to graduate.
     *
     * @generated from protobuf field: string experiment_campaign = 1;
     */
    experimentCampaign: string;
    /**
     * Required. The budget that should be attached to the graduating experiment campaign.
     *
     * @generated from protobuf field: string campaign_budget = 2;
     */
    campaignBudget: string;
}
/**
 * Request message for [ExperimentService.ScheduleExperiment][google.ads.googleads.v11.services.ExperimentService.ScheduleExperiment].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.ScheduleExperimentRequest
 */
export interface ScheduleExperimentRequest {
    /**
     * Required. The scheduled experiment.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 2;
     */
    validateOnly: boolean;
}
/**
 * The metadata of the scheduled experiment.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.ScheduleExperimentMetadata
 */
export interface ScheduleExperimentMetadata {
    /**
     * Required. The scheduled experiment.
     *
     * @generated from protobuf field: string experiment = 1;
     */
    experiment: string;
}
/**
 * Request message for [ExperimentService.PromoteExperiment][google.ads.googleads.v11.services.ExperimentService.PromoteExperiment].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.PromoteExperimentRequest
 */
export interface PromoteExperimentRequest {
    /**
     * Required. The resource name of the experiment to promote.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 2;
     */
    validateOnly: boolean;
}
/**
 * The metadata of the promoted experiment.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.PromoteExperimentMetadata
 */
export interface PromoteExperimentMetadata {
    /**
     * Required. The promoted experiment.
     *
     * @generated from protobuf field: string experiment = 1;
     */
    experiment: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class MutateExperimentsRequest$Type extends MessageType<MutateExperimentsRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateExperimentsRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ExperimentOperation, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "partial_failure", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<MutateExperimentsRequest>): MutateExperimentsRequest {
        const message = { customerId: "", operations: [], partialFailure: false, validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateExperimentsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateExperimentsRequest): MutateExperimentsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.ExperimentOperation operations */ 2:
                    message.operations.push(ExperimentOperation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool partial_failure */ 3:
                    message.partialFailure = reader.bool();
                    break;
                case /* bool validate_only */ 4:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateExperimentsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.customerId);
        /* repeated google.ads.googleads.v11.services.ExperimentOperation operations = 2; */
        for (let i = 0; i < message.operations.length; i++)
            ExperimentOperation.internalBinaryWrite(message.operations[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool partial_failure = 3; */
        if (message.partialFailure !== false)
            writer.tag(3, WireType.Varint).bool(message.partialFailure);
        /* bool validate_only = 4; */
        if (message.validateOnly !== false)
            writer.tag(4, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateExperimentsRequest
 */
export const MutateExperimentsRequest = new MutateExperimentsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExperimentOperation$Type extends MessageType<ExperimentOperation> {
    constructor() {
        super("google.ads.googleads.v11.services.ExperimentOperation", [
            { no: 4, name: "update_mask", kind: "message", T: () => FieldMask },
            { no: 1, name: "create", kind: "message", oneof: "operation", T: () => Experiment },
            { no: 2, name: "update", kind: "message", oneof: "operation", T: () => Experiment },
            { no: 3, name: "remove", kind: "scalar", oneof: "operation", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/Experiment" } } }
        ]);
    }
    create(value?: PartialMessage<ExperimentOperation>): ExperimentOperation {
        const message = { operation: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ExperimentOperation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExperimentOperation): ExperimentOperation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.FieldMask update_mask */ 4:
                    message.updateMask = FieldMask.internalBinaryRead(reader, reader.uint32(), options, message.updateMask);
                    break;
                case /* google.ads.googleads.v11.resources.Experiment create */ 1:
                    message.operation = {
                        oneofKind: "create",
                        create: Experiment.internalBinaryRead(reader, reader.uint32(), options, (message.operation as any).create)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.Experiment update */ 2:
                    message.operation = {
                        oneofKind: "update",
                        update: Experiment.internalBinaryRead(reader, reader.uint32(), options, (message.operation as any).update)
                    };
                    break;
                case /* string remove */ 3:
                    message.operation = {
                        oneofKind: "remove",
                        remove: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ExperimentOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.FieldMask update_mask = 4; */
        if (message.updateMask)
            FieldMask.internalBinaryWrite(message.updateMask, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Experiment create = 1; */
        if (message.operation.oneofKind === "create")
            Experiment.internalBinaryWrite(message.operation.create, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Experiment update = 2; */
        if (message.operation.oneofKind === "update")
            Experiment.internalBinaryWrite(message.operation.update, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string remove = 3; */
        if (message.operation.oneofKind === "remove")
            writer.tag(3, WireType.LengthDelimited).string(message.operation.remove);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ExperimentOperation
 */
export const ExperimentOperation = new ExperimentOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateExperimentsResponse$Type extends MessageType<MutateExperimentsResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateExperimentsResponse", [
            { no: 1, name: "partial_failure_error", kind: "message", T: () => Status },
            { no: 2, name: "results", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MutateExperimentResult }
        ]);
    }
    create(value?: PartialMessage<MutateExperimentsResponse>): MutateExperimentsResponse {
        const message = { results: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateExperimentsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateExperimentsResponse): MutateExperimentsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.rpc.Status partial_failure_error */ 1:
                    message.partialFailureError = Status.internalBinaryRead(reader, reader.uint32(), options, message.partialFailureError);
                    break;
                case /* repeated google.ads.googleads.v11.services.MutateExperimentResult results */ 2:
                    message.results.push(MutateExperimentResult.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateExperimentsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.rpc.Status partial_failure_error = 1; */
        if (message.partialFailureError)
            Status.internalBinaryWrite(message.partialFailureError, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.services.MutateExperimentResult results = 2; */
        for (let i = 0; i < message.results.length; i++)
            MutateExperimentResult.internalBinaryWrite(message.results[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateExperimentsResponse
 */
export const MutateExperimentsResponse = new MutateExperimentsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateExperimentResult$Type extends MessageType<MutateExperimentResult> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateExperimentResult", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/Experiment" } } }
        ]);
    }
    create(value?: PartialMessage<MutateExperimentResult>): MutateExperimentResult {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateExperimentResult>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateExperimentResult): MutateExperimentResult {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateExperimentResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateExperimentResult
 */
export const MutateExperimentResult = new MutateExperimentResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EndExperimentRequest$Type extends MessageType<EndExperimentRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.EndExperimentRequest", [
            { no: 1, name: "experiment", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/Experiment" } } },
            { no: 2, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<EndExperimentRequest>): EndExperimentRequest {
        const message = { experiment: "", validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EndExperimentRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EndExperimentRequest): EndExperimentRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string experiment */ 1:
                    message.experiment = reader.string();
                    break;
                case /* bool validate_only */ 2:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EndExperimentRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string experiment = 1; */
        if (message.experiment !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.experiment);
        /* bool validate_only = 2; */
        if (message.validateOnly !== false)
            writer.tag(2, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.EndExperimentRequest
 */
export const EndExperimentRequest = new EndExperimentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListExperimentAsyncErrorsRequest$Type extends MessageType<ListExperimentAsyncErrorsRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.ListExperimentAsyncErrorsRequest", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/Experiment" } } },
            { no: 2, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ListExperimentAsyncErrorsRequest>): ListExperimentAsyncErrorsRequest {
        const message = { resourceName: "", pageToken: "", pageSize: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListExperimentAsyncErrorsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListExperimentAsyncErrorsRequest): ListExperimentAsyncErrorsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* string page_token */ 2:
                    message.pageToken = reader.string();
                    break;
                case /* int32 page_size */ 3:
                    message.pageSize = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListExperimentAsyncErrorsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* string page_token = 2; */
        if (message.pageToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.pageToken);
        /* int32 page_size = 3; */
        if (message.pageSize !== 0)
            writer.tag(3, WireType.Varint).int32(message.pageSize);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ListExperimentAsyncErrorsRequest
 */
export const ListExperimentAsyncErrorsRequest = new ListExperimentAsyncErrorsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListExperimentAsyncErrorsResponse$Type extends MessageType<ListExperimentAsyncErrorsResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.ListExperimentAsyncErrorsResponse", [
            { no: 1, name: "errors", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Status },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListExperimentAsyncErrorsResponse>): ListExperimentAsyncErrorsResponse {
        const message = { errors: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListExperimentAsyncErrorsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListExperimentAsyncErrorsResponse): ListExperimentAsyncErrorsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.rpc.Status errors */ 1:
                    message.errors.push(Status.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListExperimentAsyncErrorsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.rpc.Status errors = 1; */
        for (let i = 0; i < message.errors.length; i++)
            Status.internalBinaryWrite(message.errors[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ListExperimentAsyncErrorsResponse
 */
export const ListExperimentAsyncErrorsResponse = new ListExperimentAsyncErrorsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GraduateExperimentRequest$Type extends MessageType<GraduateExperimentRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.GraduateExperimentRequest", [
            { no: 1, name: "experiment", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/Experiment" } } },
            { no: 2, name: "campaign_budget_mappings", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CampaignBudgetMapping, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GraduateExperimentRequest>): GraduateExperimentRequest {
        const message = { experiment: "", campaignBudgetMappings: [], validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GraduateExperimentRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GraduateExperimentRequest): GraduateExperimentRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string experiment */ 1:
                    message.experiment = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.CampaignBudgetMapping campaign_budget_mappings */ 2:
                    message.campaignBudgetMappings.push(CampaignBudgetMapping.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool validate_only */ 3:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GraduateExperimentRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string experiment = 1; */
        if (message.experiment !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.experiment);
        /* repeated google.ads.googleads.v11.services.CampaignBudgetMapping campaign_budget_mappings = 2; */
        for (let i = 0; i < message.campaignBudgetMappings.length; i++)
            CampaignBudgetMapping.internalBinaryWrite(message.campaignBudgetMappings[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool validate_only = 3; */
        if (message.validateOnly !== false)
            writer.tag(3, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GraduateExperimentRequest
 */
export const GraduateExperimentRequest = new GraduateExperimentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampaignBudgetMapping$Type extends MessageType<CampaignBudgetMapping> {
    constructor() {
        super("google.ads.googleads.v11.services.CampaignBudgetMapping", [
            { no: 1, name: "experiment_campaign", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/Campaign" } } },
            { no: 2, name: "campaign_budget", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/CampaignBudget" } } }
        ]);
    }
    create(value?: PartialMessage<CampaignBudgetMapping>): CampaignBudgetMapping {
        const message = { experimentCampaign: "", campaignBudget: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CampaignBudgetMapping>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CampaignBudgetMapping): CampaignBudgetMapping {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string experiment_campaign */ 1:
                    message.experimentCampaign = reader.string();
                    break;
                case /* string campaign_budget */ 2:
                    message.campaignBudget = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CampaignBudgetMapping, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string experiment_campaign = 1; */
        if (message.experimentCampaign !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.experimentCampaign);
        /* string campaign_budget = 2; */
        if (message.campaignBudget !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.campaignBudget);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CampaignBudgetMapping
 */
export const CampaignBudgetMapping = new CampaignBudgetMapping$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ScheduleExperimentRequest$Type extends MessageType<ScheduleExperimentRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.ScheduleExperimentRequest", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/Experiment" } } },
            { no: 2, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ScheduleExperimentRequest>): ScheduleExperimentRequest {
        const message = { resourceName: "", validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ScheduleExperimentRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ScheduleExperimentRequest): ScheduleExperimentRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* bool validate_only */ 2:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ScheduleExperimentRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* bool validate_only = 2; */
        if (message.validateOnly !== false)
            writer.tag(2, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ScheduleExperimentRequest
 */
export const ScheduleExperimentRequest = new ScheduleExperimentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ScheduleExperimentMetadata$Type extends MessageType<ScheduleExperimentMetadata> {
    constructor() {
        super("google.ads.googleads.v11.services.ScheduleExperimentMetadata", [
            { no: 1, name: "experiment", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/Experiment" } } }
        ]);
    }
    create(value?: PartialMessage<ScheduleExperimentMetadata>): ScheduleExperimentMetadata {
        const message = { experiment: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ScheduleExperimentMetadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ScheduleExperimentMetadata): ScheduleExperimentMetadata {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string experiment */ 1:
                    message.experiment = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ScheduleExperimentMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string experiment = 1; */
        if (message.experiment !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.experiment);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ScheduleExperimentMetadata
 */
export const ScheduleExperimentMetadata = new ScheduleExperimentMetadata$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PromoteExperimentRequest$Type extends MessageType<PromoteExperimentRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.PromoteExperimentRequest", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/Experiment" } } },
            { no: 2, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<PromoteExperimentRequest>): PromoteExperimentRequest {
        const message = { resourceName: "", validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PromoteExperimentRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PromoteExperimentRequest): PromoteExperimentRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* bool validate_only */ 2:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PromoteExperimentRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* bool validate_only = 2; */
        if (message.validateOnly !== false)
            writer.tag(2, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.PromoteExperimentRequest
 */
export const PromoteExperimentRequest = new PromoteExperimentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PromoteExperimentMetadata$Type extends MessageType<PromoteExperimentMetadata> {
    constructor() {
        super("google.ads.googleads.v11.services.PromoteExperimentMetadata", [
            { no: 1, name: "experiment", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/Experiment" } } }
        ]);
    }
    create(value?: PartialMessage<PromoteExperimentMetadata>): PromoteExperimentMetadata {
        const message = { experiment: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PromoteExperimentMetadata>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PromoteExperimentMetadata): PromoteExperimentMetadata {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string experiment */ 1:
                    message.experiment = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PromoteExperimentMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string experiment = 1; */
        if (message.experiment !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.experiment);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.PromoteExperimentMetadata
 */
export const PromoteExperimentMetadata = new PromoteExperimentMetadata$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.ExperimentService
 */
export const ExperimentService = new ServiceType("google.ads.googleads.v11.services.ExperimentService", [
    { name: "MutateExperiments", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}/experiments:mutate", body: "*" }, "google.api.method_signature": ["customer_id,operations"] }, I: MutateExperimentsRequest, O: MutateExperimentsResponse },
    { name: "EndExperiment", options: { "google.api.http": { post: "/v11/{experiment=customers/*/experiments/*}:endExperiment", body: "*" }, "google.api.method_signature": ["experiment"] }, I: EndExperimentRequest, O: Empty },
    { name: "ListExperimentAsyncErrors", options: { "google.api.http": { get: "/v11/{resource_name=customers/*/experiments/*}:listExperimentAsyncErrors" }, "google.api.method_signature": ["resource_name"] }, I: ListExperimentAsyncErrorsRequest, O: ListExperimentAsyncErrorsResponse },
    { name: "GraduateExperiment", options: { "google.api.http": { post: "/v11/{experiment=customers/*/experiments/*}:graduateExperiment", body: "*" }, "google.api.method_signature": ["experiment,campaign_budget_mappings"] }, I: GraduateExperimentRequest, O: Empty },
    { name: "ScheduleExperiment", options: { "google.api.http": { post: "/v11/{resource_name=customers/*/experiments/*}:scheduleExperiment", body: "*" }, "google.api.method_signature": ["resource_name"], "google.longrunning.operation_info": { responseType: "google.protobuf.Empty", metadataType: "google.ads.googleads.v11.services.ScheduleExperimentMetadata" } }, I: ScheduleExperimentRequest, O: Operation },
    { name: "PromoteExperiment", options: { "google.api.http": { post: "/v11/{resource_name=customers/*/experiments/*}:promoteExperiment", body: "*" }, "google.api.method_signature": ["resource_name"], "google.longrunning.operation_info": { responseType: "google.protobuf.Empty", metadataType: "google.ads.googleads.v11.services.PromoteExperimentMetadata" } }, I: PromoteExperimentRequest, O: Operation }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
