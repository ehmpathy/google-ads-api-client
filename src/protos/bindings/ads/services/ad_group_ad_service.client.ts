// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/ad_group_ad_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { AdGroupAdService } from "./ad_group_ad_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { MutateAdGroupAdsResponse } from "./ad_group_ad_service";
import type { MutateAdGroupAdsRequest } from "./ad_group_ad_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
// Proto file describing the Ad Group Ad service.

/**
 * Service to manage ads in an ad group.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.AdGroupAdService
 */
export interface IAdGroupAdServiceClient {
    /**
     * Creates, updates, or removes ads. Operation statuses are returned.
     *
     * List of thrown errors:
     *   [AdCustomizerError]()
     *   [AdError]()
     *   [AdGroupAdError]()
     *   [AdSharingError]()
     *   [AdxError]()
     *   [AssetError]()
     *   [AssetLinkError]()
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [CollectionSizeError]()
     *   [ContextError]()
     *   [DatabaseError]()
     *   [DateError]()
     *   [DistinctError]()
     *   [FeedAttributeReferenceError]()
     *   [FieldError]()
     *   [FieldMaskError]()
     *   [FunctionError]()
     *   [FunctionParsingError]()
     *   [HeaderError]()
     *   [IdError]()
     *   [ImageError]()
     *   [InternalError]()
     *   [ListOperationError]()
     *   [MediaBundleError]()
     *   [MediaFileError]()
     *   [MutateError]()
     *   [NewResourceCreationError]()
     *   [NotEmptyError]()
     *   [NullError]()
     *   [OperationAccessDeniedError]()
     *   [OperatorError]()
     *   [PolicyFindingError]()
     *   [PolicyValidationParameterError]()
     *   [PolicyViolationError]()
     *   [QuotaError]()
     *   [RangeError]()
     *   [RequestError]()
     *   [ResourceCountLimitExceededError]()
     *   [SizeLimitError]()
     *   [StringFormatError]()
     *   [StringLengthError]()
     *   [UrlFieldError]()
     *
     * @generated from protobuf rpc: MutateAdGroupAds(google.ads.googleads.v11.services.MutateAdGroupAdsRequest) returns (google.ads.googleads.v11.services.MutateAdGroupAdsResponse);
     */
    mutateAdGroupAds(input: MutateAdGroupAdsRequest, options?: RpcOptions): UnaryCall<MutateAdGroupAdsRequest, MutateAdGroupAdsResponse>;
}
// Proto file describing the Ad Group Ad service.

/**
 * Service to manage ads in an ad group.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.AdGroupAdService
 */
export class AdGroupAdServiceClient implements IAdGroupAdServiceClient, ServiceInfo {
    typeName = AdGroupAdService.typeName;
    methods = AdGroupAdService.methods;
    options = AdGroupAdService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Creates, updates, or removes ads. Operation statuses are returned.
     *
     * List of thrown errors:
     *   [AdCustomizerError]()
     *   [AdError]()
     *   [AdGroupAdError]()
     *   [AdSharingError]()
     *   [AdxError]()
     *   [AssetError]()
     *   [AssetLinkError]()
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [CollectionSizeError]()
     *   [ContextError]()
     *   [DatabaseError]()
     *   [DateError]()
     *   [DistinctError]()
     *   [FeedAttributeReferenceError]()
     *   [FieldError]()
     *   [FieldMaskError]()
     *   [FunctionError]()
     *   [FunctionParsingError]()
     *   [HeaderError]()
     *   [IdError]()
     *   [ImageError]()
     *   [InternalError]()
     *   [ListOperationError]()
     *   [MediaBundleError]()
     *   [MediaFileError]()
     *   [MutateError]()
     *   [NewResourceCreationError]()
     *   [NotEmptyError]()
     *   [NullError]()
     *   [OperationAccessDeniedError]()
     *   [OperatorError]()
     *   [PolicyFindingError]()
     *   [PolicyValidationParameterError]()
     *   [PolicyViolationError]()
     *   [QuotaError]()
     *   [RangeError]()
     *   [RequestError]()
     *   [ResourceCountLimitExceededError]()
     *   [SizeLimitError]()
     *   [StringFormatError]()
     *   [StringLengthError]()
     *   [UrlFieldError]()
     *
     * @generated from protobuf rpc: MutateAdGroupAds(google.ads.googleads.v11.services.MutateAdGroupAdsRequest) returns (google.ads.googleads.v11.services.MutateAdGroupAdsResponse);
     */
    mutateAdGroupAds(input: MutateAdGroupAdsRequest, options?: RpcOptions): UnaryCall<MutateAdGroupAdsRequest, MutateAdGroupAdsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<MutateAdGroupAdsRequest, MutateAdGroupAdsResponse>("unary", this._transport, method, opt, input);
    }
}
