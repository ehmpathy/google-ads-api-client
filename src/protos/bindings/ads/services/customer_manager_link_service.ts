// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/customer_manager_link_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CustomerManagerLink } from "../resources/customer_manager_link";
import { FieldMask } from "../../google/protobuf/field_mask";
/**
 * Request message for [CustomerManagerLinkService.MutateCustomerManagerLink][google.ads.googleads.v11.services.CustomerManagerLinkService.MutateCustomerManagerLink].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateCustomerManagerLinkRequest
 */
export interface MutateCustomerManagerLinkRequest {
    /**
     * Required. The ID of the customer whose customer manager links are being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The list of operations to perform on individual customer manager links.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.CustomerManagerLinkOperation operations = 2;
     */
    operations: CustomerManagerLinkOperation[];
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 3;
     */
    validateOnly: boolean;
}
/**
 * Request message for [CustomerManagerLinkService.MoveManagerLink][google.ads.googleads.v11.services.CustomerManagerLinkService.MoveManagerLink].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MoveManagerLinkRequest
 */
export interface MoveManagerLinkRequest {
    /**
     * Required. The ID of the client customer that is being moved.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The resource name of the previous CustomerManagerLink.
     * The resource name has the form:
     * `customers/{customer_id}/customerManagerLinks/{manager_customer_id}~{manager_link_id}`
     *
     * @generated from protobuf field: string previous_customer_manager_link = 2;
     */
    previousCustomerManagerLink: string;
    /**
     * Required. The resource name of the new manager customer that the client wants to move
     * to. Customer resource names have the format: "customers/{customer_id}"
     *
     * @generated from protobuf field: string new_manager = 3;
     */
    newManager: string;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 4;
     */
    validateOnly: boolean;
}
/**
 * Updates the status of a CustomerManagerLink.
 * The following actions are possible:
 * 1. Update operation with status ACTIVE accepts a pending invitation.
 * 2. Update operation with status REFUSED declines a pending invitation.
 * 3. Update operation with status INACTIVE terminates link to manager.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.CustomerManagerLinkOperation
 */
export interface CustomerManagerLinkOperation {
    /**
     * FieldMask that determines which resource fields are modified in an update.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 4;
     */
    updateMask?: FieldMask;
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "update";
        /**
         * Update operation: The link is expected to have a valid resource name.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.CustomerManagerLink update = 2;
         */
        update: CustomerManagerLink;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for a CustomerManagerLink mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateCustomerManagerLinkResponse
 */
export interface MutateCustomerManagerLinkResponse {
    /**
     * A result that identifies the resource affected by the mutate request.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateCustomerManagerLinkResult results = 1;
     */
    results: MutateCustomerManagerLinkResult[];
}
/**
 * Response message for a CustomerManagerLink moveManagerLink.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MoveManagerLinkResponse
 */
export interface MoveManagerLinkResponse {
    /**
     * Returned for successful operations. Represents a CustomerManagerLink
     * resource of the newly created link between client customer and new manager
     * customer.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
}
/**
 * The result for the customer manager link mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateCustomerManagerLinkResult
 */
export interface MutateCustomerManagerLinkResult {
    /**
     * Returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class MutateCustomerManagerLinkRequest$Type extends MessageType<MutateCustomerManagerLinkRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateCustomerManagerLinkRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CustomerManagerLinkOperation, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<MutateCustomerManagerLinkRequest>): MutateCustomerManagerLinkRequest {
        const message = { customerId: "", operations: [], validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateCustomerManagerLinkRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateCustomerManagerLinkRequest): MutateCustomerManagerLinkRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.CustomerManagerLinkOperation operations */ 2:
                    message.operations.push(CustomerManagerLinkOperation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool validate_only */ 3:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateCustomerManagerLinkRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.customerId);
        /* repeated google.ads.googleads.v11.services.CustomerManagerLinkOperation operations = 2; */
        for (let i = 0; i < message.operations.length; i++)
            CustomerManagerLinkOperation.internalBinaryWrite(message.operations[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool validate_only = 3; */
        if (message.validateOnly !== false)
            writer.tag(3, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateCustomerManagerLinkRequest
 */
export const MutateCustomerManagerLinkRequest = new MutateCustomerManagerLinkRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MoveManagerLinkRequest$Type extends MessageType<MoveManagerLinkRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.MoveManagerLinkRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "previous_customer_manager_link", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "new_manager", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 4, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<MoveManagerLinkRequest>): MoveManagerLinkRequest {
        const message = { customerId: "", previousCustomerManagerLink: "", newManager: "", validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MoveManagerLinkRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MoveManagerLinkRequest): MoveManagerLinkRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* string previous_customer_manager_link */ 2:
                    message.previousCustomerManagerLink = reader.string();
                    break;
                case /* string new_manager */ 3:
                    message.newManager = reader.string();
                    break;
                case /* bool validate_only */ 4:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MoveManagerLinkRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.customerId);
        /* string previous_customer_manager_link = 2; */
        if (message.previousCustomerManagerLink !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.previousCustomerManagerLink);
        /* string new_manager = 3; */
        if (message.newManager !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.newManager);
        /* bool validate_only = 4; */
        if (message.validateOnly !== false)
            writer.tag(4, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MoveManagerLinkRequest
 */
export const MoveManagerLinkRequest = new MoveManagerLinkRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomerManagerLinkOperation$Type extends MessageType<CustomerManagerLinkOperation> {
    constructor() {
        super("google.ads.googleads.v11.services.CustomerManagerLinkOperation", [
            { no: 4, name: "update_mask", kind: "message", T: () => FieldMask },
            { no: 2, name: "update", kind: "message", oneof: "operation", T: () => CustomerManagerLink }
        ]);
    }
    create(value?: PartialMessage<CustomerManagerLinkOperation>): CustomerManagerLinkOperation {
        const message = { operation: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomerManagerLinkOperation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomerManagerLinkOperation): CustomerManagerLinkOperation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.FieldMask update_mask */ 4:
                    message.updateMask = FieldMask.internalBinaryRead(reader, reader.uint32(), options, message.updateMask);
                    break;
                case /* google.ads.googleads.v11.resources.CustomerManagerLink update */ 2:
                    message.operation = {
                        oneofKind: "update",
                        update: CustomerManagerLink.internalBinaryRead(reader, reader.uint32(), options, (message.operation as any).update)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomerManagerLinkOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.FieldMask update_mask = 4; */
        if (message.updateMask)
            FieldMask.internalBinaryWrite(message.updateMask, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.CustomerManagerLink update = 2; */
        if (message.operation.oneofKind === "update")
            CustomerManagerLink.internalBinaryWrite(message.operation.update, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CustomerManagerLinkOperation
 */
export const CustomerManagerLinkOperation = new CustomerManagerLinkOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateCustomerManagerLinkResponse$Type extends MessageType<MutateCustomerManagerLinkResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateCustomerManagerLinkResponse", [
            { no: 1, name: "results", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MutateCustomerManagerLinkResult }
        ]);
    }
    create(value?: PartialMessage<MutateCustomerManagerLinkResponse>): MutateCustomerManagerLinkResponse {
        const message = { results: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateCustomerManagerLinkResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateCustomerManagerLinkResponse): MutateCustomerManagerLinkResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.MutateCustomerManagerLinkResult results */ 1:
                    message.results.push(MutateCustomerManagerLinkResult.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateCustomerManagerLinkResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.services.MutateCustomerManagerLinkResult results = 1; */
        for (let i = 0; i < message.results.length; i++)
            MutateCustomerManagerLinkResult.internalBinaryWrite(message.results[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateCustomerManagerLinkResponse
 */
export const MutateCustomerManagerLinkResponse = new MutateCustomerManagerLinkResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MoveManagerLinkResponse$Type extends MessageType<MoveManagerLinkResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.MoveManagerLinkResponse", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/CustomerManagerLink" } } }
        ]);
    }
    create(value?: PartialMessage<MoveManagerLinkResponse>): MoveManagerLinkResponse {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MoveManagerLinkResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MoveManagerLinkResponse): MoveManagerLinkResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MoveManagerLinkResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MoveManagerLinkResponse
 */
export const MoveManagerLinkResponse = new MoveManagerLinkResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateCustomerManagerLinkResult$Type extends MessageType<MutateCustomerManagerLinkResult> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateCustomerManagerLinkResult", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/CustomerManagerLink" } } }
        ]);
    }
    create(value?: PartialMessage<MutateCustomerManagerLinkResult>): MutateCustomerManagerLinkResult {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateCustomerManagerLinkResult>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateCustomerManagerLinkResult): MutateCustomerManagerLinkResult {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateCustomerManagerLinkResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateCustomerManagerLinkResult
 */
export const MutateCustomerManagerLinkResult = new MutateCustomerManagerLinkResult$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.CustomerManagerLinkService
 */
export const CustomerManagerLinkService = new ServiceType("google.ads.googleads.v11.services.CustomerManagerLinkService", [
    { name: "MutateCustomerManagerLink", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}/customerManagerLinks:mutate", body: "*" }, "google.api.method_signature": ["customer_id,operations"] }, I: MutateCustomerManagerLinkRequest, O: MutateCustomerManagerLinkResponse },
    { name: "MoveManagerLink", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}/customerManagerLinks:moveManagerLink", body: "*" }, "google.api.method_signature": ["customer_id,previous_customer_manager_link,new_manager"] }, I: MoveManagerLinkRequest, O: MoveManagerLinkResponse }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
