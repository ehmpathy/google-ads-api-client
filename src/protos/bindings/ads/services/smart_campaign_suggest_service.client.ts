// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/smart_campaign_suggest_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SmartCampaignSuggestService } from "./smart_campaign_suggest_service";
import type { SuggestKeywordThemesResponse } from "./smart_campaign_suggest_service";
import type { SuggestKeywordThemesRequest } from "./smart_campaign_suggest_service";
import type { SuggestSmartCampaignAdResponse } from "./smart_campaign_suggest_service";
import type { SuggestSmartCampaignAdRequest } from "./smart_campaign_suggest_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { SuggestSmartCampaignBudgetOptionsResponse } from "./smart_campaign_suggest_service";
import type { SuggestSmartCampaignBudgetOptionsRequest } from "./smart_campaign_suggest_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Service to get suggestions for Smart Campaigns.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.SmartCampaignSuggestService
 */
export interface ISmartCampaignSuggestServiceClient {
    /**
     * Returns BudgetOption suggestions.
     *
     * @generated from protobuf rpc: SuggestSmartCampaignBudgetOptions(google.ads.googleads.v11.services.SuggestSmartCampaignBudgetOptionsRequest) returns (google.ads.googleads.v11.services.SuggestSmartCampaignBudgetOptionsResponse);
     */
    suggestSmartCampaignBudgetOptions(input: SuggestSmartCampaignBudgetOptionsRequest, options?: RpcOptions): UnaryCall<SuggestSmartCampaignBudgetOptionsRequest, SuggestSmartCampaignBudgetOptionsResponse>;
    /**
     * Suggests a Smart campaign ad compatible with the Ad family of resources,
     * based on data points such as targeting and the business to advertise.
     *
     * @generated from protobuf rpc: SuggestSmartCampaignAd(google.ads.googleads.v11.services.SuggestSmartCampaignAdRequest) returns (google.ads.googleads.v11.services.SuggestSmartCampaignAdResponse);
     */
    suggestSmartCampaignAd(input: SuggestSmartCampaignAdRequest, options?: RpcOptions): UnaryCall<SuggestSmartCampaignAdRequest, SuggestSmartCampaignAdResponse>;
    /**
     * Suggests keyword themes to advertise on.
     *
     * @generated from protobuf rpc: SuggestKeywordThemes(google.ads.googleads.v11.services.SuggestKeywordThemesRequest) returns (google.ads.googleads.v11.services.SuggestKeywordThemesResponse);
     */
    suggestKeywordThemes(input: SuggestKeywordThemesRequest, options?: RpcOptions): UnaryCall<SuggestKeywordThemesRequest, SuggestKeywordThemesResponse>;
}
/**
 * Service to get suggestions for Smart Campaigns.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.SmartCampaignSuggestService
 */
export class SmartCampaignSuggestServiceClient implements ISmartCampaignSuggestServiceClient, ServiceInfo {
    typeName = SmartCampaignSuggestService.typeName;
    methods = SmartCampaignSuggestService.methods;
    options = SmartCampaignSuggestService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Returns BudgetOption suggestions.
     *
     * @generated from protobuf rpc: SuggestSmartCampaignBudgetOptions(google.ads.googleads.v11.services.SuggestSmartCampaignBudgetOptionsRequest) returns (google.ads.googleads.v11.services.SuggestSmartCampaignBudgetOptionsResponse);
     */
    suggestSmartCampaignBudgetOptions(input: SuggestSmartCampaignBudgetOptionsRequest, options?: RpcOptions): UnaryCall<SuggestSmartCampaignBudgetOptionsRequest, SuggestSmartCampaignBudgetOptionsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<SuggestSmartCampaignBudgetOptionsRequest, SuggestSmartCampaignBudgetOptionsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Suggests a Smart campaign ad compatible with the Ad family of resources,
     * based on data points such as targeting and the business to advertise.
     *
     * @generated from protobuf rpc: SuggestSmartCampaignAd(google.ads.googleads.v11.services.SuggestSmartCampaignAdRequest) returns (google.ads.googleads.v11.services.SuggestSmartCampaignAdResponse);
     */
    suggestSmartCampaignAd(input: SuggestSmartCampaignAdRequest, options?: RpcOptions): UnaryCall<SuggestSmartCampaignAdRequest, SuggestSmartCampaignAdResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<SuggestSmartCampaignAdRequest, SuggestSmartCampaignAdResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Suggests keyword themes to advertise on.
     *
     * @generated from protobuf rpc: SuggestKeywordThemes(google.ads.googleads.v11.services.SuggestKeywordThemesRequest) returns (google.ads.googleads.v11.services.SuggestKeywordThemesResponse);
     */
    suggestKeywordThemes(input: SuggestKeywordThemesRequest, options?: RpcOptions): UnaryCall<SuggestKeywordThemesRequest, SuggestKeywordThemesResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<SuggestKeywordThemesRequest, SuggestKeywordThemesResponse>("unary", this._transport, method, opt, input);
    }
}
