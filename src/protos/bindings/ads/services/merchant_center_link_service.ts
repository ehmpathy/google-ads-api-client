// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/merchant_center_link_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { FieldMask } from "../../google/protobuf/field_mask";
import { MerchantCenterLink } from "../resources/merchant_center_link";
/**
 * Request message for [MerchantCenterLinkService.ListMerchantCenterLinks][google.ads.googleads.v11.services.MerchantCenterLinkService.ListMerchantCenterLinks].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.ListMerchantCenterLinksRequest
 */
export interface ListMerchantCenterLinksRequest {
    /**
     * Required. The ID of the customer onto which to apply the Merchant Center link list
     * operation.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
}
/**
 * Response message for [MerchantCenterLinkService.ListMerchantCenterLinks][google.ads.googleads.v11.services.MerchantCenterLinkService.ListMerchantCenterLinks].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.ListMerchantCenterLinksResponse
 */
export interface ListMerchantCenterLinksResponse {
    /**
     * Merchant Center links available for the requested customer
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.resources.MerchantCenterLink merchant_center_links = 1;
     */
    merchantCenterLinks: MerchantCenterLink[];
}
/**
 * Request message for [MerchantCenterLinkService.GetMerchantCenterLink][google.ads.googleads.v11.services.MerchantCenterLinkService.GetMerchantCenterLink].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GetMerchantCenterLinkRequest
 */
export interface GetMerchantCenterLinkRequest {
    /**
     * Required. Resource name of the Merchant Center link.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
}
/**
 * Request message for [MerchantCenterLinkService.MutateMerchantCenterLink][google.ads.googleads.v11.services.MerchantCenterLinkService.MutateMerchantCenterLink].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateMerchantCenterLinkRequest
 */
export interface MutateMerchantCenterLinkRequest {
    /**
     * Required. The ID of the customer being modified.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The operation to perform on the link
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.MerchantCenterLinkOperation operation = 2;
     */
    operation?: MerchantCenterLinkOperation;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 3;
     */
    validateOnly: boolean;
}
/**
 * A single update on a Merchant Center link.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MerchantCenterLinkOperation
 */
export interface MerchantCenterLinkOperation {
    /**
     * FieldMask that determines which resource fields are modified in an update.
     *
     * @generated from protobuf field: google.protobuf.FieldMask update_mask = 3;
     */
    updateMask?: FieldMask;
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "update";
        /**
         * Update operation: The merchant center link is expected to have a valid
         * resource name.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.MerchantCenterLink update = 1;
         */
        update: MerchantCenterLink;
    } | {
        oneofKind: "remove";
        /**
         * Remove operation: A resource name for the removed merchant center link is
         * expected, in this format:
         *
         * `customers/{customer_id}/merchantCenterLinks/{merchant_center_id}`
         *
         * @generated from protobuf field: string remove = 2;
         */
        remove: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for Merchant Center link mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateMerchantCenterLinkResponse
 */
export interface MutateMerchantCenterLinkResponse {
    /**
     * Result for the mutate.
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.MutateMerchantCenterLinkResult result = 2;
     */
    result?: MutateMerchantCenterLinkResult;
}
/**
 * The result for the Merchant Center link mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateMerchantCenterLinkResult
 */
export interface MutateMerchantCenterLinkResult {
    /**
     * Returned for successful operations.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class ListMerchantCenterLinksRequest$Type extends MessageType<ListMerchantCenterLinksRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.ListMerchantCenterLinksRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value?: PartialMessage<ListMerchantCenterLinksRequest>): ListMerchantCenterLinksRequest {
        const message = { customerId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListMerchantCenterLinksRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListMerchantCenterLinksRequest): ListMerchantCenterLinksRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListMerchantCenterLinksRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.customerId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ListMerchantCenterLinksRequest
 */
export const ListMerchantCenterLinksRequest = new ListMerchantCenterLinksRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListMerchantCenterLinksResponse$Type extends MessageType<ListMerchantCenterLinksResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.ListMerchantCenterLinksResponse", [
            { no: 1, name: "merchant_center_links", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MerchantCenterLink }
        ]);
    }
    create(value?: PartialMessage<ListMerchantCenterLinksResponse>): ListMerchantCenterLinksResponse {
        const message = { merchantCenterLinks: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListMerchantCenterLinksResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListMerchantCenterLinksResponse): ListMerchantCenterLinksResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.resources.MerchantCenterLink merchant_center_links */ 1:
                    message.merchantCenterLinks.push(MerchantCenterLink.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListMerchantCenterLinksResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.resources.MerchantCenterLink merchant_center_links = 1; */
        for (let i = 0; i < message.merchantCenterLinks.length; i++)
            MerchantCenterLink.internalBinaryWrite(message.merchantCenterLinks[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ListMerchantCenterLinksResponse
 */
export const ListMerchantCenterLinksResponse = new ListMerchantCenterLinksResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetMerchantCenterLinkRequest$Type extends MessageType<GetMerchantCenterLinkRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.GetMerchantCenterLinkRequest", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/MerchantCenterLink" } } }
        ]);
    }
    create(value?: PartialMessage<GetMerchantCenterLinkRequest>): GetMerchantCenterLinkRequest {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetMerchantCenterLinkRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetMerchantCenterLinkRequest): GetMerchantCenterLinkRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetMerchantCenterLinkRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GetMerchantCenterLinkRequest
 */
export const GetMerchantCenterLinkRequest = new GetMerchantCenterLinkRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateMerchantCenterLinkRequest$Type extends MessageType<MutateMerchantCenterLinkRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateMerchantCenterLinkRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "operation", kind: "message", T: () => MerchantCenterLinkOperation, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<MutateMerchantCenterLinkRequest>): MutateMerchantCenterLinkRequest {
        const message = { customerId: "", validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateMerchantCenterLinkRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateMerchantCenterLinkRequest): MutateMerchantCenterLinkRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* google.ads.googleads.v11.services.MerchantCenterLinkOperation operation */ 2:
                    message.operation = MerchantCenterLinkOperation.internalBinaryRead(reader, reader.uint32(), options, message.operation);
                    break;
                case /* bool validate_only */ 3:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateMerchantCenterLinkRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.customerId);
        /* google.ads.googleads.v11.services.MerchantCenterLinkOperation operation = 2; */
        if (message.operation)
            MerchantCenterLinkOperation.internalBinaryWrite(message.operation, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool validate_only = 3; */
        if (message.validateOnly !== false)
            writer.tag(3, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateMerchantCenterLinkRequest
 */
export const MutateMerchantCenterLinkRequest = new MutateMerchantCenterLinkRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MerchantCenterLinkOperation$Type extends MessageType<MerchantCenterLinkOperation> {
    constructor() {
        super("google.ads.googleads.v11.services.MerchantCenterLinkOperation", [
            { no: 3, name: "update_mask", kind: "message", T: () => FieldMask },
            { no: 1, name: "update", kind: "message", oneof: "operation", T: () => MerchantCenterLink },
            { no: 2, name: "remove", kind: "scalar", oneof: "operation", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/MerchantCenterLink" } } }
        ]);
    }
    create(value?: PartialMessage<MerchantCenterLinkOperation>): MerchantCenterLinkOperation {
        const message = { operation: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MerchantCenterLinkOperation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MerchantCenterLinkOperation): MerchantCenterLinkOperation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.FieldMask update_mask */ 3:
                    message.updateMask = FieldMask.internalBinaryRead(reader, reader.uint32(), options, message.updateMask);
                    break;
                case /* google.ads.googleads.v11.resources.MerchantCenterLink update */ 1:
                    message.operation = {
                        oneofKind: "update",
                        update: MerchantCenterLink.internalBinaryRead(reader, reader.uint32(), options, (message.operation as any).update)
                    };
                    break;
                case /* string remove */ 2:
                    message.operation = {
                        oneofKind: "remove",
                        remove: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MerchantCenterLinkOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.FieldMask update_mask = 3; */
        if (message.updateMask)
            FieldMask.internalBinaryWrite(message.updateMask, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.MerchantCenterLink update = 1; */
        if (message.operation.oneofKind === "update")
            MerchantCenterLink.internalBinaryWrite(message.operation.update, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string remove = 2; */
        if (message.operation.oneofKind === "remove")
            writer.tag(2, WireType.LengthDelimited).string(message.operation.remove);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MerchantCenterLinkOperation
 */
export const MerchantCenterLinkOperation = new MerchantCenterLinkOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateMerchantCenterLinkResponse$Type extends MessageType<MutateMerchantCenterLinkResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateMerchantCenterLinkResponse", [
            { no: 2, name: "result", kind: "message", T: () => MutateMerchantCenterLinkResult }
        ]);
    }
    create(value?: PartialMessage<MutateMerchantCenterLinkResponse>): MutateMerchantCenterLinkResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateMerchantCenterLinkResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateMerchantCenterLinkResponse): MutateMerchantCenterLinkResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.services.MutateMerchantCenterLinkResult result */ 2:
                    message.result = MutateMerchantCenterLinkResult.internalBinaryRead(reader, reader.uint32(), options, message.result);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateMerchantCenterLinkResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.services.MutateMerchantCenterLinkResult result = 2; */
        if (message.result)
            MutateMerchantCenterLinkResult.internalBinaryWrite(message.result, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateMerchantCenterLinkResponse
 */
export const MutateMerchantCenterLinkResponse = new MutateMerchantCenterLinkResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateMerchantCenterLinkResult$Type extends MessageType<MutateMerchantCenterLinkResult> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateMerchantCenterLinkResult", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/MerchantCenterLink" } } }
        ]);
    }
    create(value?: PartialMessage<MutateMerchantCenterLinkResult>): MutateMerchantCenterLinkResult {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateMerchantCenterLinkResult>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateMerchantCenterLinkResult): MutateMerchantCenterLinkResult {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateMerchantCenterLinkResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateMerchantCenterLinkResult
 */
export const MutateMerchantCenterLinkResult = new MutateMerchantCenterLinkResult$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.MerchantCenterLinkService
 */
export const MerchantCenterLinkService = new ServiceType("google.ads.googleads.v11.services.MerchantCenterLinkService", [
    { name: "ListMerchantCenterLinks", options: { "google.api.http": { get: "/v11/customers/{customer_id=*}/merchantCenterLinks" }, "google.api.method_signature": ["customer_id"] }, I: ListMerchantCenterLinksRequest, O: ListMerchantCenterLinksResponse },
    { name: "GetMerchantCenterLink", options: { "google.api.http": { get: "/v11/{resource_name=customers/*/merchantCenterLinks/*}" }, "google.api.method_signature": ["resource_name"] }, I: GetMerchantCenterLinkRequest, O: MerchantCenterLink },
    { name: "MutateMerchantCenterLink", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}/merchantCenterLinks:mutate", body: "*" }, "google.api.method_signature": ["customer_id,operation"] }, I: MutateMerchantCenterLinkRequest, O: MutateMerchantCenterLinkResponse }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
