// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/offline_user_data_job_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { Operation } from "../../google/longrunning/operations";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { UserData } from "../common/offline_user_data";
import { OfflineUserDataJob } from "../resources/offline_user_data_job";
/**
 * Request message for
 * [OfflineUserDataJobService.CreateOfflineUserDataJob][google.ads.googleads.v11.services.OfflineUserDataJobService.CreateOfflineUserDataJob].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.CreateOfflineUserDataJobRequest
 */
export interface CreateOfflineUserDataJobRequest {
    /**
     * Required. The ID of the customer for which to create an offline user data job.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The offline user data job to be created.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.OfflineUserDataJob job = 2;
     */
    job?: OfflineUserDataJob;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 3;
     */
    validateOnly: boolean;
    /**
     * If true, match rate range for the offline user data job is calculated and
     * made available in the resource.
     *
     * @generated from protobuf field: bool enable_match_rate_range_preview = 5;
     */
    enableMatchRateRangePreview: boolean;
}
/**
 * Response message for
 * [OfflineUserDataJobService.CreateOfflineUserDataJob][google.ads.googleads.v11.services.OfflineUserDataJobService.CreateOfflineUserDataJob].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.CreateOfflineUserDataJobResponse
 */
export interface CreateOfflineUserDataJobResponse {
    /**
     * The resource name of the OfflineUserDataJob.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
}
/**
 * Request message for [OfflineUserDataJobService.RunOfflineUserDataJob][google.ads.googleads.v11.services.OfflineUserDataJobService.RunOfflineUserDataJob].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.RunOfflineUserDataJobRequest
 */
export interface RunOfflineUserDataJobRequest {
    /**
     * Required. The resource name of the OfflineUserDataJob to run.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 2;
     */
    validateOnly: boolean;
}
/**
 * Request message for
 * [OfflineUserDataJobService.AddOfflineUserDataJobOperations][google.ads.googleads.v11.services.OfflineUserDataJobService.AddOfflineUserDataJobOperations].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsRequest
 */
export interface AddOfflineUserDataJobOperationsRequest {
    /**
     * Required. The resource name of the OfflineUserDataJob.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * True to enable partial failure for the offline user data job.
     *
     * @generated from protobuf field: optional bool enable_partial_failure = 4;
     */
    enablePartialFailure?: boolean;
    /**
     * True to enable warnings for the offline user data job. When enabled, a
     * warning will not block the OfflineUserDataJobOperation, and will also
     * return warning messages about malformed field values.
     *
     * @generated from protobuf field: optional bool enable_warnings = 6;
     */
    enableWarnings?: boolean;
    /**
     * Required. The list of operations to be done.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.OfflineUserDataJobOperation operations = 3;
     */
    operations: OfflineUserDataJobOperation[];
    /**
     * If true, the request is validated but not executed. Only errors are
     * returned, not results.
     *
     * @generated from protobuf field: bool validate_only = 5;
     */
    validateOnly: boolean;
}
/**
 * Operation to be made for the AddOfflineUserDataJobOperationsRequest.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.OfflineUserDataJobOperation
 */
export interface OfflineUserDataJobOperation {
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "create";
        /**
         * Add the provided data to the transaction. Data cannot be retrieved after
         * being uploaded.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.UserData create = 1;
         */
        create: UserData;
    } | {
        oneofKind: "remove";
        /**
         * Remove the provided data from the transaction. Data cannot be retrieved
         * after being uploaded.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.UserData remove = 2;
         */
        remove: UserData;
    } | {
        oneofKind: "removeAll";
        /**
         * Remove all previously provided data. This is only supported for Customer
         * Match.
         *
         * @generated from protobuf field: bool remove_all = 3;
         */
        removeAll: boolean;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for
 * [OfflineUserDataJobService.AddOfflineUserDataJobOperations][google.ads.googleads.v11.services.OfflineUserDataJobService.AddOfflineUserDataJobOperations].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsResponse
 */
export interface AddOfflineUserDataJobOperationsResponse {
    /**
     * Errors that pertain to operation failures in the partial failure mode.
     * Returned only when partial_failure = true and all errors occur inside the
     * operations. If any errors occur outside the operations (for example, auth
     * errors), we return an RPC level error.
     *
     * @generated from protobuf field: google.rpc.Status partial_failure_error = 1;
     */
    partialFailureError?: Status;
    /**
     * Non blocking errors that pertain to operation failures in the warnings
     * mode. Returned only when enable_warnings = true.
     *
     * @generated from protobuf field: google.rpc.Status warning = 2;
     */
    warning?: Status;
}
// @generated message type with reflection information, may provide speed optimized methods
class CreateOfflineUserDataJobRequest$Type extends MessageType<CreateOfflineUserDataJobRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.CreateOfflineUserDataJobRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "job", kind: "message", T: () => OfflineUserDataJob, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "enable_match_rate_range_preview", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<CreateOfflineUserDataJobRequest>): CreateOfflineUserDataJobRequest {
        const message = { customerId: "", validateOnly: false, enableMatchRateRangePreview: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CreateOfflineUserDataJobRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateOfflineUserDataJobRequest): CreateOfflineUserDataJobRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* google.ads.googleads.v11.resources.OfflineUserDataJob job */ 2:
                    message.job = OfflineUserDataJob.internalBinaryRead(reader, reader.uint32(), options, message.job);
                    break;
                case /* bool validate_only */ 3:
                    message.validateOnly = reader.bool();
                    break;
                case /* bool enable_match_rate_range_preview */ 5:
                    message.enableMatchRateRangePreview = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CreateOfflineUserDataJobRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.customerId);
        /* google.ads.googleads.v11.resources.OfflineUserDataJob job = 2; */
        if (message.job)
            OfflineUserDataJob.internalBinaryWrite(message.job, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool validate_only = 3; */
        if (message.validateOnly !== false)
            writer.tag(3, WireType.Varint).bool(message.validateOnly);
        /* bool enable_match_rate_range_preview = 5; */
        if (message.enableMatchRateRangePreview !== false)
            writer.tag(5, WireType.Varint).bool(message.enableMatchRateRangePreview);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CreateOfflineUserDataJobRequest
 */
export const CreateOfflineUserDataJobRequest = new CreateOfflineUserDataJobRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateOfflineUserDataJobResponse$Type extends MessageType<CreateOfflineUserDataJobResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.CreateOfflineUserDataJobResponse", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/OfflineUserDataJob" } } }
        ]);
    }
    create(value?: PartialMessage<CreateOfflineUserDataJobResponse>): CreateOfflineUserDataJobResponse {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CreateOfflineUserDataJobResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateOfflineUserDataJobResponse): CreateOfflineUserDataJobResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CreateOfflineUserDataJobResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.CreateOfflineUserDataJobResponse
 */
export const CreateOfflineUserDataJobResponse = new CreateOfflineUserDataJobResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RunOfflineUserDataJobRequest$Type extends MessageType<RunOfflineUserDataJobRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.RunOfflineUserDataJobRequest", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/OfflineUserDataJob" } } },
            { no: 2, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<RunOfflineUserDataJobRequest>): RunOfflineUserDataJobRequest {
        const message = { resourceName: "", validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RunOfflineUserDataJobRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RunOfflineUserDataJobRequest): RunOfflineUserDataJobRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* bool validate_only */ 2:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RunOfflineUserDataJobRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* bool validate_only = 2; */
        if (message.validateOnly !== false)
            writer.tag(2, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.RunOfflineUserDataJobRequest
 */
export const RunOfflineUserDataJobRequest = new RunOfflineUserDataJobRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddOfflineUserDataJobOperationsRequest$Type extends MessageType<AddOfflineUserDataJobOperationsRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsRequest", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/OfflineUserDataJob" } } },
            { no: 4, name: "enable_partial_failure", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "enable_warnings", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OfflineUserDataJobOperation, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 5, name: "validate_only", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<AddOfflineUserDataJobOperationsRequest>): AddOfflineUserDataJobOperationsRequest {
        const message = { resourceName: "", operations: [], validateOnly: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddOfflineUserDataJobOperationsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddOfflineUserDataJobOperationsRequest): AddOfflineUserDataJobOperationsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional bool enable_partial_failure */ 4:
                    message.enablePartialFailure = reader.bool();
                    break;
                case /* optional bool enable_warnings */ 6:
                    message.enableWarnings = reader.bool();
                    break;
                case /* repeated google.ads.googleads.v11.services.OfflineUserDataJobOperation operations */ 3:
                    message.operations.push(OfflineUserDataJobOperation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool validate_only */ 5:
                    message.validateOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddOfflineUserDataJobOperationsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional bool enable_partial_failure = 4; */
        if (message.enablePartialFailure !== undefined)
            writer.tag(4, WireType.Varint).bool(message.enablePartialFailure);
        /* optional bool enable_warnings = 6; */
        if (message.enableWarnings !== undefined)
            writer.tag(6, WireType.Varint).bool(message.enableWarnings);
        /* repeated google.ads.googleads.v11.services.OfflineUserDataJobOperation operations = 3; */
        for (let i = 0; i < message.operations.length; i++)
            OfflineUserDataJobOperation.internalBinaryWrite(message.operations[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bool validate_only = 5; */
        if (message.validateOnly !== false)
            writer.tag(5, WireType.Varint).bool(message.validateOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsRequest
 */
export const AddOfflineUserDataJobOperationsRequest = new AddOfflineUserDataJobOperationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfflineUserDataJobOperation$Type extends MessageType<OfflineUserDataJobOperation> {
    constructor() {
        super("google.ads.googleads.v11.services.OfflineUserDataJobOperation", [
            { no: 1, name: "create", kind: "message", oneof: "operation", T: () => UserData },
            { no: 2, name: "remove", kind: "message", oneof: "operation", T: () => UserData },
            { no: 3, name: "remove_all", kind: "scalar", oneof: "operation", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<OfflineUserDataJobOperation>): OfflineUserDataJobOperation {
        const message = { operation: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OfflineUserDataJobOperation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OfflineUserDataJobOperation): OfflineUserDataJobOperation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.UserData create */ 1:
                    message.operation = {
                        oneofKind: "create",
                        create: UserData.internalBinaryRead(reader, reader.uint32(), options, (message.operation as any).create)
                    };
                    break;
                case /* google.ads.googleads.v11.common.UserData remove */ 2:
                    message.operation = {
                        oneofKind: "remove",
                        remove: UserData.internalBinaryRead(reader, reader.uint32(), options, (message.operation as any).remove)
                    };
                    break;
                case /* bool remove_all */ 3:
                    message.operation = {
                        oneofKind: "removeAll",
                        removeAll: reader.bool()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OfflineUserDataJobOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.common.UserData create = 1; */
        if (message.operation.oneofKind === "create")
            UserData.internalBinaryWrite(message.operation.create, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.UserData remove = 2; */
        if (message.operation.oneofKind === "remove")
            UserData.internalBinaryWrite(message.operation.remove, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool remove_all = 3; */
        if (message.operation.oneofKind === "removeAll")
            writer.tag(3, WireType.Varint).bool(message.operation.removeAll);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.OfflineUserDataJobOperation
 */
export const OfflineUserDataJobOperation = new OfflineUserDataJobOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddOfflineUserDataJobOperationsResponse$Type extends MessageType<AddOfflineUserDataJobOperationsResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsResponse", [
            { no: 1, name: "partial_failure_error", kind: "message", T: () => Status },
            { no: 2, name: "warning", kind: "message", T: () => Status }
        ]);
    }
    create(value?: PartialMessage<AddOfflineUserDataJobOperationsResponse>): AddOfflineUserDataJobOperationsResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddOfflineUserDataJobOperationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddOfflineUserDataJobOperationsResponse): AddOfflineUserDataJobOperationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.rpc.Status partial_failure_error */ 1:
                    message.partialFailureError = Status.internalBinaryRead(reader, reader.uint32(), options, message.partialFailureError);
                    break;
                case /* google.rpc.Status warning */ 2:
                    message.warning = Status.internalBinaryRead(reader, reader.uint32(), options, message.warning);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddOfflineUserDataJobOperationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.rpc.Status partial_failure_error = 1; */
        if (message.partialFailureError)
            Status.internalBinaryWrite(message.partialFailureError, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.rpc.Status warning = 2; */
        if (message.warning)
            Status.internalBinaryWrite(message.warning, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AddOfflineUserDataJobOperationsResponse
 */
export const AddOfflineUserDataJobOperationsResponse = new AddOfflineUserDataJobOperationsResponse$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.OfflineUserDataJobService
 */
export const OfflineUserDataJobService = new ServiceType("google.ads.googleads.v11.services.OfflineUserDataJobService", [
    { name: "CreateOfflineUserDataJob", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}/offlineUserDataJobs:create", body: "*" }, "google.api.method_signature": ["customer_id,job"] }, I: CreateOfflineUserDataJobRequest, O: CreateOfflineUserDataJobResponse },
    { name: "AddOfflineUserDataJobOperations", options: { "google.api.http": { post: "/v11/{resource_name=customers/*/offlineUserDataJobs/*}:addOperations", body: "*" }, "google.api.method_signature": ["resource_name,operations"] }, I: AddOfflineUserDataJobOperationsRequest, O: AddOfflineUserDataJobOperationsResponse },
    { name: "RunOfflineUserDataJob", options: { "google.api.http": { post: "/v11/{resource_name=customers/*/offlineUserDataJobs/*}:run", body: "*" }, "google.api.method_signature": ["resource_name"], "google.longrunning.operation_info": { responseType: "google.protobuf.Empty", metadataType: "google.ads.googleads.v11.resources.OfflineUserDataJobMetadata" } }, I: RunOfflineUserDataJobRequest, O: Operation }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
