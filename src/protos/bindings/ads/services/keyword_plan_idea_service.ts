// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/keyword_plan_idea_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from '@protobuf-ts/runtime';
import type { IBinaryWriter } from '@protobuf-ts/runtime';
import type { BinaryReadOptions } from '@protobuf-ts/runtime';
import type { IBinaryReader } from '@protobuf-ts/runtime';
import { UnknownFieldHandler } from '@protobuf-ts/runtime';
import { WireType } from '@protobuf-ts/runtime';
import type { PartialMessage } from '@protobuf-ts/runtime';
import { reflectionMergePartial } from '@protobuf-ts/runtime';
import { MESSAGE_TYPE } from '@protobuf-ts/runtime';
import { MessageType } from '@protobuf-ts/runtime';
import { ServiceType } from '@protobuf-ts/runtime-rpc';

import { KeywordAnnotations } from '../common/keyword_plan_common';
import { KeywordPlanHistoricalMetrics } from '../common/keyword_plan_common';
import { KeywordPlanAggregateMetricResults } from '../common/keyword_plan_common';
import { HistoricalMetricsOptions } from '../common/keyword_plan_common';
import { KeywordPlanAggregateMetrics } from '../common/keyword_plan_common';
import { KeywordMatchTypeEnum_KeywordMatchType } from '../enums/keyword_match_type';
import { KeywordPlanKeywordAnnotationEnum_KeywordPlanKeywordAnnotation } from '../enums/keyword_plan_keyword_annotation';
import { KeywordPlanNetworkEnum_KeywordPlanNetwork } from '../enums/keyword_plan_network';

/**
 * Request message for [KeywordPlanIdeaService.GenerateKeywordIdeas][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateKeywordIdeas].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeasRequest
 */
export interface GenerateKeywordIdeasRequest {
  /**
   * The ID of the customer with the recommendation.
   *
   * @generated from protobuf field: string customer_id = 1;
   */
  customerId: string;
  /**
   * The resource name of the language to target.
   * Each keyword belongs to some set of languages; a keyword is included if
   * language is one of its languages.
   * If not set, all keywords will be included.
   *
   * @generated from protobuf field: optional string language = 14;
   */
  language?: string;
  /**
   * The resource names of the location to target. Maximum is 10.
   * An empty list MAY be used to specify all targeting geos.
   *
   * @generated from protobuf field: repeated string geo_target_constants = 15;
   */
  geoTargetConstants: string[];
  /**
   * If true, adult keywords will be included in response.
   * The default value is false.
   *
   * @generated from protobuf field: bool include_adult_keywords = 10;
   */
  includeAdultKeywords: boolean;
  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. To request next page of results use the
   * value obtained from `next_page_token` in the previous response.
   * The request fields must match across pages.
   *
   * @generated from protobuf field: string page_token = 12;
   */
  pageToken: string;
  /**
   * Number of results to retrieve in a single page.
   * A maximum of 10,000 results may be returned, if the page_size
   * exceeds this, it is ignored.
   * If unspecified, at most 10,000 results will be returned.
   * The server may decide to further limit the number of returned resources.
   * If the response contains fewer than 10,000 results it may not be assumed
   * as last page of results.
   *
   * @generated from protobuf field: int32 page_size = 13;
   */
  pageSize: number;
  /**
   * Targeting network.
   * If not set, Google Search And Partners Network will be used.
   *
   * @generated from protobuf field: google.ads.googleads.v11.enums.KeywordPlanNetworkEnum.KeywordPlanNetwork keyword_plan_network = 9;
   */
  keywordPlanNetwork: KeywordPlanNetworkEnum_KeywordPlanNetwork;
  /**
   * The keyword annotations to include in response.
   *
   * @generated from protobuf field: repeated google.ads.googleads.v11.enums.KeywordPlanKeywordAnnotationEnum.KeywordPlanKeywordAnnotation keyword_annotation = 17;
   */
  keywordAnnotation: KeywordPlanKeywordAnnotationEnum_KeywordPlanKeywordAnnotation[];
  /**
   * The aggregate fields to include in response.
   *
   * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics = 16;
   */
  aggregateMetrics?: KeywordPlanAggregateMetrics;
  /**
   * The options for historical metrics data.
   *
   * @generated from protobuf field: google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options = 18;
   */
  historicalMetricsOptions?: HistoricalMetricsOptions;
  /**
   * @generated from protobuf oneof: seed
   */
  seed:
    | {
        oneofKind: 'keywordAndUrlSeed';
        /**
         * A Keyword and a specific Url to generate ideas from
         * for example, cars, www.example.com/cars.
         *
         * @generated from protobuf field: google.ads.googleads.v11.services.KeywordAndUrlSeed keyword_and_url_seed = 2;
         */
        keywordAndUrlSeed: KeywordAndUrlSeed;
      }
    | {
        oneofKind: 'keywordSeed';
        /**
         * A Keyword or phrase to generate ideas from, for example, cars.
         *
         * @generated from protobuf field: google.ads.googleads.v11.services.KeywordSeed keyword_seed = 3;
         */
        keywordSeed: KeywordSeed;
      }
    | {
        oneofKind: 'urlSeed';
        /**
         * A specific url to generate ideas from, for example, www.example.com/cars.
         *
         * @generated from protobuf field: google.ads.googleads.v11.services.UrlSeed url_seed = 5;
         */
        urlSeed: UrlSeed;
      }
    | {
        oneofKind: 'siteSeed';
        /**
         * The site to generate ideas from, for example, www.example.com.
         *
         * @generated from protobuf field: google.ads.googleads.v11.services.SiteSeed site_seed = 11;
         */
        siteSeed: SiteSeed;
      }
    | {
        oneofKind: undefined;
      };
}
/**
 * Keyword And Url Seed
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordAndUrlSeed
 */
export interface KeywordAndUrlSeed {
  /**
   * The URL to crawl in order to generate keyword ideas.
   *
   * @generated from protobuf field: optional string url = 3;
   */
  url?: string;
  /**
   * Requires at least one keyword.
   *
   * @generated from protobuf field: repeated string keywords = 4;
   */
  keywords: string[];
}
/**
 * Keyword Seed
 *
 * @generated from protobuf message google.ads.googleads.v11.services.KeywordSeed
 */
export interface KeywordSeed {
  /**
   * Requires at least one keyword.
   *
   * @generated from protobuf field: repeated string keywords = 2;
   */
  keywords: string[];
}
/**
 * Site Seed
 *
 * @generated from protobuf message google.ads.googleads.v11.services.SiteSeed
 */
export interface SiteSeed {
  /**
   * The domain name of the site. If the customer requesting the ideas doesn't
   * own the site provided only public information is returned.
   *
   * @generated from protobuf field: optional string site = 2;
   */
  site?: string;
}
/**
 * Url Seed
 *
 * @generated from protobuf message google.ads.googleads.v11.services.UrlSeed
 */
export interface UrlSeed {
  /**
   * The URL to crawl in order to generate keyword ideas.
   *
   * @generated from protobuf field: optional string url = 2;
   */
  url?: string;
}
/**
 * Response message for [KeywordPlanIdeaService.GenerateKeywordIdeas][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateKeywordIdeas].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeaResponse
 */
export interface GenerateKeywordIdeaResponse {
  /**
   * Results of generating keyword ideas.
   *
   * @generated from protobuf field: repeated google.ads.googleads.v11.services.GenerateKeywordIdeaResult results = 1;
   */
  results: GenerateKeywordIdeaResult[];
  /**
   * The aggregate metrics for all keyword ideas.
   *
   * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results = 4;
   */
  aggregateMetricResults?: KeywordPlanAggregateMetricResults;
  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request.
   * `next_page_token` is not returned for the last page.
   *
   * @generated from protobuf field: string next_page_token = 2;
   */
  nextPageToken: string;
  /**
   * Total number of results available.
   *
   * @generated from protobuf field: int64 total_size = 3;
   */
  totalSize: bigint;
}
/**
 * The result of generating keyword ideas.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeaResult
 */
export interface GenerateKeywordIdeaResult {
  /**
   * Text of the keyword idea.
   * As in Keyword Plan historical metrics, this text may not be an actual
   * keyword, but the canonical form of multiple keywords.
   * See KeywordPlanKeywordHistoricalMetrics message in KeywordPlanService.
   *
   * @generated from protobuf field: optional string text = 5;
   */
  text?: string;
  /**
   * The historical metrics for the keyword.
   *
   * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_idea_metrics = 3;
   */
  keywordIdeaMetrics?: KeywordPlanHistoricalMetrics;
  /**
   * The annotations for the keyword.
   * The annotation data is only provided if requested.
   *
   * @generated from protobuf field: google.ads.googleads.v11.common.KeywordAnnotations keyword_annotations = 6;
   */
  keywordAnnotations?: KeywordAnnotations;
  /**
   * The list of close variants from the requested keywords that
   * are combined into this GenerateKeywordIdeaResult. See
   * https://support.google.com/google-ads/answer/9342105 for the
   * definition of "close variants".
   *
   * @generated from protobuf field: repeated string close_variants = 7;
   */
  closeVariants: string[];
}
/**
 * Request message for
 * [KeywordPlanIdeaService.GenerateKeywordHistoricalMetrics][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateKeywordHistoricalMetrics].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsRequest
 */
export interface GenerateKeywordHistoricalMetricsRequest {
  /**
   * The ID of the customer with the recommendation.
   *
   * @generated from protobuf field: string customer_id = 1;
   */
  customerId: string;
  /**
   * A list of keywords to get historical metrics.
   * Not all inputs will be returned as a result of near-exact deduplication.
   * For example, if stats for "car" and "cars" are requested, only "car" will
   * be returned.
   * A maximum of 10,000 keywords can be used.
   *
   * @generated from protobuf field: repeated string keywords = 2;
   */
  keywords: string[];
  /**
   * The resource name of the language to target.
   * Each keyword belongs to some set of languages; a keyword is included if
   * language is one of its languages.
   * If not set, all keywords will be included.
   *
   * @generated from protobuf field: optional string language = 4;
   */
  language?: string;
  /**
   * If true, adult keywords will be included in response.
   * The default value is false.
   *
   * @generated from protobuf field: bool include_adult_keywords = 5;
   */
  includeAdultKeywords: boolean;
  /**
   * The resource names of the location to target. Maximum is 10.
   * An empty list MAY be used to specify all targeting geos.
   *
   * @generated from protobuf field: repeated string geo_target_constants = 6;
   */
  geoTargetConstants: string[];
  /**
   * Targeting network.
   * If not set, Google Search And Partners Network will be used.
   *
   * @generated from protobuf field: google.ads.googleads.v11.enums.KeywordPlanNetworkEnum.KeywordPlanNetwork keyword_plan_network = 7;
   */
  keywordPlanNetwork: KeywordPlanNetworkEnum_KeywordPlanNetwork;
  /**
   * The aggregate fields to include in response.
   *
   * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics = 8;
   */
  aggregateMetrics?: KeywordPlanAggregateMetrics;
  /**
   * The options for historical metrics data.
   *
   * @generated from protobuf field: google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options = 3;
   */
  historicalMetricsOptions?: HistoricalMetricsOptions;
}
/**
 * Response message for
 * [KeywordPlanIdeaService.GenerateKeywordHistoricalMetrics][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateKeywordHistoricalMetrics].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResponse
 */
export interface GenerateKeywordHistoricalMetricsResponse {
  /**
   * List of keywords and their historical metrics.
   *
   * @generated from protobuf field: repeated google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResult results = 1;
   */
  results: GenerateKeywordHistoricalMetricsResult[];
  /**
   * The aggregate metrics for all keywords.
   *
   * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results = 2;
   */
  aggregateMetricResults?: KeywordPlanAggregateMetricResults;
}
/**
 * The result of generating keyword historical metrics.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResult
 */
export interface GenerateKeywordHistoricalMetricsResult {
  /**
   * The text of the query associated with one or more keywords.
   * Note that we de-dupe your keywords list, eliminating close variants
   * before returning the keywords as text. For example, if your request
   * originally contained the keywords "car" and "cars", the returned search
   * query will only contain "cars". The list of de-duped queries will be
   * included in close_variants field.
   *
   * @generated from protobuf field: optional string text = 1;
   */
  text?: string;
  /**
   * The list of close variants from the requested keywords whose stats
   * are combined into this GenerateKeywordHistoricalMetricsResult.
   *
   * @generated from protobuf field: repeated string close_variants = 3;
   */
  closeVariants: string[];
  /**
   * The historical metrics for text and its close variants
   *
   * @generated from protobuf field: google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_metrics = 2;
   */
  keywordMetrics?: KeywordPlanHistoricalMetrics;
}
/**
 * Request message for
 * [KeywordPlanIdeaService.GenerateAdGroupThemes][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateAdGroupThemes].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateAdGroupThemesRequest
 */
export interface GenerateAdGroupThemesRequest {
  /**
   * Required. The ID of the customer.
   *
   * @generated from protobuf field: string customer_id = 1;
   */
  customerId: string;
  /**
   * Required. A list of keywords to group into the provided AdGroups.
   *
   * @generated from protobuf field: repeated string keywords = 2;
   */
  keywords: string[];
  /**
   * Required. A list of resource names of AdGroups to group keywords into.
   *  Resource name format: `customers/{customer_id}/adGroups/{ad_group_id}`
   *
   * @generated from protobuf field: repeated string ad_groups = 3;
   */
  adGroups: string[];
}
/**
 * Response message for
 * [KeywordPlanIdeaService.GenerateAdGroupThemes][google.ads.googleads.v11.services.KeywordPlanIdeaService.GenerateAdGroupThemes].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.GenerateAdGroupThemesResponse
 */
export interface GenerateAdGroupThemesResponse {
  /**
   * A list of suggested AdGroup/keyword pairings.
   *
   * @generated from protobuf field: repeated google.ads.googleads.v11.services.AdGroupKeywordSuggestion ad_group_keyword_suggestions = 1;
   */
  adGroupKeywordSuggestions: AdGroupKeywordSuggestion[];
  /**
   * A list of provided AdGroups that could not be used as suggestions.
   *
   * @generated from protobuf field: repeated google.ads.googleads.v11.services.UnusableAdGroup unusable_ad_groups = 2;
   */
  unusableAdGroups: UnusableAdGroup[];
}
/**
 * The suggested text and AdGroup/Campaign pairing for a given keyword.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.AdGroupKeywordSuggestion
 */
export interface AdGroupKeywordSuggestion {
  /**
   * The original keyword text.
   *
   * @generated from protobuf field: string keyword_text = 1;
   */
  keywordText: string;
  /**
   * The normalized version of keyword_text for BROAD/EXACT/PHRASE suggestions.
   *
   * @generated from protobuf field: string suggested_keyword_text = 2;
   */
  suggestedKeywordText: string;
  /**
   * The suggested keyword match type.
   *
   * @generated from protobuf field: google.ads.googleads.v11.enums.KeywordMatchTypeEnum.KeywordMatchType suggested_match_type = 3;
   */
  suggestedMatchType: KeywordMatchTypeEnum_KeywordMatchType;
  /**
   * The suggested AdGroup for the keyword.
   * Resource name format: `customers/{customer_id}/adGroups/{ad_group_id}`
   *
   * @generated from protobuf field: string suggested_ad_group = 4;
   */
  suggestedAdGroup: string;
  /**
   * The suggested Campaign for the keyword.
   * Resource name format: `customers/{customer_id}/campaigns/{campaign_id}`
   *
   * @generated from protobuf field: string suggested_campaign = 5;
   */
  suggestedCampaign: string;
}
/**
 * An AdGroup/Campaign pair that could not be used as a suggestion for keywords.
 *
 * AdGroups may not be usable if the AdGroup
 * * belongs to Campaign that is not ENABLED or PAUSED
 * * is itself not ENABLED
 *
 * @generated from protobuf message google.ads.googleads.v11.services.UnusableAdGroup
 */
export interface UnusableAdGroup {
  /**
   * The AdGroup resource name.
   * Resource name format: `customers/{customer_id}/adGroups/{ad_group_id}`
   *
   * @generated from protobuf field: string ad_group = 1;
   */
  adGroup: string;
  /**
   * The Campaign resource name.
   * Resource name format: `customers/{customer_id}/campaigns/{campaign_id}`
   *
   * @generated from protobuf field: string campaign = 2;
   */
  campaign: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class GenerateKeywordIdeasRequest$Type extends MessageType<GenerateKeywordIdeasRequest> {
  constructor() {
    super('google.ads.googleads.v11.services.GenerateKeywordIdeasRequest', [
      {
        no: 1,
        name: 'customer_id',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 14,
        name: 'language',
        kind: 'scalar',
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 15,
        name: 'geo_target_constants',
        kind: 'scalar',
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 10,
        name: 'include_adult_keywords',
        kind: 'scalar',
        T: 8 /*ScalarType.BOOL*/,
      },
      {
        no: 12,
        name: 'page_token',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      { no: 13, name: 'page_size', kind: 'scalar', T: 5 /*ScalarType.INT32*/ },
      {
        no: 9,
        name: 'keyword_plan_network',
        kind: 'enum',
        T: () => [
          'google.ads.googleads.v11.enums.KeywordPlanNetworkEnum.KeywordPlanNetwork',
          KeywordPlanNetworkEnum_KeywordPlanNetwork,
        ],
      },
      {
        no: 17,
        name: 'keyword_annotation',
        kind: 'enum',
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => [
          'google.ads.googleads.v11.enums.KeywordPlanKeywordAnnotationEnum.KeywordPlanKeywordAnnotation',
          KeywordPlanKeywordAnnotationEnum_KeywordPlanKeywordAnnotation,
        ],
      },
      {
        no: 16,
        name: 'aggregate_metrics',
        kind: 'message',
        T: () => KeywordPlanAggregateMetrics,
      },
      {
        no: 18,
        name: 'historical_metrics_options',
        kind: 'message',
        T: () => HistoricalMetricsOptions,
      },
      {
        no: 2,
        name: 'keyword_and_url_seed',
        kind: 'message',
        oneof: 'seed',
        T: () => KeywordAndUrlSeed,
      },
      {
        no: 3,
        name: 'keyword_seed',
        kind: 'message',
        oneof: 'seed',
        T: () => KeywordSeed,
      },
      {
        no: 5,
        name: 'url_seed',
        kind: 'message',
        oneof: 'seed',
        T: () => UrlSeed,
      },
      {
        no: 11,
        name: 'site_seed',
        kind: 'message',
        oneof: 'seed',
        T: () => SiteSeed,
      },
    ]);
  }
  create(
    value?: PartialMessage<GenerateKeywordIdeasRequest>,
  ): GenerateKeywordIdeasRequest {
    const message = {
      customerId: '',
      geoTargetConstants: [],
      includeAdultKeywords: false,
      pageToken: '',
      pageSize: 0,
      keywordPlanNetwork: 0,
      keywordAnnotation: [],
      seed: { oneofKind: undefined },
    };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GenerateKeywordIdeasRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GenerateKeywordIdeasRequest,
  ): GenerateKeywordIdeasRequest {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string customer_id */ 1:
          message.customerId = reader.string();
          break;
        case /* optional string language */ 14:
          message.language = reader.string();
          break;
        case /* repeated string geo_target_constants */ 15:
          message.geoTargetConstants.push(reader.string());
          break;
        case /* bool include_adult_keywords */ 10:
          message.includeAdultKeywords = reader.bool();
          break;
        case /* string page_token */ 12:
          message.pageToken = reader.string();
          break;
        case /* int32 page_size */ 13:
          message.pageSize = reader.int32();
          break;
        case /* google.ads.googleads.v11.enums.KeywordPlanNetworkEnum.KeywordPlanNetwork keyword_plan_network */ 9:
          message.keywordPlanNetwork = reader.int32();
          break;
        case /* repeated google.ads.googleads.v11.enums.KeywordPlanKeywordAnnotationEnum.KeywordPlanKeywordAnnotation keyword_annotation */ 17:
          if (wireType === WireType.LengthDelimited)
            for (let e = reader.int32() + reader.pos; reader.pos < e; )
              message.keywordAnnotation.push(reader.int32());
          else message.keywordAnnotation.push(reader.int32());
          break;
        case /* google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics */ 16:
          message.aggregateMetrics =
            KeywordPlanAggregateMetrics.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              message.aggregateMetrics,
            );
          break;
        case /* google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options */ 18:
          message.historicalMetricsOptions =
            HistoricalMetricsOptions.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              message.historicalMetricsOptions,
            );
          break;
        case /* google.ads.googleads.v11.services.KeywordAndUrlSeed keyword_and_url_seed */ 2:
          message.seed = {
            oneofKind: 'keywordAndUrlSeed',
            keywordAndUrlSeed: KeywordAndUrlSeed.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.seed as any).keywordAndUrlSeed,
            ),
          };
          break;
        case /* google.ads.googleads.v11.services.KeywordSeed keyword_seed */ 3:
          message.seed = {
            oneofKind: 'keywordSeed',
            keywordSeed: KeywordSeed.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.seed as any).keywordSeed,
            ),
          };
          break;
        case /* google.ads.googleads.v11.services.UrlSeed url_seed */ 5:
          message.seed = {
            oneofKind: 'urlSeed',
            urlSeed: UrlSeed.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.seed as any).urlSeed,
            ),
          };
          break;
        case /* google.ads.googleads.v11.services.SiteSeed site_seed */ 11:
          message.seed = {
            oneofKind: 'siteSeed',
            siteSeed: SiteSeed.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.seed as any).siteSeed,
            ),
          };
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GenerateKeywordIdeasRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string customer_id = 1; */
    if (message.customerId !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.customerId);
    /* optional string language = 14; */
    if (message.language !== undefined)
      writer.tag(14, WireType.LengthDelimited).string(message.language);
    /* repeated string geo_target_constants = 15; */
    for (let i = 0; i < message.geoTargetConstants.length; i++)
      writer
        .tag(15, WireType.LengthDelimited)
        .string(message.geoTargetConstants[i]);
    /* bool include_adult_keywords = 10; */
    if (message.includeAdultKeywords !== false)
      writer.tag(10, WireType.Varint).bool(message.includeAdultKeywords);
    /* string page_token = 12; */
    if (message.pageToken !== '')
      writer.tag(12, WireType.LengthDelimited).string(message.pageToken);
    /* int32 page_size = 13; */
    if (message.pageSize !== 0)
      writer.tag(13, WireType.Varint).int32(message.pageSize);
    /* google.ads.googleads.v11.enums.KeywordPlanNetworkEnum.KeywordPlanNetwork keyword_plan_network = 9; */
    if (message.keywordPlanNetwork !== 0)
      writer.tag(9, WireType.Varint).int32(message.keywordPlanNetwork);
    /* repeated google.ads.googleads.v11.enums.KeywordPlanKeywordAnnotationEnum.KeywordPlanKeywordAnnotation keyword_annotation = 17; */
    if (message.keywordAnnotation.length) {
      writer.tag(17, WireType.LengthDelimited).fork();
      for (let i = 0; i < message.keywordAnnotation.length; i++)
        writer.int32(message.keywordAnnotation[i]);
      writer.join();
    }
    /* google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics = 16; */
    if (message.aggregateMetrics)
      KeywordPlanAggregateMetrics.internalBinaryWrite(
        message.aggregateMetrics,
        writer.tag(16, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options = 18; */
    if (message.historicalMetricsOptions)
      HistoricalMetricsOptions.internalBinaryWrite(
        message.historicalMetricsOptions,
        writer.tag(18, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* google.ads.googleads.v11.services.KeywordAndUrlSeed keyword_and_url_seed = 2; */
    if (message.seed.oneofKind === 'keywordAndUrlSeed')
      KeywordAndUrlSeed.internalBinaryWrite(
        message.seed.keywordAndUrlSeed,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* google.ads.googleads.v11.services.KeywordSeed keyword_seed = 3; */
    if (message.seed.oneofKind === 'keywordSeed')
      KeywordSeed.internalBinaryWrite(
        message.seed.keywordSeed,
        writer.tag(3, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* google.ads.googleads.v11.services.UrlSeed url_seed = 5; */
    if (message.seed.oneofKind === 'urlSeed')
      UrlSeed.internalBinaryWrite(
        message.seed.urlSeed,
        writer.tag(5, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* google.ads.googleads.v11.services.SiteSeed site_seed = 11; */
    if (message.seed.oneofKind === 'siteSeed')
      SiteSeed.internalBinaryWrite(
        message.seed.siteSeed,
        writer.tag(11, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeasRequest
 */
export const GenerateKeywordIdeasRequest =
  new GenerateKeywordIdeasRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordAndUrlSeed$Type extends MessageType<KeywordAndUrlSeed> {
  constructor() {
    super('google.ads.googleads.v11.services.KeywordAndUrlSeed', [
      {
        no: 3,
        name: 'url',
        kind: 'scalar',
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 4,
        name: 'keywords',
        kind: 'scalar',
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
  create(value?: PartialMessage<KeywordAndUrlSeed>): KeywordAndUrlSeed {
    const message = { keywords: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<KeywordAndUrlSeed>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: KeywordAndUrlSeed,
  ): KeywordAndUrlSeed {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* optional string url */ 3:
          message.url = reader.string();
          break;
        case /* repeated string keywords */ 4:
          message.keywords.push(reader.string());
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: KeywordAndUrlSeed,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* optional string url = 3; */
    if (message.url !== undefined)
      writer.tag(3, WireType.LengthDelimited).string(message.url);
    /* repeated string keywords = 4; */
    for (let i = 0; i < message.keywords.length; i++)
      writer.tag(4, WireType.LengthDelimited).string(message.keywords[i]);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordAndUrlSeed
 */
export const KeywordAndUrlSeed = new KeywordAndUrlSeed$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeywordSeed$Type extends MessageType<KeywordSeed> {
  constructor() {
    super('google.ads.googleads.v11.services.KeywordSeed', [
      {
        no: 2,
        name: 'keywords',
        kind: 'scalar',
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
  create(value?: PartialMessage<KeywordSeed>): KeywordSeed {
    const message = { keywords: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<KeywordSeed>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: KeywordSeed,
  ): KeywordSeed {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* repeated string keywords */ 2:
          message.keywords.push(reader.string());
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: KeywordSeed,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* repeated string keywords = 2; */
    for (let i = 0; i < message.keywords.length; i++)
      writer.tag(2, WireType.LengthDelimited).string(message.keywords[i]);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.KeywordSeed
 */
export const KeywordSeed = new KeywordSeed$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SiteSeed$Type extends MessageType<SiteSeed> {
  constructor() {
    super('google.ads.googleads.v11.services.SiteSeed', [
      {
        no: 2,
        name: 'site',
        kind: 'scalar',
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
  create(value?: PartialMessage<SiteSeed>): SiteSeed {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<SiteSeed>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: SiteSeed,
  ): SiteSeed {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* optional string site */ 2:
          message.site = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: SiteSeed,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* optional string site = 2; */
    if (message.site !== undefined)
      writer.tag(2, WireType.LengthDelimited).string(message.site);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.SiteSeed
 */
export const SiteSeed = new SiteSeed$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UrlSeed$Type extends MessageType<UrlSeed> {
  constructor() {
    super('google.ads.googleads.v11.services.UrlSeed', [
      {
        no: 2,
        name: 'url',
        kind: 'scalar',
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
  create(value?: PartialMessage<UrlSeed>): UrlSeed {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<UrlSeed>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: UrlSeed,
  ): UrlSeed {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* optional string url */ 2:
          message.url = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: UrlSeed,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* optional string url = 2; */
    if (message.url !== undefined)
      writer.tag(2, WireType.LengthDelimited).string(message.url);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UrlSeed
 */
export const UrlSeed = new UrlSeed$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateKeywordIdeaResponse$Type extends MessageType<GenerateKeywordIdeaResponse> {
  constructor() {
    super('google.ads.googleads.v11.services.GenerateKeywordIdeaResponse', [
      {
        no: 1,
        name: 'results',
        kind: 'message',
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => GenerateKeywordIdeaResult,
      },
      {
        no: 4,
        name: 'aggregate_metric_results',
        kind: 'message',
        T: () => KeywordPlanAggregateMetricResults,
      },
      {
        no: 2,
        name: 'next_page_token',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 3,
        name: 'total_size',
        kind: 'scalar',
        T: 3 /*ScalarType.INT64*/,
        L: 0 /*LongType.BIGINT*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<GenerateKeywordIdeaResponse>,
  ): GenerateKeywordIdeaResponse {
    const message = { results: [], nextPageToken: '', totalSize: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GenerateKeywordIdeaResponse>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GenerateKeywordIdeaResponse,
  ): GenerateKeywordIdeaResponse {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* repeated google.ads.googleads.v11.services.GenerateKeywordIdeaResult results */ 1:
          message.results.push(
            GenerateKeywordIdeaResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
            ),
          );
          break;
        case /* google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results */ 4:
          message.aggregateMetricResults =
            KeywordPlanAggregateMetricResults.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              message.aggregateMetricResults,
            );
          break;
        case /* string next_page_token */ 2:
          message.nextPageToken = reader.string();
          break;
        case /* int64 total_size */ 3:
          message.totalSize = reader.int64().toBigInt();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GenerateKeywordIdeaResponse,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* repeated google.ads.googleads.v11.services.GenerateKeywordIdeaResult results = 1; */
    for (let i = 0; i < message.results.length; i++)
      GenerateKeywordIdeaResult.internalBinaryWrite(
        message.results[i],
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results = 4; */
    if (message.aggregateMetricResults)
      KeywordPlanAggregateMetricResults.internalBinaryWrite(
        message.aggregateMetricResults,
        writer.tag(4, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* string next_page_token = 2; */
    if (message.nextPageToken !== '')
      writer.tag(2, WireType.LengthDelimited).string(message.nextPageToken);
    /* int64 total_size = 3; */
    if (message.totalSize !== 0n)
      writer.tag(3, WireType.Varint).int64(message.totalSize);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeaResponse
 */
export const GenerateKeywordIdeaResponse =
  new GenerateKeywordIdeaResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateKeywordIdeaResult$Type extends MessageType<GenerateKeywordIdeaResult> {
  constructor() {
    super('google.ads.googleads.v11.services.GenerateKeywordIdeaResult', [
      {
        no: 5,
        name: 'text',
        kind: 'scalar',
        opt: true,
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 3,
        name: 'keyword_idea_metrics',
        kind: 'message',
        T: () => KeywordPlanHistoricalMetrics,
      },
      {
        no: 6,
        name: 'keyword_annotations',
        kind: 'message',
        T: () => KeywordAnnotations,
      },
      {
        no: 7,
        name: 'close_variants',
        kind: 'scalar',
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<GenerateKeywordIdeaResult>,
  ): GenerateKeywordIdeaResult {
    const message = { closeVariants: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GenerateKeywordIdeaResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GenerateKeywordIdeaResult,
  ): GenerateKeywordIdeaResult {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* optional string text */ 5:
          message.text = reader.string();
          break;
        case /* google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_idea_metrics */ 3:
          message.keywordIdeaMetrics =
            KeywordPlanHistoricalMetrics.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              message.keywordIdeaMetrics,
            );
          break;
        case /* google.ads.googleads.v11.common.KeywordAnnotations keyword_annotations */ 6:
          message.keywordAnnotations = KeywordAnnotations.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.keywordAnnotations,
          );
          break;
        case /* repeated string close_variants */ 7:
          message.closeVariants.push(reader.string());
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GenerateKeywordIdeaResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* optional string text = 5; */
    if (message.text !== undefined)
      writer.tag(5, WireType.LengthDelimited).string(message.text);
    /* google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_idea_metrics = 3; */
    if (message.keywordIdeaMetrics)
      KeywordPlanHistoricalMetrics.internalBinaryWrite(
        message.keywordIdeaMetrics,
        writer.tag(3, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* google.ads.googleads.v11.common.KeywordAnnotations keyword_annotations = 6; */
    if (message.keywordAnnotations)
      KeywordAnnotations.internalBinaryWrite(
        message.keywordAnnotations,
        writer.tag(6, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* repeated string close_variants = 7; */
    for (let i = 0; i < message.closeVariants.length; i++)
      writer.tag(7, WireType.LengthDelimited).string(message.closeVariants[i]);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordIdeaResult
 */
export const GenerateKeywordIdeaResult = new GenerateKeywordIdeaResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateKeywordHistoricalMetricsRequest$Type extends MessageType<GenerateKeywordHistoricalMetricsRequest> {
  constructor() {
    super(
      'google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsRequest',
      [
        {
          no: 1,
          name: 'customer_id',
          kind: 'scalar',
          T: 9 /*ScalarType.STRING*/,
        },
        {
          no: 2,
          name: 'keywords',
          kind: 'scalar',
          repeat: 2 /*RepeatType.UNPACKED*/,
          T: 9 /*ScalarType.STRING*/,
        },
        {
          no: 4,
          name: 'language',
          kind: 'scalar',
          opt: true,
          T: 9 /*ScalarType.STRING*/,
        },
        {
          no: 5,
          name: 'include_adult_keywords',
          kind: 'scalar',
          T: 8 /*ScalarType.BOOL*/,
        },
        {
          no: 6,
          name: 'geo_target_constants',
          kind: 'scalar',
          repeat: 2 /*RepeatType.UNPACKED*/,
          T: 9 /*ScalarType.STRING*/,
        },
        {
          no: 7,
          name: 'keyword_plan_network',
          kind: 'enum',
          T: () => [
            'google.ads.googleads.v11.enums.KeywordPlanNetworkEnum.KeywordPlanNetwork',
            KeywordPlanNetworkEnum_KeywordPlanNetwork,
          ],
        },
        {
          no: 8,
          name: 'aggregate_metrics',
          kind: 'message',
          T: () => KeywordPlanAggregateMetrics,
        },
        {
          no: 3,
          name: 'historical_metrics_options',
          kind: 'message',
          T: () => HistoricalMetricsOptions,
        },
      ],
    );
  }
  create(
    value?: PartialMessage<GenerateKeywordHistoricalMetricsRequest>,
  ): GenerateKeywordHistoricalMetricsRequest {
    const message = {
      customerId: '',
      keywords: [],
      includeAdultKeywords: false,
      geoTargetConstants: [],
      keywordPlanNetwork: 0,
    };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GenerateKeywordHistoricalMetricsRequest>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GenerateKeywordHistoricalMetricsRequest,
  ): GenerateKeywordHistoricalMetricsRequest {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string customer_id */ 1:
          message.customerId = reader.string();
          break;
        case /* repeated string keywords */ 2:
          message.keywords.push(reader.string());
          break;
        case /* optional string language */ 4:
          message.language = reader.string();
          break;
        case /* bool include_adult_keywords */ 5:
          message.includeAdultKeywords = reader.bool();
          break;
        case /* repeated string geo_target_constants */ 6:
          message.geoTargetConstants.push(reader.string());
          break;
        case /* google.ads.googleads.v11.enums.KeywordPlanNetworkEnum.KeywordPlanNetwork keyword_plan_network */ 7:
          message.keywordPlanNetwork = reader.int32();
          break;
        case /* google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics */ 8:
          message.aggregateMetrics =
            KeywordPlanAggregateMetrics.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              message.aggregateMetrics,
            );
          break;
        case /* google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options */ 3:
          message.historicalMetricsOptions =
            HistoricalMetricsOptions.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              message.historicalMetricsOptions,
            );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GenerateKeywordHistoricalMetricsRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string customer_id = 1; */
    if (message.customerId !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.customerId);
    /* repeated string keywords = 2; */
    for (let i = 0; i < message.keywords.length; i++)
      writer.tag(2, WireType.LengthDelimited).string(message.keywords[i]);
    /* optional string language = 4; */
    if (message.language !== undefined)
      writer.tag(4, WireType.LengthDelimited).string(message.language);
    /* bool include_adult_keywords = 5; */
    if (message.includeAdultKeywords !== false)
      writer.tag(5, WireType.Varint).bool(message.includeAdultKeywords);
    /* repeated string geo_target_constants = 6; */
    for (let i = 0; i < message.geoTargetConstants.length; i++)
      writer
        .tag(6, WireType.LengthDelimited)
        .string(message.geoTargetConstants[i]);
    /* google.ads.googleads.v11.enums.KeywordPlanNetworkEnum.KeywordPlanNetwork keyword_plan_network = 7; */
    if (message.keywordPlanNetwork !== 0)
      writer.tag(7, WireType.Varint).int32(message.keywordPlanNetwork);
    /* google.ads.googleads.v11.common.KeywordPlanAggregateMetrics aggregate_metrics = 8; */
    if (message.aggregateMetrics)
      KeywordPlanAggregateMetrics.internalBinaryWrite(
        message.aggregateMetrics,
        writer.tag(8, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* google.ads.googleads.v11.common.HistoricalMetricsOptions historical_metrics_options = 3; */
    if (message.historicalMetricsOptions)
      HistoricalMetricsOptions.internalBinaryWrite(
        message.historicalMetricsOptions,
        writer.tag(3, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsRequest
 */
export const GenerateKeywordHistoricalMetricsRequest =
  new GenerateKeywordHistoricalMetricsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateKeywordHistoricalMetricsResponse$Type extends MessageType<GenerateKeywordHistoricalMetricsResponse> {
  constructor() {
    super(
      'google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResponse',
      [
        {
          no: 1,
          name: 'results',
          kind: 'message',
          repeat: 1 /*RepeatType.PACKED*/,
          T: () => GenerateKeywordHistoricalMetricsResult,
        },
        {
          no: 2,
          name: 'aggregate_metric_results',
          kind: 'message',
          T: () => KeywordPlanAggregateMetricResults,
        },
      ],
    );
  }
  create(
    value?: PartialMessage<GenerateKeywordHistoricalMetricsResponse>,
  ): GenerateKeywordHistoricalMetricsResponse {
    const message = { results: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GenerateKeywordHistoricalMetricsResponse>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GenerateKeywordHistoricalMetricsResponse,
  ): GenerateKeywordHistoricalMetricsResponse {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* repeated google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResult results */ 1:
          message.results.push(
            GenerateKeywordHistoricalMetricsResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
            ),
          );
          break;
        case /* google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results */ 2:
          message.aggregateMetricResults =
            KeywordPlanAggregateMetricResults.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              message.aggregateMetricResults,
            );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GenerateKeywordHistoricalMetricsResponse,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* repeated google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResult results = 1; */
    for (let i = 0; i < message.results.length; i++)
      GenerateKeywordHistoricalMetricsResult.internalBinaryWrite(
        message.results[i],
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* google.ads.googleads.v11.common.KeywordPlanAggregateMetricResults aggregate_metric_results = 2; */
    if (message.aggregateMetricResults)
      KeywordPlanAggregateMetricResults.internalBinaryWrite(
        message.aggregateMetricResults,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResponse
 */
export const GenerateKeywordHistoricalMetricsResponse =
  new GenerateKeywordHistoricalMetricsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateKeywordHistoricalMetricsResult$Type extends MessageType<GenerateKeywordHistoricalMetricsResult> {
  constructor() {
    super(
      'google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResult',
      [
        {
          no: 1,
          name: 'text',
          kind: 'scalar',
          opt: true,
          T: 9 /*ScalarType.STRING*/,
        },
        {
          no: 3,
          name: 'close_variants',
          kind: 'scalar',
          repeat: 2 /*RepeatType.UNPACKED*/,
          T: 9 /*ScalarType.STRING*/,
        },
        {
          no: 2,
          name: 'keyword_metrics',
          kind: 'message',
          T: () => KeywordPlanHistoricalMetrics,
        },
      ],
    );
  }
  create(
    value?: PartialMessage<GenerateKeywordHistoricalMetricsResult>,
  ): GenerateKeywordHistoricalMetricsResult {
    const message = { closeVariants: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GenerateKeywordHistoricalMetricsResult>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GenerateKeywordHistoricalMetricsResult,
  ): GenerateKeywordHistoricalMetricsResult {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* optional string text */ 1:
          message.text = reader.string();
          break;
        case /* repeated string close_variants */ 3:
          message.closeVariants.push(reader.string());
          break;
        case /* google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_metrics */ 2:
          message.keywordMetrics =
            KeywordPlanHistoricalMetrics.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              message.keywordMetrics,
            );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GenerateKeywordHistoricalMetricsResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* optional string text = 1; */
    if (message.text !== undefined)
      writer.tag(1, WireType.LengthDelimited).string(message.text);
    /* repeated string close_variants = 3; */
    for (let i = 0; i < message.closeVariants.length; i++)
      writer.tag(3, WireType.LengthDelimited).string(message.closeVariants[i]);
    /* google.ads.googleads.v11.common.KeywordPlanHistoricalMetrics keyword_metrics = 2; */
    if (message.keywordMetrics)
      KeywordPlanHistoricalMetrics.internalBinaryWrite(
        message.keywordMetrics,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateKeywordHistoricalMetricsResult
 */
export const GenerateKeywordHistoricalMetricsResult =
  new GenerateKeywordHistoricalMetricsResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateAdGroupThemesRequest$Type extends MessageType<GenerateAdGroupThemesRequest> {
  constructor() {
    super('google.ads.googleads.v11.services.GenerateAdGroupThemesRequest', [
      {
        no: 1,
        name: 'customer_id',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
        options: { 'google.api.field_behavior': ['REQUIRED'] },
      },
      {
        no: 2,
        name: 'keywords',
        kind: 'scalar',
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: 9 /*ScalarType.STRING*/,
        options: { 'google.api.field_behavior': ['REQUIRED'] },
      },
      {
        no: 3,
        name: 'ad_groups',
        kind: 'scalar',
        repeat: 2 /*RepeatType.UNPACKED*/,
        T: 9 /*ScalarType.STRING*/,
        options: { 'google.api.field_behavior': ['REQUIRED'] },
      },
    ]);
  }
  create(
    value?: PartialMessage<GenerateAdGroupThemesRequest>,
  ): GenerateAdGroupThemesRequest {
    const message = { customerId: '', keywords: [], adGroups: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GenerateAdGroupThemesRequest>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GenerateAdGroupThemesRequest,
  ): GenerateAdGroupThemesRequest {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string customer_id */ 1:
          message.customerId = reader.string();
          break;
        case /* repeated string keywords */ 2:
          message.keywords.push(reader.string());
          break;
        case /* repeated string ad_groups */ 3:
          message.adGroups.push(reader.string());
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GenerateAdGroupThemesRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string customer_id = 1; */
    if (message.customerId !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.customerId);
    /* repeated string keywords = 2; */
    for (let i = 0; i < message.keywords.length; i++)
      writer.tag(2, WireType.LengthDelimited).string(message.keywords[i]);
    /* repeated string ad_groups = 3; */
    for (let i = 0; i < message.adGroups.length; i++)
      writer.tag(3, WireType.LengthDelimited).string(message.adGroups[i]);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateAdGroupThemesRequest
 */
export const GenerateAdGroupThemesRequest =
  new GenerateAdGroupThemesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateAdGroupThemesResponse$Type extends MessageType<GenerateAdGroupThemesResponse> {
  constructor() {
    super('google.ads.googleads.v11.services.GenerateAdGroupThemesResponse', [
      {
        no: 1,
        name: 'ad_group_keyword_suggestions',
        kind: 'message',
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => AdGroupKeywordSuggestion,
      },
      {
        no: 2,
        name: 'unusable_ad_groups',
        kind: 'message',
        repeat: 1 /*RepeatType.PACKED*/,
        T: () => UnusableAdGroup,
      },
    ]);
  }
  create(
    value?: PartialMessage<GenerateAdGroupThemesResponse>,
  ): GenerateAdGroupThemesResponse {
    const message = { adGroupKeywordSuggestions: [], unusableAdGroups: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GenerateAdGroupThemesResponse>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GenerateAdGroupThemesResponse,
  ): GenerateAdGroupThemesResponse {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* repeated google.ads.googleads.v11.services.AdGroupKeywordSuggestion ad_group_keyword_suggestions */ 1:
          message.adGroupKeywordSuggestions.push(
            AdGroupKeywordSuggestion.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
            ),
          );
          break;
        case /* repeated google.ads.googleads.v11.services.UnusableAdGroup unusable_ad_groups */ 2:
          message.unusableAdGroups.push(
            UnusableAdGroup.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
            ),
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GenerateAdGroupThemesResponse,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* repeated google.ads.googleads.v11.services.AdGroupKeywordSuggestion ad_group_keyword_suggestions = 1; */
    for (let i = 0; i < message.adGroupKeywordSuggestions.length; i++)
      AdGroupKeywordSuggestion.internalBinaryWrite(
        message.adGroupKeywordSuggestions[i],
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* repeated google.ads.googleads.v11.services.UnusableAdGroup unusable_ad_groups = 2; */
    for (let i = 0; i < message.unusableAdGroups.length; i++)
      UnusableAdGroup.internalBinaryWrite(
        message.unusableAdGroups[i],
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.GenerateAdGroupThemesResponse
 */
export const GenerateAdGroupThemesResponse =
  new GenerateAdGroupThemesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdGroupKeywordSuggestion$Type extends MessageType<AdGroupKeywordSuggestion> {
  constructor() {
    super('google.ads.googleads.v11.services.AdGroupKeywordSuggestion', [
      {
        no: 1,
        name: 'keyword_text',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 2,
        name: 'suggested_keyword_text',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 3,
        name: 'suggested_match_type',
        kind: 'enum',
        T: () => [
          'google.ads.googleads.v11.enums.KeywordMatchTypeEnum.KeywordMatchType',
          KeywordMatchTypeEnum_KeywordMatchType,
        ],
      },
      {
        no: 4,
        name: 'suggested_ad_group',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
      {
        no: 5,
        name: 'suggested_campaign',
        kind: 'scalar',
        T: 9 /*ScalarType.STRING*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<AdGroupKeywordSuggestion>,
  ): AdGroupKeywordSuggestion {
    const message = {
      keywordText: '',
      suggestedKeywordText: '',
      suggestedMatchType: 0,
      suggestedAdGroup: '',
      suggestedCampaign: '',
    };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<AdGroupKeywordSuggestion>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: AdGroupKeywordSuggestion,
  ): AdGroupKeywordSuggestion {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string keyword_text */ 1:
          message.keywordText = reader.string();
          break;
        case /* string suggested_keyword_text */ 2:
          message.suggestedKeywordText = reader.string();
          break;
        case /* google.ads.googleads.v11.enums.KeywordMatchTypeEnum.KeywordMatchType suggested_match_type */ 3:
          message.suggestedMatchType = reader.int32();
          break;
        case /* string suggested_ad_group */ 4:
          message.suggestedAdGroup = reader.string();
          break;
        case /* string suggested_campaign */ 5:
          message.suggestedCampaign = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: AdGroupKeywordSuggestion,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string keyword_text = 1; */
    if (message.keywordText !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.keywordText);
    /* string suggested_keyword_text = 2; */
    if (message.suggestedKeywordText !== '')
      writer
        .tag(2, WireType.LengthDelimited)
        .string(message.suggestedKeywordText);
    /* google.ads.googleads.v11.enums.KeywordMatchTypeEnum.KeywordMatchType suggested_match_type = 3; */
    if (message.suggestedMatchType !== 0)
      writer.tag(3, WireType.Varint).int32(message.suggestedMatchType);
    /* string suggested_ad_group = 4; */
    if (message.suggestedAdGroup !== '')
      writer.tag(4, WireType.LengthDelimited).string(message.suggestedAdGroup);
    /* string suggested_campaign = 5; */
    if (message.suggestedCampaign !== '')
      writer.tag(5, WireType.LengthDelimited).string(message.suggestedCampaign);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AdGroupKeywordSuggestion
 */
export const AdGroupKeywordSuggestion = new AdGroupKeywordSuggestion$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnusableAdGroup$Type extends MessageType<UnusableAdGroup> {
  constructor() {
    super('google.ads.googleads.v11.services.UnusableAdGroup', [
      { no: 1, name: 'ad_group', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
      { no: 2, name: 'campaign', kind: 'scalar', T: 9 /*ScalarType.STRING*/ },
    ]);
  }
  create(value?: PartialMessage<UnusableAdGroup>): UnusableAdGroup {
    const message = { adGroup: '', campaign: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<UnusableAdGroup>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: UnusableAdGroup,
  ): UnusableAdGroup {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string ad_group */ 1:
          message.adGroup = reader.string();
          break;
        case /* string campaign */ 2:
          message.campaign = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: UnusableAdGroup,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string ad_group = 1; */
    if (message.adGroup !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.adGroup);
    /* string campaign = 2; */
    if (message.campaign !== '')
      writer.tag(2, WireType.LengthDelimited).string(message.campaign);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.UnusableAdGroup
 */
export const UnusableAdGroup = new UnusableAdGroup$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.KeywordPlanIdeaService
 */
export const KeywordPlanIdeaService = new ServiceType(
  'google.ads.googleads.v11.services.KeywordPlanIdeaService',
  [
    {
      name: 'GenerateKeywordIdeas',
      options: {
        'google.api.http': {
          post: '/v11/customers/{customer_id=*}:generateKeywordIdeas',
          body: '*',
        },
      },
      I: GenerateKeywordIdeasRequest,
      O: GenerateKeywordIdeaResponse,
    },
    {
      name: 'GenerateKeywordHistoricalMetrics',
      options: {
        'google.api.http': {
          post: '/v11/customers/{customer_id=*}:generateKeywordHistoricalMetrics',
          body: '*',
        },
      },
      I: GenerateKeywordHistoricalMetricsRequest,
      O: GenerateKeywordHistoricalMetricsResponse,
    },
    {
      name: 'GenerateAdGroupThemes',
      options: {
        'google.api.http': {
          post: '/v11/customers/{customer_id=*}:generateAdGroupThemes',
          body: '*',
        },
      },
      I: GenerateAdGroupThemesRequest,
      O: GenerateAdGroupThemesResponse,
    },
  ],
  {
    'google.api.default_host': 'googleads.googleapis.com',
    'google.api.oauth_scopes': 'https://www.googleapis.com/auth/adwords',
  },
);
