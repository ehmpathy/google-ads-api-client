// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/keyword_plan_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { KeywordPlanService } from "./keyword_plan_service";
import type { GenerateHistoricalMetricsResponse } from "./keyword_plan_service";
import type { GenerateHistoricalMetricsRequest } from "./keyword_plan_service";
import type { GenerateForecastMetricsResponse } from "./keyword_plan_service";
import type { GenerateForecastMetricsRequest } from "./keyword_plan_service";
import type { GenerateForecastTimeSeriesResponse } from "./keyword_plan_service";
import type { GenerateForecastTimeSeriesRequest } from "./keyword_plan_service";
import type { GenerateForecastCurveResponse } from "./keyword_plan_service";
import type { GenerateForecastCurveRequest } from "./keyword_plan_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { MutateKeywordPlansResponse } from "./keyword_plan_service";
import type { MutateKeywordPlansRequest } from "./keyword_plan_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
// Proto file describing the keyword plan service.

/**
 * Service to manage keyword plans.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.KeywordPlanService
 */
export interface IKeywordPlanServiceClient {
    /**
     * Creates, updates, or removes keyword plans. Operation statuses are
     * returned.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [KeywordPlanError]()
     *   [MutateError]()
     *   [NewResourceCreationError]()
     *   [QuotaError]()
     *   [RequestError]()
     *   [ResourceCountLimitExceededError]()
     *   [StringLengthError]()
     *
     * @generated from protobuf rpc: MutateKeywordPlans(google.ads.googleads.v11.services.MutateKeywordPlansRequest) returns (google.ads.googleads.v11.services.MutateKeywordPlansResponse);
     */
    mutateKeywordPlans(input: MutateKeywordPlansRequest, options?: RpcOptions): UnaryCall<MutateKeywordPlansRequest, MutateKeywordPlansResponse>;
    /**
     * Returns the requested Keyword Plan forecast curve.
     * Only the bidding strategy is considered for generating forecast curve.
     * The bidding strategy value specified in the plan is ignored.
     *
     * To generate a forecast at a value specified in the plan, use
     * KeywordPlanService.GenerateForecastMetrics.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [KeywordPlanError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: GenerateForecastCurve(google.ads.googleads.v11.services.GenerateForecastCurveRequest) returns (google.ads.googleads.v11.services.GenerateForecastCurveResponse);
     */
    generateForecastCurve(input: GenerateForecastCurveRequest, options?: RpcOptions): UnaryCall<GenerateForecastCurveRequest, GenerateForecastCurveResponse>;
    /**
     * Returns a forecast in the form of a time series for the Keyword Plan over
     * the next 52 weeks.
     * (1) Forecasts closer to the current date are generally more accurate than
     * further out.
     *
     * (2) The forecast reflects seasonal trends using current and
     * prior traffic patterns. The forecast period of the plan is ignored.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [KeywordPlanError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: GenerateForecastTimeSeries(google.ads.googleads.v11.services.GenerateForecastTimeSeriesRequest) returns (google.ads.googleads.v11.services.GenerateForecastTimeSeriesResponse);
     */
    generateForecastTimeSeries(input: GenerateForecastTimeSeriesRequest, options?: RpcOptions): UnaryCall<GenerateForecastTimeSeriesRequest, GenerateForecastTimeSeriesResponse>;
    /**
     * Returns the requested Keyword Plan forecasts.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [KeywordPlanError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: GenerateForecastMetrics(google.ads.googleads.v11.services.GenerateForecastMetricsRequest) returns (google.ads.googleads.v11.services.GenerateForecastMetricsResponse);
     */
    generateForecastMetrics(input: GenerateForecastMetricsRequest, options?: RpcOptions): UnaryCall<GenerateForecastMetricsRequest, GenerateForecastMetricsResponse>;
    /**
     * Returns the requested Keyword Plan historical metrics.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [KeywordPlanError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: GenerateHistoricalMetrics(google.ads.googleads.v11.services.GenerateHistoricalMetricsRequest) returns (google.ads.googleads.v11.services.GenerateHistoricalMetricsResponse);
     */
    generateHistoricalMetrics(input: GenerateHistoricalMetricsRequest, options?: RpcOptions): UnaryCall<GenerateHistoricalMetricsRequest, GenerateHistoricalMetricsResponse>;
}
// Proto file describing the keyword plan service.

/**
 * Service to manage keyword plans.
 *
 * @generated from protobuf service google.ads.googleads.v11.services.KeywordPlanService
 */
export class KeywordPlanServiceClient implements IKeywordPlanServiceClient, ServiceInfo {
    typeName = KeywordPlanService.typeName;
    methods = KeywordPlanService.methods;
    options = KeywordPlanService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Creates, updates, or removes keyword plans. Operation statuses are
     * returned.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [DatabaseError]()
     *   [FieldError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [KeywordPlanError]()
     *   [MutateError]()
     *   [NewResourceCreationError]()
     *   [QuotaError]()
     *   [RequestError]()
     *   [ResourceCountLimitExceededError]()
     *   [StringLengthError]()
     *
     * @generated from protobuf rpc: MutateKeywordPlans(google.ads.googleads.v11.services.MutateKeywordPlansRequest) returns (google.ads.googleads.v11.services.MutateKeywordPlansResponse);
     */
    mutateKeywordPlans(input: MutateKeywordPlansRequest, options?: RpcOptions): UnaryCall<MutateKeywordPlansRequest, MutateKeywordPlansResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<MutateKeywordPlansRequest, MutateKeywordPlansResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Returns the requested Keyword Plan forecast curve.
     * Only the bidding strategy is considered for generating forecast curve.
     * The bidding strategy value specified in the plan is ignored.
     *
     * To generate a forecast at a value specified in the plan, use
     * KeywordPlanService.GenerateForecastMetrics.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [KeywordPlanError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: GenerateForecastCurve(google.ads.googleads.v11.services.GenerateForecastCurveRequest) returns (google.ads.googleads.v11.services.GenerateForecastCurveResponse);
     */
    generateForecastCurve(input: GenerateForecastCurveRequest, options?: RpcOptions): UnaryCall<GenerateForecastCurveRequest, GenerateForecastCurveResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GenerateForecastCurveRequest, GenerateForecastCurveResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Returns a forecast in the form of a time series for the Keyword Plan over
     * the next 52 weeks.
     * (1) Forecasts closer to the current date are generally more accurate than
     * further out.
     *
     * (2) The forecast reflects seasonal trends using current and
     * prior traffic patterns. The forecast period of the plan is ignored.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [KeywordPlanError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: GenerateForecastTimeSeries(google.ads.googleads.v11.services.GenerateForecastTimeSeriesRequest) returns (google.ads.googleads.v11.services.GenerateForecastTimeSeriesResponse);
     */
    generateForecastTimeSeries(input: GenerateForecastTimeSeriesRequest, options?: RpcOptions): UnaryCall<GenerateForecastTimeSeriesRequest, GenerateForecastTimeSeriesResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GenerateForecastTimeSeriesRequest, GenerateForecastTimeSeriesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Returns the requested Keyword Plan forecasts.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [KeywordPlanError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: GenerateForecastMetrics(google.ads.googleads.v11.services.GenerateForecastMetricsRequest) returns (google.ads.googleads.v11.services.GenerateForecastMetricsResponse);
     */
    generateForecastMetrics(input: GenerateForecastMetricsRequest, options?: RpcOptions): UnaryCall<GenerateForecastMetricsRequest, GenerateForecastMetricsResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<GenerateForecastMetricsRequest, GenerateForecastMetricsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Returns the requested Keyword Plan historical metrics.
     *
     * List of thrown errors:
     *   [AuthenticationError]()
     *   [AuthorizationError]()
     *   [HeaderError]()
     *   [InternalError]()
     *   [KeywordPlanError]()
     *   [QuotaError]()
     *   [RequestError]()
     *
     * @generated from protobuf rpc: GenerateHistoricalMetrics(google.ads.googleads.v11.services.GenerateHistoricalMetricsRequest) returns (google.ads.googleads.v11.services.GenerateHistoricalMetricsResponse);
     */
    generateHistoricalMetrics(input: GenerateHistoricalMetricsRequest, options?: RpcOptions): UnaryCall<GenerateHistoricalMetricsRequest, GenerateHistoricalMetricsResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<GenerateHistoricalMetricsRequest, GenerateHistoricalMetricsResponse>("unary", this._transport, method, opt, input);
    }
}
