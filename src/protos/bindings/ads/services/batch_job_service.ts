// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/services/batch_job_service.proto" (package "google.ads.googleads.v11.services", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import { Operation } from "../../google/longrunning/operations";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../google/rpc/status";
import { MutateOperationResponse } from "./google_ads_service";
import { ResponseContentTypeEnum_ResponseContentType } from "../enums/response_content_type";
import { MutateOperation } from "./google_ads_service";
import { BatchJob } from "../resources/batch_job";
/**
 * Request message for [BatchJobService.MutateBatchJob][google.ads.googleads.v11.services.BatchJobService.MutateBatchJob].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateBatchJobRequest
 */
export interface MutateBatchJobRequest {
    /**
     * Required. The ID of the customer for which to create a batch job.
     *
     * @generated from protobuf field: string customer_id = 1;
     */
    customerId: string;
    /**
     * Required. The operation to perform on an individual batch job.
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.BatchJobOperation operation = 2;
     */
    operation?: BatchJobOperation;
}
/**
 * A single operation on a batch job.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.BatchJobOperation
 */
export interface BatchJobOperation {
    /**
     * @generated from protobuf oneof: operation
     */
    operation: {
        oneofKind: "create";
        /**
         * Create operation: No resource name is expected for the new batch job.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.BatchJob create = 1;
         */
        create: BatchJob;
    } | {
        oneofKind: "remove";
        /**
         * Remove operation: The batch job must not have been run. A resource name
         * for the removed batch job is expected, in this format:
         *
         * `customers/{customer_id}/batchJobs/{batch_job_id}`
         *
         * @generated from protobuf field: string remove = 4;
         */
        remove: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Response message for [BatchJobService.MutateBatchJob][google.ads.googleads.v11.services.BatchJobService.MutateBatchJob].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateBatchJobResponse
 */
export interface MutateBatchJobResponse {
    /**
     * The result for the mutate.
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.MutateBatchJobResult result = 1;
     */
    result?: MutateBatchJobResult;
}
/**
 * The result for the batch job mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.MutateBatchJobResult
 */
export interface MutateBatchJobResult {
    /**
     * The resource name of the batch job.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
}
/**
 * Request message for [BatchJobService.RunBatchJob][google.ads.googleads.v11.services.BatchJobService.RunBatchJob].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.RunBatchJobRequest
 */
export interface RunBatchJobRequest {
    /**
     * Required. The resource name of the BatchJob to run.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
}
/**
 * Request message for [BatchJobService.AddBatchJobOperations][google.ads.googleads.v11.services.BatchJobService.AddBatchJobOperations].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.AddBatchJobOperationsRequest
 */
export interface AddBatchJobOperationsRequest {
    /**
     * Required. The resource name of the batch job.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * A token used to enforce sequencing.
     *
     * The first AddBatchJobOperations request for a batch job should not set
     * sequence_token. Subsequent requests must set sequence_token to the value of
     * next_sequence_token received in the previous AddBatchJobOperations
     * response.
     *
     * @generated from protobuf field: string sequence_token = 2;
     */
    sequenceToken: string;
    /**
     * Required. The list of mutates being added.
     *
     * Operations can use negative integers as temp ids to signify dependencies
     * between entities created in this batch job. For example, a customer with
     * id = 1234 can create a campaign and an ad group in that same campaign by
     * creating a campaign in the first operation with the resource name
     * explicitly set to "customers/1234/campaigns/-1", and creating an ad group
     * in the second operation with the campaign field also set to
     * "customers/1234/campaigns/-1".
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.MutateOperation mutate_operations = 3;
     */
    mutateOperations: MutateOperation[];
}
/**
 * Response message for [BatchJobService.AddBatchJobOperations][google.ads.googleads.v11.services.BatchJobService.AddBatchJobOperations].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.AddBatchJobOperationsResponse
 */
export interface AddBatchJobOperationsResponse {
    /**
     * The total number of operations added so far for this batch job.
     *
     * @generated from protobuf field: int64 total_operations = 1;
     */
    totalOperations: bigint;
    /**
     * The sequence token to be used when calling AddBatchJobOperations again if
     * more operations need to be added. The next AddBatchJobOperations request
     * must set the sequence_token field to the value of this field.
     *
     * @generated from protobuf field: string next_sequence_token = 2;
     */
    nextSequenceToken: string;
}
/**
 * Request message for [BatchJobService.ListBatchJobResults][google.ads.googleads.v11.services.BatchJobService.ListBatchJobResults].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.ListBatchJobResultsRequest
 */
export interface ListBatchJobResultsRequest {
    /**
     * Required. The resource name of the batch job whose results are being listed.
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Token of the page to retrieve. If not specified, the first
     * page of results will be returned. Use the value obtained from
     * `next_page_token` in the previous response in order to request
     * the next page of results.
     *
     * @generated from protobuf field: string page_token = 2;
     */
    pageToken: string;
    /**
     * Number of elements to retrieve in a single page.
     * When a page request is too large, the server may decide to
     * further limit the number of returned resources.
     *
     * @generated from protobuf field: int32 page_size = 3;
     */
    pageSize: number;
    /**
     * The response content type setting. Determines whether the mutable resource
     * or just the resource name should be returned.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 4;
     */
    responseContentType: ResponseContentTypeEnum_ResponseContentType;
}
/**
 * Response message for [BatchJobService.ListBatchJobResults][google.ads.googleads.v11.services.BatchJobService.ListBatchJobResults].
 *
 * @generated from protobuf message google.ads.googleads.v11.services.ListBatchJobResultsResponse
 */
export interface ListBatchJobResultsResponse {
    /**
     * The list of rows that matched the query.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.services.BatchJobResult results = 1;
     */
    results: BatchJobResult[];
    /**
     * Pagination token used to retrieve the next page of results.
     * Pass the content of this string as the `page_token` attribute of
     * the next request. `next_page_token` is not returned for the last
     * page.
     *
     * @generated from protobuf field: string next_page_token = 2;
     */
    nextPageToken: string;
}
/**
 * An individual batch job result.
 *
 * @generated from protobuf message google.ads.googleads.v11.services.BatchJobResult
 */
export interface BatchJobResult {
    /**
     * Index of the mutate operation.
     *
     * @generated from protobuf field: int64 operation_index = 1;
     */
    operationIndex: bigint;
    /**
     * Response for the mutate.
     * May be empty if errors occurred.
     *
     * @generated from protobuf field: google.ads.googleads.v11.services.MutateOperationResponse mutate_operation_response = 2;
     */
    mutateOperationResponse?: MutateOperationResponse;
    /**
     * Details of the errors when processing the operation.
     *
     * @generated from protobuf field: google.rpc.Status status = 3;
     */
    status?: Status;
}
// @generated message type with reflection information, may provide speed optimized methods
class MutateBatchJobRequest$Type extends MessageType<MutateBatchJobRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateBatchJobRequest", [
            { no: 1, name: "customer_id", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "operation", kind: "message", T: () => BatchJobOperation, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value?: PartialMessage<MutateBatchJobRequest>): MutateBatchJobRequest {
        const message = { customerId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateBatchJobRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateBatchJobRequest): MutateBatchJobRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string customer_id */ 1:
                    message.customerId = reader.string();
                    break;
                case /* google.ads.googleads.v11.services.BatchJobOperation operation */ 2:
                    message.operation = BatchJobOperation.internalBinaryRead(reader, reader.uint32(), options, message.operation);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateBatchJobRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string customer_id = 1; */
        if (message.customerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.customerId);
        /* google.ads.googleads.v11.services.BatchJobOperation operation = 2; */
        if (message.operation)
            BatchJobOperation.internalBinaryWrite(message.operation, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateBatchJobRequest
 */
export const MutateBatchJobRequest = new MutateBatchJobRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BatchJobOperation$Type extends MessageType<BatchJobOperation> {
    constructor() {
        super("google.ads.googleads.v11.services.BatchJobOperation", [
            { no: 1, name: "create", kind: "message", oneof: "operation", T: () => BatchJob },
            { no: 4, name: "remove", kind: "scalar", oneof: "operation", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/BatchJob" } } }
        ]);
    }
    create(value?: PartialMessage<BatchJobOperation>): BatchJobOperation {
        const message = { operation: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BatchJobOperation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BatchJobOperation): BatchJobOperation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.resources.BatchJob create */ 1:
                    message.operation = {
                        oneofKind: "create",
                        create: BatchJob.internalBinaryRead(reader, reader.uint32(), options, (message.operation as any).create)
                    };
                    break;
                case /* string remove */ 4:
                    message.operation = {
                        oneofKind: "remove",
                        remove: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BatchJobOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.resources.BatchJob create = 1; */
        if (message.operation.oneofKind === "create")
            BatchJob.internalBinaryWrite(message.operation.create, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string remove = 4; */
        if (message.operation.oneofKind === "remove")
            writer.tag(4, WireType.LengthDelimited).string(message.operation.remove);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.BatchJobOperation
 */
export const BatchJobOperation = new BatchJobOperation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateBatchJobResponse$Type extends MessageType<MutateBatchJobResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateBatchJobResponse", [
            { no: 1, name: "result", kind: "message", T: () => MutateBatchJobResult }
        ]);
    }
    create(value?: PartialMessage<MutateBatchJobResponse>): MutateBatchJobResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateBatchJobResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateBatchJobResponse): MutateBatchJobResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.services.MutateBatchJobResult result */ 1:
                    message.result = MutateBatchJobResult.internalBinaryRead(reader, reader.uint32(), options, message.result);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateBatchJobResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.services.MutateBatchJobResult result = 1; */
        if (message.result)
            MutateBatchJobResult.internalBinaryWrite(message.result, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateBatchJobResponse
 */
export const MutateBatchJobResponse = new MutateBatchJobResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MutateBatchJobResult$Type extends MessageType<MutateBatchJobResult> {
    constructor() {
        super("google.ads.googleads.v11.services.MutateBatchJobResult", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/BatchJob" } } }
        ]);
    }
    create(value?: PartialMessage<MutateBatchJobResult>): MutateBatchJobResult {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MutateBatchJobResult>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MutateBatchJobResult): MutateBatchJobResult {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MutateBatchJobResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.MutateBatchJobResult
 */
export const MutateBatchJobResult = new MutateBatchJobResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RunBatchJobRequest$Type extends MessageType<RunBatchJobRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.RunBatchJobRequest", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/BatchJob" } } }
        ]);
    }
    create(value?: PartialMessage<RunBatchJobRequest>): RunBatchJobRequest {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RunBatchJobRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RunBatchJobRequest): RunBatchJobRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RunBatchJobRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.RunBatchJobRequest
 */
export const RunBatchJobRequest = new RunBatchJobRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddBatchJobOperationsRequest$Type extends MessageType<AddBatchJobOperationsRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.AddBatchJobOperationsRequest", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/BatchJob" } } },
            { no: 2, name: "sequence_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "mutate_operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MutateOperation, options: { "google.api.field_behavior": ["REQUIRED"] } }
        ]);
    }
    create(value?: PartialMessage<AddBatchJobOperationsRequest>): AddBatchJobOperationsRequest {
        const message = { resourceName: "", sequenceToken: "", mutateOperations: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddBatchJobOperationsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddBatchJobOperationsRequest): AddBatchJobOperationsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* string sequence_token */ 2:
                    message.sequenceToken = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.services.MutateOperation mutate_operations */ 3:
                    message.mutateOperations.push(MutateOperation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddBatchJobOperationsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* string sequence_token = 2; */
        if (message.sequenceToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.sequenceToken);
        /* repeated google.ads.googleads.v11.services.MutateOperation mutate_operations = 3; */
        for (let i = 0; i < message.mutateOperations.length; i++)
            MutateOperation.internalBinaryWrite(message.mutateOperations[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AddBatchJobOperationsRequest
 */
export const AddBatchJobOperationsRequest = new AddBatchJobOperationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddBatchJobOperationsResponse$Type extends MessageType<AddBatchJobOperationsResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.AddBatchJobOperationsResponse", [
            { no: 1, name: "total_operations", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "next_sequence_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<AddBatchJobOperationsResponse>): AddBatchJobOperationsResponse {
        const message = { totalOperations: 0n, nextSequenceToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddBatchJobOperationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddBatchJobOperationsResponse): AddBatchJobOperationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 total_operations */ 1:
                    message.totalOperations = reader.int64().toBigInt();
                    break;
                case /* string next_sequence_token */ 2:
                    message.nextSequenceToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddBatchJobOperationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 total_operations = 1; */
        if (message.totalOperations !== 0n)
            writer.tag(1, WireType.Varint).int64(message.totalOperations);
        /* string next_sequence_token = 2; */
        if (message.nextSequenceToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.nextSequenceToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.AddBatchJobOperationsResponse
 */
export const AddBatchJobOperationsResponse = new AddBatchJobOperationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListBatchJobResultsRequest$Type extends MessageType<ListBatchJobResultsRequest> {
    constructor() {
        super("google.ads.googleads.v11.services.ListBatchJobResultsRequest", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"], "google.api.resource_reference": { type: "googleads.googleapis.com/BatchJob" } } },
            { no: 2, name: "page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "page_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "response_content_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType", ResponseContentTypeEnum_ResponseContentType] }
        ]);
    }
    create(value?: PartialMessage<ListBatchJobResultsRequest>): ListBatchJobResultsRequest {
        const message = { resourceName: "", pageToken: "", pageSize: 0, responseContentType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListBatchJobResultsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListBatchJobResultsRequest): ListBatchJobResultsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* string page_token */ 2:
                    message.pageToken = reader.string();
                    break;
                case /* int32 page_size */ 3:
                    message.pageSize = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type */ 4:
                    message.responseContentType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListBatchJobResultsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* string page_token = 2; */
        if (message.pageToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.pageToken);
        /* int32 page_size = 3; */
        if (message.pageSize !== 0)
            writer.tag(3, WireType.Varint).int32(message.pageSize);
        /* google.ads.googleads.v11.enums.ResponseContentTypeEnum.ResponseContentType response_content_type = 4; */
        if (message.responseContentType !== 0)
            writer.tag(4, WireType.Varint).int32(message.responseContentType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ListBatchJobResultsRequest
 */
export const ListBatchJobResultsRequest = new ListBatchJobResultsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListBatchJobResultsResponse$Type extends MessageType<ListBatchJobResultsResponse> {
    constructor() {
        super("google.ads.googleads.v11.services.ListBatchJobResultsResponse", [
            { no: 1, name: "results", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BatchJobResult },
            { no: 2, name: "next_page_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ListBatchJobResultsResponse>): ListBatchJobResultsResponse {
        const message = { results: [], nextPageToken: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ListBatchJobResultsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ListBatchJobResultsResponse): ListBatchJobResultsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.services.BatchJobResult results */ 1:
                    message.results.push(BatchJobResult.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string next_page_token */ 2:
                    message.nextPageToken = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ListBatchJobResultsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.services.BatchJobResult results = 1; */
        for (let i = 0; i < message.results.length; i++)
            BatchJobResult.internalBinaryWrite(message.results[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string next_page_token = 2; */
        if (message.nextPageToken !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.nextPageToken);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.ListBatchJobResultsResponse
 */
export const ListBatchJobResultsResponse = new ListBatchJobResultsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BatchJobResult$Type extends MessageType<BatchJobResult> {
    constructor() {
        super("google.ads.googleads.v11.services.BatchJobResult", [
            { no: 1, name: "operation_index", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "mutate_operation_response", kind: "message", T: () => MutateOperationResponse },
            { no: 3, name: "status", kind: "message", T: () => Status }
        ]);
    }
    create(value?: PartialMessage<BatchJobResult>): BatchJobResult {
        const message = { operationIndex: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BatchJobResult>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BatchJobResult): BatchJobResult {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 operation_index */ 1:
                    message.operationIndex = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.services.MutateOperationResponse mutate_operation_response */ 2:
                    message.mutateOperationResponse = MutateOperationResponse.internalBinaryRead(reader, reader.uint32(), options, message.mutateOperationResponse);
                    break;
                case /* google.rpc.Status status */ 3:
                    message.status = Status.internalBinaryRead(reader, reader.uint32(), options, message.status);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BatchJobResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 operation_index = 1; */
        if (message.operationIndex !== 0n)
            writer.tag(1, WireType.Varint).int64(message.operationIndex);
        /* google.ads.googleads.v11.services.MutateOperationResponse mutate_operation_response = 2; */
        if (message.mutateOperationResponse)
            MutateOperationResponse.internalBinaryWrite(message.mutateOperationResponse, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* google.rpc.Status status = 3; */
        if (message.status)
            Status.internalBinaryWrite(message.status, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.services.BatchJobResult
 */
export const BatchJobResult = new BatchJobResult$Type();
/**
 * @generated ServiceType for protobuf service google.ads.googleads.v11.services.BatchJobService
 */
export const BatchJobService = new ServiceType("google.ads.googleads.v11.services.BatchJobService", [
    { name: "MutateBatchJob", options: { "google.api.http": { post: "/v11/customers/{customer_id=*}/batchJobs:mutate", body: "*" }, "google.api.method_signature": ["customer_id,operation"] }, I: MutateBatchJobRequest, O: MutateBatchJobResponse },
    { name: "ListBatchJobResults", options: { "google.api.http": { get: "/v11/{resource_name=customers/*/batchJobs/*}:listResults" }, "google.api.method_signature": ["resource_name"] }, I: ListBatchJobResultsRequest, O: ListBatchJobResultsResponse },
    { name: "RunBatchJob", options: { "google.api.http": { post: "/v11/{resource_name=customers/*/batchJobs/*}:run", body: "*" }, "google.api.method_signature": ["resource_name"], "google.longrunning.operation_info": { responseType: "google.protobuf.Empty", metadataType: "google.ads.googleads.v11.resources.BatchJob.BatchJobMetadata" } }, I: RunBatchJobRequest, O: Operation },
    { name: "AddBatchJobOperations", options: { "google.api.http": { post: "/v11/{resource_name=customers/*/batchJobs/*}:addOperations", body: "*" }, "google.api.method_signature": ["resource_name,sequence_token,mutate_operations", "resource_name,mutate_operations"] }, I: AddBatchJobOperationsRequest, O: AddBatchJobOperationsResponse }
], { "google.api.default_host": "googleads.googleapis.com", "google.api.oauth_scopes": "https://www.googleapis.com/auth/adwords" });
