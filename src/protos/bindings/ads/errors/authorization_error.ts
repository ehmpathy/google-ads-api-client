// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/errors/authorization_error.proto" (package "google.ads.googleads.v11.errors", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// Proto file describing authorization errors.

/**
 * Container for enum describing possible authorization errors.
 *
 * @generated from protobuf message google.ads.googleads.v11.errors.AuthorizationErrorEnum
 */
export interface AuthorizationErrorEnum {
}
/**
 * Enum describing possible authorization errors.
 *
 * @generated from protobuf enum google.ads.googleads.v11.errors.AuthorizationErrorEnum.AuthorizationError
 */
export enum AuthorizationErrorEnum_AuthorizationError {
    /**
     * Enum unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * The received error code is not known in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * User doesn't have permission to access customer. Note: If you're
     * accessing a client customer, the manager's customer ID must be set in the
     * `login-customer-id` header. Learn more at
     * https://developers.google.com/google-ads/api/docs/concepts/call-structure#cid
     *
     * @generated from protobuf enum value: USER_PERMISSION_DENIED = 2;
     */
    USER_PERMISSION_DENIED = 2,
    /**
     * The developer token is not on the allow-list.
     *
     * @generated from protobuf enum value: DEVELOPER_TOKEN_NOT_ON_ALLOWLIST = 13;
     */
    DEVELOPER_TOKEN_NOT_ON_ALLOWLIST = 13,
    /**
     * The developer token is not allowed with the project sent in the request.
     *
     * @generated from protobuf enum value: DEVELOPER_TOKEN_PROHIBITED = 4;
     */
    DEVELOPER_TOKEN_PROHIBITED = 4,
    /**
     * The Google Cloud project sent in the request does not have permission to
     * access the api.
     *
     * @generated from protobuf enum value: PROJECT_DISABLED = 5;
     */
    PROJECT_DISABLED = 5,
    /**
     * Authorization of the client failed.
     *
     * @generated from protobuf enum value: AUTHORIZATION_ERROR = 6;
     */
    AUTHORIZATION_ERROR = 6,
    /**
     * The user does not have permission to perform this action
     * (for example, ADD, UPDATE, REMOVE) on the resource or call a method.
     *
     * @generated from protobuf enum value: ACTION_NOT_PERMITTED = 7;
     */
    ACTION_NOT_PERMITTED = 7,
    /**
     * Signup not complete.
     *
     * @generated from protobuf enum value: INCOMPLETE_SIGNUP = 8;
     */
    INCOMPLETE_SIGNUP = 8,
    /**
     * The customer can't be used because it isn't enabled.
     *
     * @generated from protobuf enum value: CUSTOMER_NOT_ENABLED = 24;
     */
    CUSTOMER_NOT_ENABLED = 24,
    /**
     * The developer must sign the terms of service. They can be found here:
     * ads.google.com/aw/apicenter
     *
     * @generated from protobuf enum value: MISSING_TOS = 9;
     */
    MISSING_TOS = 9,
    /**
     * The developer token is not approved. Non-approved developer tokens can
     * only be used with test accounts.
     *
     * @generated from protobuf enum value: DEVELOPER_TOKEN_NOT_APPROVED = 10;
     */
    DEVELOPER_TOKEN_NOT_APPROVED = 10,
    /**
     * The login customer specified does not have access to the account
     * specified, so the request is invalid.
     *
     * @generated from protobuf enum value: INVALID_LOGIN_CUSTOMER_ID_SERVING_CUSTOMER_ID_COMBINATION = 11;
     */
    INVALID_LOGIN_CUSTOMER_ID_SERVING_CUSTOMER_ID_COMBINATION = 11,
    /**
     * The developer specified does not have access to the service.
     *
     * @generated from protobuf enum value: SERVICE_ACCESS_DENIED = 12;
     */
    SERVICE_ACCESS_DENIED = 12,
    /**
     * The customer (or login customer) isn't in Google Ads. It belongs to
     * another ads system.
     *
     * @generated from protobuf enum value: ACCESS_DENIED_FOR_ACCOUNT_TYPE = 25;
     */
    ACCESS_DENIED_FOR_ACCOUNT_TYPE = 25,
    /**
     * The developer does not have access to the metrics queried.
     *
     * @generated from protobuf enum value: METRIC_ACCESS_DENIED = 26;
     */
    METRIC_ACCESS_DENIED = 26
}
// @generated message type with reflection information, may provide speed optimized methods
class AuthorizationErrorEnum$Type extends MessageType<AuthorizationErrorEnum> {
    constructor() {
        super("google.ads.googleads.v11.errors.AuthorizationErrorEnum", []);
    }
    create(value?: PartialMessage<AuthorizationErrorEnum>): AuthorizationErrorEnum {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AuthorizationErrorEnum>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AuthorizationErrorEnum): AuthorizationErrorEnum {
        return target ?? this.create();
    }
    internalBinaryWrite(message: AuthorizationErrorEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.errors.AuthorizationErrorEnum
 */
export const AuthorizationErrorEnum = new AuthorizationErrorEnum$Type();
