// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/enums/conversion_adjustment_type.proto" (package "google.ads.googleads.v11.enums", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// Proto file describing conversion adjustment type.

/**
 * Container for enum describing conversion adjustment types.
 *
 * @generated from protobuf message google.ads.googleads.v11.enums.ConversionAdjustmentTypeEnum
 */
export interface ConversionAdjustmentTypeEnum {
}
/**
 * The different actions advertisers can take to adjust the conversions that
 * they already reported. Retractions negate a conversion. Restatements change
 * the value of a conversion.
 *
 * @generated from protobuf enum google.ads.googleads.v11.enums.ConversionAdjustmentTypeEnum.ConversionAdjustmentType
 */
export enum ConversionAdjustmentTypeEnum_ConversionAdjustmentType {
    /**
     * Not specified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * Negates a conversion so that its total value and count are both zero.
     *
     * @generated from protobuf enum value: RETRACTION = 2;
     */
    RETRACTION = 2,
    /**
     * Changes the value of a conversion.
     *
     * @generated from protobuf enum value: RESTATEMENT = 3;
     */
    RESTATEMENT = 3,
    /**
     * Supplements an existing conversion with provided user identifiers and
     * user agent, which can be used by Google to enhance the conversion count.
     *
     * @generated from protobuf enum value: ENHANCEMENT = 4;
     */
    ENHANCEMENT = 4
}
// @generated message type with reflection information, may provide speed optimized methods
class ConversionAdjustmentTypeEnum$Type extends MessageType<ConversionAdjustmentTypeEnum> {
    constructor() {
        super("google.ads.googleads.v11.enums.ConversionAdjustmentTypeEnum", []);
    }
    create(value?: PartialMessage<ConversionAdjustmentTypeEnum>): ConversionAdjustmentTypeEnum {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ConversionAdjustmentTypeEnum>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ConversionAdjustmentTypeEnum): ConversionAdjustmentTypeEnum {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ConversionAdjustmentTypeEnum, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.enums.ConversionAdjustmentTypeEnum
 */
export const ConversionAdjustmentTypeEnum = new ConversionAdjustmentTypeEnum$Type();
