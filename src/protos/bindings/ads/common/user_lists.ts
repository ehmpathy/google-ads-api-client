// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/common/user_lists.proto" (package "google.ads.googleads.v11.common", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { UserListLogicalRuleOperatorEnum_UserListLogicalRuleOperator } from "../enums/user_list_logical_rule_operator";
import { UserListPrepopulationStatusEnum_UserListPrepopulationStatus } from "../enums/user_list_prepopulation_status";
import { UserListFlexibleRuleOperatorEnum_UserListFlexibleRuleOperator } from "../enums/user_list_flexible_rule_operator";
import { UserListCombinedRuleOperatorEnum_UserListCombinedRuleOperator } from "../enums/user_list_combined_rule_operator";
import { UserListStringRuleItemOperatorEnum_UserListStringRuleItemOperator } from "../enums/user_list_string_rule_item_operator";
import { UserListNumberRuleItemOperatorEnum_UserListNumberRuleItemOperator } from "../enums/user_list_number_rule_item_operator";
import { UserListDateRuleItemOperatorEnum_UserListDateRuleItemOperator } from "../enums/user_list_date_rule_item_operator";
import { UserListRuleTypeEnum_UserListRuleType } from "../enums/user_list_rule_type";
import { UserListCrmDataSourceTypeEnum_UserListCrmDataSourceType } from "../enums/user_list_crm_data_source_type";
import { CustomerMatchUploadKeyTypeEnum_CustomerMatchUploadKeyType } from "../enums/customer_match_upload_key_type";
// Proto file describing user list types.

/**
 * SimilarUserList is a list of users which are similar to users from another
 * UserList. These lists are read-only and automatically created by Google.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.SimilarUserListInfo
 */
export interface SimilarUserListInfo {
    /**
     * Seed UserList from which this list is derived.
     *
     * @generated from protobuf field: optional string seed_user_list = 2;
     */
    seedUserList?: string;
}
/**
 * UserList of CRM users provided by the advertiser.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.CrmBasedUserListInfo
 */
export interface CrmBasedUserListInfo {
    /**
     * A string that uniquely identifies a mobile application from which the data
     * was collected.
     * For iOS, the ID string is the 9 digit string that appears at the end of an
     * App Store URL (for example, "476943146" for "Flood-It! 2" whose App Store
     * link is http://itunes.apple.com/us/app/flood-it!-2/id476943146). For
     * Android, the ID string is the application's package name (for example,
     * "com.labpixies.colordrips" for "Color Drips" given Google Play link
     * https://play.google.com/store/apps/details?id=com.labpixies.colordrips).
     * Required when creating CrmBasedUserList for uploading mobile advertising
     * IDs.
     *
     * @generated from protobuf field: optional string app_id = 4;
     */
    appId?: string;
    /**
     * Matching key type of the list.
     * Mixed data types are not allowed on the same list.
     * This field is required for an ADD operation.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.CustomerMatchUploadKeyTypeEnum.CustomerMatchUploadKeyType upload_key_type = 2;
     */
    uploadKeyType: CustomerMatchUploadKeyTypeEnum_CustomerMatchUploadKeyType;
    /**
     * Data source of the list. Default value is FIRST_PARTY.
     * Only customers on the allow-list can create third-party sourced CRM lists.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListCrmDataSourceTypeEnum.UserListCrmDataSourceType data_source_type = 3;
     */
    dataSourceType: UserListCrmDataSourceTypeEnum_UserListCrmDataSourceType;
}
/**
 * A client defined rule based on custom parameters sent by web sites or
 * uploaded by the advertiser.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.UserListRuleInfo
 */
export interface UserListRuleInfo {
    /**
     * Rule type is used to determine how to group rule items.
     *
     * The default is OR of ANDs (disjunctive normal form).
     * That is, rule items will be ANDed together within rule item groups and the
     * groups themselves will be ORed together.
     *
     * Currently AND of ORs (conjunctive normal form) is only supported for
     * ExpressionRuleUserList.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListRuleTypeEnum.UserListRuleType rule_type = 1;
     */
    ruleType: UserListRuleTypeEnum_UserListRuleType;
    /**
     * List of rule item groups that defines this rule.
     * Rule item groups are grouped together based on rule_type.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.UserListRuleItemGroupInfo rule_item_groups = 2;
     */
    ruleItemGroups: UserListRuleItemGroupInfo[];
}
/**
 * A group of rule items.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.UserListRuleItemGroupInfo
 */
export interface UserListRuleItemGroupInfo {
    /**
     * Rule items that will be grouped together based on rule_type.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.UserListRuleItemInfo rule_items = 1;
     */
    ruleItems: UserListRuleItemInfo[];
}
/**
 * An atomic rule item.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.UserListRuleItemInfo
 */
export interface UserListRuleItemInfo {
    /**
     * Rule variable name. It should match the corresponding key name fired
     * by the pixel.
     * A name must begin with US-ascii letters or underscore or UTF8 code that is
     * greater than 127 and consist of US-ascii letters or digits or underscore or
     * UTF8 code that is greater than 127.
     * For websites, there are two built-in variable URL (name = 'url__') and
     * referrer URL (name = 'ref_url__').
     * This field must be populated when creating a new rule item.
     *
     * @generated from protobuf field: optional string name = 5;
     */
    name?: string;
    /**
     * @generated from protobuf oneof: rule_item
     */
    ruleItem: {
        oneofKind: "numberRuleItem";
        /**
         * An atomic rule item composed of a number operation.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.UserListNumberRuleItemInfo number_rule_item = 2;
         */
        numberRuleItem: UserListNumberRuleItemInfo;
    } | {
        oneofKind: "stringRuleItem";
        /**
         * An atomic rule item composed of a string operation.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.UserListStringRuleItemInfo string_rule_item = 3;
         */
        stringRuleItem: UserListStringRuleItemInfo;
    } | {
        oneofKind: "dateRuleItem";
        /**
         * An atomic rule item composed of a date operation.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.UserListDateRuleItemInfo date_rule_item = 4;
         */
        dateRuleItem: UserListDateRuleItemInfo;
    } | {
        oneofKind: undefined;
    };
}
/**
 * A rule item composed of a date operation.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.UserListDateRuleItemInfo
 */
export interface UserListDateRuleItemInfo {
    /**
     * Date comparison operator.
     * This field is required and must be populated when creating new date
     * rule item.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListDateRuleItemOperatorEnum.UserListDateRuleItemOperator operator = 1;
     */
    operator: UserListDateRuleItemOperatorEnum_UserListDateRuleItemOperator;
    /**
     * String representing date value to be compared with the rule variable.
     * Supported date format is YYYY-MM-DD.
     * Times are reported in the customer's time zone.
     *
     * @generated from protobuf field: optional string value = 4;
     */
    value?: string;
    /**
     * The relative date value of the right hand side denoted by number of days
     * offset from now. The value field will override this field when both are
     * present.
     *
     * @generated from protobuf field: optional int64 offset_in_days = 5;
     */
    offsetInDays?: bigint;
}
/**
 * A rule item composed of a number operation.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.UserListNumberRuleItemInfo
 */
export interface UserListNumberRuleItemInfo {
    /**
     * Number comparison operator.
     * This field is required and must be populated when creating a new number
     * rule item.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListNumberRuleItemOperatorEnum.UserListNumberRuleItemOperator operator = 1;
     */
    operator: UserListNumberRuleItemOperatorEnum_UserListNumberRuleItemOperator;
    /**
     * Number value to be compared with the variable.
     * This field is required and must be populated when creating a new number
     * rule item.
     *
     * @generated from protobuf field: optional double value = 3;
     */
    value?: number;
}
/**
 * A rule item composed of a string operation.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.UserListStringRuleItemInfo
 */
export interface UserListStringRuleItemInfo {
    /**
     * String comparison operator.
     * This field is required and must be populated when creating a new string
     * rule item.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListStringRuleItemOperatorEnum.UserListStringRuleItemOperator operator = 1;
     */
    operator: UserListStringRuleItemOperatorEnum_UserListStringRuleItemOperator;
    /**
     * The right hand side of the string rule item. For URLs or referrer URLs,
     * the value can not contain illegal URL chars such as newlines, quotes,
     * tabs, or parentheses. This field is required and must be populated when
     * creating a new string rule item.
     *
     * @generated from protobuf field: optional string value = 3;
     */
    value?: string;
}
/**
 * User lists defined by combining two rules, left operand and right operand.
 * There are two operators: AND where left operand and right operand have to be
 * true; AND_NOT where left operand is true but right operand is false.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.CombinedRuleUserListInfo
 */
export interface CombinedRuleUserListInfo {
    /**
     * Left operand of the combined rule.
     * This field is required and must be populated when creating new combined
     * rule based user list.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.UserListRuleInfo left_operand = 1;
     */
    leftOperand?: UserListRuleInfo;
    /**
     * Right operand of the combined rule.
     * This field is required and must be populated when creating new combined
     * rule based user list.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.UserListRuleInfo right_operand = 2;
     */
    rightOperand?: UserListRuleInfo;
    /**
     * Operator to connect the two operands.
     *
     * Required for creating a combined rule user list.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator rule_operator = 3;
     */
    ruleOperator: UserListCombinedRuleOperatorEnum_UserListCombinedRuleOperator;
}
/**
 * Visitors of a page. The page visit is defined by one boolean rule expression.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.ExpressionRuleUserListInfo
 */
export interface ExpressionRuleUserListInfo {
    /**
     * Boolean rule that defines this user list. The rule consists of a list of
     * rule item groups and each rule item group consists of a list of rule items.
     * All the rule item groups are ORed or ANDed together for evaluation based on
     * rule.rule_type.
     *
     * Required for creating an expression rule user list.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.UserListRuleInfo rule = 1;
     */
    rule?: UserListRuleInfo;
}
/**
 * Flexible rule that wraps the common rule and a lookback window.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.FlexibleRuleOperandInfo
 */
export interface FlexibleRuleOperandInfo {
    /**
     * List of rule item groups that defines this rule.
     * Rule item groups are grouped together.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.UserListRuleInfo rule = 1;
     */
    rule?: UserListRuleInfo;
    /**
     * Lookback window for this rule in days. From now until X days ago.
     *
     * @generated from protobuf field: optional int64 lookback_window_days = 2;
     */
    lookbackWindowDays?: bigint;
}
/**
 * Flexible rule representation of visitors with one or multiple actions.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.FlexibleRuleUserListInfo
 */
export interface FlexibleRuleUserListInfo {
    /**
     * Operator that defines how the inclusive operands are combined.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListFlexibleRuleOperatorEnum.UserListFlexibleRuleOperator inclusive_rule_operator = 1;
     */
    inclusiveRuleOperator: UserListFlexibleRuleOperatorEnum_UserListFlexibleRuleOperator;
    /**
     * Actions that are located on the inclusive side.
     * These are joined together by either AND/OR as specified by the
     * inclusive_rule_operator.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.FlexibleRuleOperandInfo inclusive_operands = 2;
     */
    inclusiveOperands: FlexibleRuleOperandInfo[];
    /**
     * Actions that are located on the exclusive side.
     * These are joined together with OR.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.FlexibleRuleOperandInfo exclusive_operands = 3;
     */
    exclusiveOperands: FlexibleRuleOperandInfo[];
}
/**
 * Representation of a userlist that is generated by a rule.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.RuleBasedUserListInfo
 */
export interface RuleBasedUserListInfo {
    /**
     * The status of pre-population. The field is default to NONE if not set which
     * means the previous users will not be considered. If set to REQUESTED, past
     * site visitors or app users who match the list definition will be included
     * in the list (works on the Display Network only). This will only
     * add past users from within the last 30 days, depending on the
     * list's membership duration and the date when the remarketing tag is added.
     * The status will be updated to FINISHED once request is processed, or FAILED
     * if the request fails.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus prepopulation_status = 1;
     */
    prepopulationStatus: UserListPrepopulationStatusEnum_UserListPrepopulationStatus;
    /**
     * Flexible rule representation of visitors with one or multiple actions.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.FlexibleRuleUserListInfo flexible_rule_user_list = 5;
     */
    flexibleRuleUserList?: FlexibleRuleUserListInfo;
    /**
     * @generated from protobuf oneof: rule_based_user_list
     */
    ruleBasedUserList: {
        oneofKind: "combinedRuleUserList";
        /**
         * User lists defined by combining two rules.
         * There are two operators: AND, where the left and right operands have to
         * be true; AND_NOT where left operand is true but right operand is false.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.CombinedRuleUserListInfo combined_rule_user_list = 2;
         */
        combinedRuleUserList: CombinedRuleUserListInfo;
    } | {
        oneofKind: "expressionRuleUserList";
        /**
         * Visitors of a page. The page visit is defined by one boolean rule
         * expression.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.ExpressionRuleUserListInfo expression_rule_user_list = 4;
         */
        expressionRuleUserList: ExpressionRuleUserListInfo;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Represents a user list that is a custom combination of user lists.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.LogicalUserListInfo
 */
export interface LogicalUserListInfo {
    /**
     * Logical list rules that define this user list. The rules are defined as a
     * logical operator (ALL/ANY/NONE) and a list of user lists. All the rules are
     * ANDed when they are evaluated.
     *
     * Required for creating a logical user list.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.UserListLogicalRuleInfo rules = 1;
     */
    rules: UserListLogicalRuleInfo[];
}
/**
 * A user list logical rule. A rule has a logical operator (and/or/not) and a
 * list of user lists as operands.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.UserListLogicalRuleInfo
 */
export interface UserListLogicalRuleInfo {
    /**
     * The logical operator of the rule.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListLogicalRuleOperatorEnum.UserListLogicalRuleOperator operator = 1;
     */
    operator: UserListLogicalRuleOperatorEnum_UserListLogicalRuleOperator;
    /**
     * The list of operands of the rule.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.LogicalUserListOperandInfo rule_operands = 2;
     */
    ruleOperands: LogicalUserListOperandInfo[];
}
/**
 * Operand of logical user list that consists of a user list.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.LogicalUserListOperandInfo
 */
export interface LogicalUserListOperandInfo {
    /**
     * Resource name of a user list as an operand.
     *
     * @generated from protobuf field: optional string user_list = 2;
     */
    userList?: string;
}
/**
 * User list targeting as a collection of conversions or remarketing actions.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.BasicUserListInfo
 */
export interface BasicUserListInfo {
    /**
     * Actions associated with this user list.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.UserListActionInfo actions = 1;
     */
    actions: UserListActionInfo[];
}
/**
 * Represents an action type used for building remarketing user lists.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.UserListActionInfo
 */
export interface UserListActionInfo {
    /**
     * @generated from protobuf oneof: user_list_action
     */
    userListAction: {
        oneofKind: "conversionAction";
        /**
         * A conversion action that's not generated from remarketing.
         *
         * @generated from protobuf field: string conversion_action = 3;
         */
        conversionAction: string;
    } | {
        oneofKind: "remarketingAction";
        /**
         * A remarketing action.
         *
         * @generated from protobuf field: string remarketing_action = 4;
         */
        remarketingAction: string;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class SimilarUserListInfo$Type extends MessageType<SimilarUserListInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.SimilarUserListInfo", [
            { no: 2, name: "seed_user_list", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SimilarUserListInfo>): SimilarUserListInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SimilarUserListInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SimilarUserListInfo): SimilarUserListInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string seed_user_list */ 2:
                    message.seedUserList = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SimilarUserListInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string seed_user_list = 2; */
        if (message.seedUserList !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.seedUserList);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.SimilarUserListInfo
 */
export const SimilarUserListInfo = new SimilarUserListInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CrmBasedUserListInfo$Type extends MessageType<CrmBasedUserListInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.CrmBasedUserListInfo", [
            { no: 4, name: "app_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "upload_key_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.CustomerMatchUploadKeyTypeEnum.CustomerMatchUploadKeyType", CustomerMatchUploadKeyTypeEnum_CustomerMatchUploadKeyType] },
            { no: 3, name: "data_source_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListCrmDataSourceTypeEnum.UserListCrmDataSourceType", UserListCrmDataSourceTypeEnum_UserListCrmDataSourceType] }
        ]);
    }
    create(value?: PartialMessage<CrmBasedUserListInfo>): CrmBasedUserListInfo {
        const message = { uploadKeyType: 0, dataSourceType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CrmBasedUserListInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CrmBasedUserListInfo): CrmBasedUserListInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string app_id */ 4:
                    message.appId = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.CustomerMatchUploadKeyTypeEnum.CustomerMatchUploadKeyType upload_key_type */ 2:
                    message.uploadKeyType = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.UserListCrmDataSourceTypeEnum.UserListCrmDataSourceType data_source_type */ 3:
                    message.dataSourceType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CrmBasedUserListInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string app_id = 4; */
        if (message.appId !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.appId);
        /* google.ads.googleads.v11.enums.CustomerMatchUploadKeyTypeEnum.CustomerMatchUploadKeyType upload_key_type = 2; */
        if (message.uploadKeyType !== 0)
            writer.tag(2, WireType.Varint).int32(message.uploadKeyType);
        /* google.ads.googleads.v11.enums.UserListCrmDataSourceTypeEnum.UserListCrmDataSourceType data_source_type = 3; */
        if (message.dataSourceType !== 0)
            writer.tag(3, WireType.Varint).int32(message.dataSourceType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CrmBasedUserListInfo
 */
export const CrmBasedUserListInfo = new CrmBasedUserListInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserListRuleInfo$Type extends MessageType<UserListRuleInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.UserListRuleInfo", [
            { no: 1, name: "rule_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListRuleTypeEnum.UserListRuleType", UserListRuleTypeEnum_UserListRuleType] },
            { no: 2, name: "rule_item_groups", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UserListRuleItemGroupInfo }
        ]);
    }
    create(value?: PartialMessage<UserListRuleInfo>): UserListRuleInfo {
        const message = { ruleType: 0, ruleItemGroups: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserListRuleInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserListRuleInfo): UserListRuleInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.UserListRuleTypeEnum.UserListRuleType rule_type */ 1:
                    message.ruleType = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.common.UserListRuleItemGroupInfo rule_item_groups */ 2:
                    message.ruleItemGroups.push(UserListRuleItemGroupInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserListRuleInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.UserListRuleTypeEnum.UserListRuleType rule_type = 1; */
        if (message.ruleType !== 0)
            writer.tag(1, WireType.Varint).int32(message.ruleType);
        /* repeated google.ads.googleads.v11.common.UserListRuleItemGroupInfo rule_item_groups = 2; */
        for (let i = 0; i < message.ruleItemGroups.length; i++)
            UserListRuleItemGroupInfo.internalBinaryWrite(message.ruleItemGroups[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.UserListRuleInfo
 */
export const UserListRuleInfo = new UserListRuleInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserListRuleItemGroupInfo$Type extends MessageType<UserListRuleItemGroupInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.UserListRuleItemGroupInfo", [
            { no: 1, name: "rule_items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UserListRuleItemInfo }
        ]);
    }
    create(value?: PartialMessage<UserListRuleItemGroupInfo>): UserListRuleItemGroupInfo {
        const message = { ruleItems: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserListRuleItemGroupInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserListRuleItemGroupInfo): UserListRuleItemGroupInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.UserListRuleItemInfo rule_items */ 1:
                    message.ruleItems.push(UserListRuleItemInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserListRuleItemGroupInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.UserListRuleItemInfo rule_items = 1; */
        for (let i = 0; i < message.ruleItems.length; i++)
            UserListRuleItemInfo.internalBinaryWrite(message.ruleItems[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.UserListRuleItemGroupInfo
 */
export const UserListRuleItemGroupInfo = new UserListRuleItemGroupInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserListRuleItemInfo$Type extends MessageType<UserListRuleItemInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.UserListRuleItemInfo", [
            { no: 5, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "number_rule_item", kind: "message", oneof: "ruleItem", T: () => UserListNumberRuleItemInfo },
            { no: 3, name: "string_rule_item", kind: "message", oneof: "ruleItem", T: () => UserListStringRuleItemInfo },
            { no: 4, name: "date_rule_item", kind: "message", oneof: "ruleItem", T: () => UserListDateRuleItemInfo }
        ]);
    }
    create(value?: PartialMessage<UserListRuleItemInfo>): UserListRuleItemInfo {
        const message = { ruleItem: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserListRuleItemInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserListRuleItemInfo): UserListRuleItemInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string name */ 5:
                    message.name = reader.string();
                    break;
                case /* google.ads.googleads.v11.common.UserListNumberRuleItemInfo number_rule_item */ 2:
                    message.ruleItem = {
                        oneofKind: "numberRuleItem",
                        numberRuleItem: UserListNumberRuleItemInfo.internalBinaryRead(reader, reader.uint32(), options, (message.ruleItem as any).numberRuleItem)
                    };
                    break;
                case /* google.ads.googleads.v11.common.UserListStringRuleItemInfo string_rule_item */ 3:
                    message.ruleItem = {
                        oneofKind: "stringRuleItem",
                        stringRuleItem: UserListStringRuleItemInfo.internalBinaryRead(reader, reader.uint32(), options, (message.ruleItem as any).stringRuleItem)
                    };
                    break;
                case /* google.ads.googleads.v11.common.UserListDateRuleItemInfo date_rule_item */ 4:
                    message.ruleItem = {
                        oneofKind: "dateRuleItem",
                        dateRuleItem: UserListDateRuleItemInfo.internalBinaryRead(reader, reader.uint32(), options, (message.ruleItem as any).dateRuleItem)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserListRuleItemInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string name = 5; */
        if (message.name !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.name);
        /* google.ads.googleads.v11.common.UserListNumberRuleItemInfo number_rule_item = 2; */
        if (message.ruleItem.oneofKind === "numberRuleItem")
            UserListNumberRuleItemInfo.internalBinaryWrite(message.ruleItem.numberRuleItem, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.UserListStringRuleItemInfo string_rule_item = 3; */
        if (message.ruleItem.oneofKind === "stringRuleItem")
            UserListStringRuleItemInfo.internalBinaryWrite(message.ruleItem.stringRuleItem, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.UserListDateRuleItemInfo date_rule_item = 4; */
        if (message.ruleItem.oneofKind === "dateRuleItem")
            UserListDateRuleItemInfo.internalBinaryWrite(message.ruleItem.dateRuleItem, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.UserListRuleItemInfo
 */
export const UserListRuleItemInfo = new UserListRuleItemInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserListDateRuleItemInfo$Type extends MessageType<UserListDateRuleItemInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.UserListDateRuleItemInfo", [
            { no: 1, name: "operator", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListDateRuleItemOperatorEnum.UserListDateRuleItemOperator", UserListDateRuleItemOperatorEnum_UserListDateRuleItemOperator] },
            { no: 4, name: "value", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "offset_in_days", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<UserListDateRuleItemInfo>): UserListDateRuleItemInfo {
        const message = { operator: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserListDateRuleItemInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserListDateRuleItemInfo): UserListDateRuleItemInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.UserListDateRuleItemOperatorEnum.UserListDateRuleItemOperator operator */ 1:
                    message.operator = reader.int32();
                    break;
                case /* optional string value */ 4:
                    message.value = reader.string();
                    break;
                case /* optional int64 offset_in_days */ 5:
                    message.offsetInDays = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserListDateRuleItemInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.UserListDateRuleItemOperatorEnum.UserListDateRuleItemOperator operator = 1; */
        if (message.operator !== 0)
            writer.tag(1, WireType.Varint).int32(message.operator);
        /* optional string value = 4; */
        if (message.value !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.value);
        /* optional int64 offset_in_days = 5; */
        if (message.offsetInDays !== undefined)
            writer.tag(5, WireType.Varint).int64(message.offsetInDays);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.UserListDateRuleItemInfo
 */
export const UserListDateRuleItemInfo = new UserListDateRuleItemInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserListNumberRuleItemInfo$Type extends MessageType<UserListNumberRuleItemInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.UserListNumberRuleItemInfo", [
            { no: 1, name: "operator", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListNumberRuleItemOperatorEnum.UserListNumberRuleItemOperator", UserListNumberRuleItemOperatorEnum_UserListNumberRuleItemOperator] },
            { no: 3, name: "value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
    create(value?: PartialMessage<UserListNumberRuleItemInfo>): UserListNumberRuleItemInfo {
        const message = { operator: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserListNumberRuleItemInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserListNumberRuleItemInfo): UserListNumberRuleItemInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.UserListNumberRuleItemOperatorEnum.UserListNumberRuleItemOperator operator */ 1:
                    message.operator = reader.int32();
                    break;
                case /* optional double value */ 3:
                    message.value = reader.double();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserListNumberRuleItemInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.UserListNumberRuleItemOperatorEnum.UserListNumberRuleItemOperator operator = 1; */
        if (message.operator !== 0)
            writer.tag(1, WireType.Varint).int32(message.operator);
        /* optional double value = 3; */
        if (message.value !== undefined)
            writer.tag(3, WireType.Bit64).double(message.value);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.UserListNumberRuleItemInfo
 */
export const UserListNumberRuleItemInfo = new UserListNumberRuleItemInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserListStringRuleItemInfo$Type extends MessageType<UserListStringRuleItemInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.UserListStringRuleItemInfo", [
            { no: 1, name: "operator", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListStringRuleItemOperatorEnum.UserListStringRuleItemOperator", UserListStringRuleItemOperatorEnum_UserListStringRuleItemOperator] },
            { no: 3, name: "value", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UserListStringRuleItemInfo>): UserListStringRuleItemInfo {
        const message = { operator: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserListStringRuleItemInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserListStringRuleItemInfo): UserListStringRuleItemInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.UserListStringRuleItemOperatorEnum.UserListStringRuleItemOperator operator */ 1:
                    message.operator = reader.int32();
                    break;
                case /* optional string value */ 3:
                    message.value = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserListStringRuleItemInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.UserListStringRuleItemOperatorEnum.UserListStringRuleItemOperator operator = 1; */
        if (message.operator !== 0)
            writer.tag(1, WireType.Varint).int32(message.operator);
        /* optional string value = 3; */
        if (message.value !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.value);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.UserListStringRuleItemInfo
 */
export const UserListStringRuleItemInfo = new UserListStringRuleItemInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CombinedRuleUserListInfo$Type extends MessageType<CombinedRuleUserListInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.CombinedRuleUserListInfo", [
            { no: 1, name: "left_operand", kind: "message", T: () => UserListRuleInfo },
            { no: 2, name: "right_operand", kind: "message", T: () => UserListRuleInfo },
            { no: 3, name: "rule_operator", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator", UserListCombinedRuleOperatorEnum_UserListCombinedRuleOperator] }
        ]);
    }
    create(value?: PartialMessage<CombinedRuleUserListInfo>): CombinedRuleUserListInfo {
        const message = { ruleOperator: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CombinedRuleUserListInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CombinedRuleUserListInfo): CombinedRuleUserListInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.UserListRuleInfo left_operand */ 1:
                    message.leftOperand = UserListRuleInfo.internalBinaryRead(reader, reader.uint32(), options, message.leftOperand);
                    break;
                case /* google.ads.googleads.v11.common.UserListRuleInfo right_operand */ 2:
                    message.rightOperand = UserListRuleInfo.internalBinaryRead(reader, reader.uint32(), options, message.rightOperand);
                    break;
                case /* google.ads.googleads.v11.enums.UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator rule_operator */ 3:
                    message.ruleOperator = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CombinedRuleUserListInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.common.UserListRuleInfo left_operand = 1; */
        if (message.leftOperand)
            UserListRuleInfo.internalBinaryWrite(message.leftOperand, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.UserListRuleInfo right_operand = 2; */
        if (message.rightOperand)
            UserListRuleInfo.internalBinaryWrite(message.rightOperand, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator rule_operator = 3; */
        if (message.ruleOperator !== 0)
            writer.tag(3, WireType.Varint).int32(message.ruleOperator);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CombinedRuleUserListInfo
 */
export const CombinedRuleUserListInfo = new CombinedRuleUserListInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExpressionRuleUserListInfo$Type extends MessageType<ExpressionRuleUserListInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.ExpressionRuleUserListInfo", [
            { no: 1, name: "rule", kind: "message", T: () => UserListRuleInfo }
        ]);
    }
    create(value?: PartialMessage<ExpressionRuleUserListInfo>): ExpressionRuleUserListInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ExpressionRuleUserListInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExpressionRuleUserListInfo): ExpressionRuleUserListInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.UserListRuleInfo rule */ 1:
                    message.rule = UserListRuleInfo.internalBinaryRead(reader, reader.uint32(), options, message.rule);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ExpressionRuleUserListInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.common.UserListRuleInfo rule = 1; */
        if (message.rule)
            UserListRuleInfo.internalBinaryWrite(message.rule, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.ExpressionRuleUserListInfo
 */
export const ExpressionRuleUserListInfo = new ExpressionRuleUserListInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FlexibleRuleOperandInfo$Type extends MessageType<FlexibleRuleOperandInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.FlexibleRuleOperandInfo", [
            { no: 1, name: "rule", kind: "message", T: () => UserListRuleInfo },
            { no: 2, name: "lookback_window_days", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<FlexibleRuleOperandInfo>): FlexibleRuleOperandInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FlexibleRuleOperandInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FlexibleRuleOperandInfo): FlexibleRuleOperandInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.UserListRuleInfo rule */ 1:
                    message.rule = UserListRuleInfo.internalBinaryRead(reader, reader.uint32(), options, message.rule);
                    break;
                case /* optional int64 lookback_window_days */ 2:
                    message.lookbackWindowDays = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FlexibleRuleOperandInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.common.UserListRuleInfo rule = 1; */
        if (message.rule)
            UserListRuleInfo.internalBinaryWrite(message.rule, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional int64 lookback_window_days = 2; */
        if (message.lookbackWindowDays !== undefined)
            writer.tag(2, WireType.Varint).int64(message.lookbackWindowDays);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.FlexibleRuleOperandInfo
 */
export const FlexibleRuleOperandInfo = new FlexibleRuleOperandInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FlexibleRuleUserListInfo$Type extends MessageType<FlexibleRuleUserListInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.FlexibleRuleUserListInfo", [
            { no: 1, name: "inclusive_rule_operator", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListFlexibleRuleOperatorEnum.UserListFlexibleRuleOperator", UserListFlexibleRuleOperatorEnum_UserListFlexibleRuleOperator] },
            { no: 2, name: "inclusive_operands", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FlexibleRuleOperandInfo },
            { no: 3, name: "exclusive_operands", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FlexibleRuleOperandInfo }
        ]);
    }
    create(value?: PartialMessage<FlexibleRuleUserListInfo>): FlexibleRuleUserListInfo {
        const message = { inclusiveRuleOperator: 0, inclusiveOperands: [], exclusiveOperands: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FlexibleRuleUserListInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FlexibleRuleUserListInfo): FlexibleRuleUserListInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.UserListFlexibleRuleOperatorEnum.UserListFlexibleRuleOperator inclusive_rule_operator */ 1:
                    message.inclusiveRuleOperator = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.common.FlexibleRuleOperandInfo inclusive_operands */ 2:
                    message.inclusiveOperands.push(FlexibleRuleOperandInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.ads.googleads.v11.common.FlexibleRuleOperandInfo exclusive_operands */ 3:
                    message.exclusiveOperands.push(FlexibleRuleOperandInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FlexibleRuleUserListInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.UserListFlexibleRuleOperatorEnum.UserListFlexibleRuleOperator inclusive_rule_operator = 1; */
        if (message.inclusiveRuleOperator !== 0)
            writer.tag(1, WireType.Varint).int32(message.inclusiveRuleOperator);
        /* repeated google.ads.googleads.v11.common.FlexibleRuleOperandInfo inclusive_operands = 2; */
        for (let i = 0; i < message.inclusiveOperands.length; i++)
            FlexibleRuleOperandInfo.internalBinaryWrite(message.inclusiveOperands[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.common.FlexibleRuleOperandInfo exclusive_operands = 3; */
        for (let i = 0; i < message.exclusiveOperands.length; i++)
            FlexibleRuleOperandInfo.internalBinaryWrite(message.exclusiveOperands[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.FlexibleRuleUserListInfo
 */
export const FlexibleRuleUserListInfo = new FlexibleRuleUserListInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RuleBasedUserListInfo$Type extends MessageType<RuleBasedUserListInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.RuleBasedUserListInfo", [
            { no: 1, name: "prepopulation_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus", UserListPrepopulationStatusEnum_UserListPrepopulationStatus] },
            { no: 5, name: "flexible_rule_user_list", kind: "message", T: () => FlexibleRuleUserListInfo },
            { no: 2, name: "combined_rule_user_list", kind: "message", oneof: "ruleBasedUserList", T: () => CombinedRuleUserListInfo },
            { no: 4, name: "expression_rule_user_list", kind: "message", oneof: "ruleBasedUserList", T: () => ExpressionRuleUserListInfo }
        ]);
    }
    create(value?: PartialMessage<RuleBasedUserListInfo>): RuleBasedUserListInfo {
        const message = { prepopulationStatus: 0, ruleBasedUserList: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RuleBasedUserListInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RuleBasedUserListInfo): RuleBasedUserListInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus prepopulation_status */ 1:
                    message.prepopulationStatus = reader.int32();
                    break;
                case /* google.ads.googleads.v11.common.FlexibleRuleUserListInfo flexible_rule_user_list */ 5:
                    message.flexibleRuleUserList = FlexibleRuleUserListInfo.internalBinaryRead(reader, reader.uint32(), options, message.flexibleRuleUserList);
                    break;
                case /* google.ads.googleads.v11.common.CombinedRuleUserListInfo combined_rule_user_list */ 2:
                    message.ruleBasedUserList = {
                        oneofKind: "combinedRuleUserList",
                        combinedRuleUserList: CombinedRuleUserListInfo.internalBinaryRead(reader, reader.uint32(), options, (message.ruleBasedUserList as any).combinedRuleUserList)
                    };
                    break;
                case /* google.ads.googleads.v11.common.ExpressionRuleUserListInfo expression_rule_user_list */ 4:
                    message.ruleBasedUserList = {
                        oneofKind: "expressionRuleUserList",
                        expressionRuleUserList: ExpressionRuleUserListInfo.internalBinaryRead(reader, reader.uint32(), options, (message.ruleBasedUserList as any).expressionRuleUserList)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RuleBasedUserListInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.UserListPrepopulationStatusEnum.UserListPrepopulationStatus prepopulation_status = 1; */
        if (message.prepopulationStatus !== 0)
            writer.tag(1, WireType.Varint).int32(message.prepopulationStatus);
        /* google.ads.googleads.v11.common.FlexibleRuleUserListInfo flexible_rule_user_list = 5; */
        if (message.flexibleRuleUserList)
            FlexibleRuleUserListInfo.internalBinaryWrite(message.flexibleRuleUserList, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.CombinedRuleUserListInfo combined_rule_user_list = 2; */
        if (message.ruleBasedUserList.oneofKind === "combinedRuleUserList")
            CombinedRuleUserListInfo.internalBinaryWrite(message.ruleBasedUserList.combinedRuleUserList, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.ExpressionRuleUserListInfo expression_rule_user_list = 4; */
        if (message.ruleBasedUserList.oneofKind === "expressionRuleUserList")
            ExpressionRuleUserListInfo.internalBinaryWrite(message.ruleBasedUserList.expressionRuleUserList, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.RuleBasedUserListInfo
 */
export const RuleBasedUserListInfo = new RuleBasedUserListInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogicalUserListInfo$Type extends MessageType<LogicalUserListInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.LogicalUserListInfo", [
            { no: 1, name: "rules", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UserListLogicalRuleInfo }
        ]);
    }
    create(value?: PartialMessage<LogicalUserListInfo>): LogicalUserListInfo {
        const message = { rules: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LogicalUserListInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LogicalUserListInfo): LogicalUserListInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.UserListLogicalRuleInfo rules */ 1:
                    message.rules.push(UserListLogicalRuleInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LogicalUserListInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.UserListLogicalRuleInfo rules = 1; */
        for (let i = 0; i < message.rules.length; i++)
            UserListLogicalRuleInfo.internalBinaryWrite(message.rules[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.LogicalUserListInfo
 */
export const LogicalUserListInfo = new LogicalUserListInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserListLogicalRuleInfo$Type extends MessageType<UserListLogicalRuleInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.UserListLogicalRuleInfo", [
            { no: 1, name: "operator", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListLogicalRuleOperatorEnum.UserListLogicalRuleOperator", UserListLogicalRuleOperatorEnum_UserListLogicalRuleOperator] },
            { no: 2, name: "rule_operands", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LogicalUserListOperandInfo }
        ]);
    }
    create(value?: PartialMessage<UserListLogicalRuleInfo>): UserListLogicalRuleInfo {
        const message = { operator: 0, ruleOperands: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserListLogicalRuleInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserListLogicalRuleInfo): UserListLogicalRuleInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.UserListLogicalRuleOperatorEnum.UserListLogicalRuleOperator operator */ 1:
                    message.operator = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.common.LogicalUserListOperandInfo rule_operands */ 2:
                    message.ruleOperands.push(LogicalUserListOperandInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserListLogicalRuleInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.UserListLogicalRuleOperatorEnum.UserListLogicalRuleOperator operator = 1; */
        if (message.operator !== 0)
            writer.tag(1, WireType.Varint).int32(message.operator);
        /* repeated google.ads.googleads.v11.common.LogicalUserListOperandInfo rule_operands = 2; */
        for (let i = 0; i < message.ruleOperands.length; i++)
            LogicalUserListOperandInfo.internalBinaryWrite(message.ruleOperands[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.UserListLogicalRuleInfo
 */
export const UserListLogicalRuleInfo = new UserListLogicalRuleInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LogicalUserListOperandInfo$Type extends MessageType<LogicalUserListOperandInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.LogicalUserListOperandInfo", [
            { no: 2, name: "user_list", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LogicalUserListOperandInfo>): LogicalUserListOperandInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LogicalUserListOperandInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LogicalUserListOperandInfo): LogicalUserListOperandInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string user_list */ 2:
                    message.userList = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LogicalUserListOperandInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string user_list = 2; */
        if (message.userList !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.userList);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.LogicalUserListOperandInfo
 */
export const LogicalUserListOperandInfo = new LogicalUserListOperandInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BasicUserListInfo$Type extends MessageType<BasicUserListInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.BasicUserListInfo", [
            { no: 1, name: "actions", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UserListActionInfo }
        ]);
    }
    create(value?: PartialMessage<BasicUserListInfo>): BasicUserListInfo {
        const message = { actions: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BasicUserListInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BasicUserListInfo): BasicUserListInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.UserListActionInfo actions */ 1:
                    message.actions.push(UserListActionInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BasicUserListInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.UserListActionInfo actions = 1; */
        for (let i = 0; i < message.actions.length; i++)
            UserListActionInfo.internalBinaryWrite(message.actions[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.BasicUserListInfo
 */
export const BasicUserListInfo = new BasicUserListInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserListActionInfo$Type extends MessageType<UserListActionInfo> {
    constructor() {
        super("google.ads.googleads.v11.common.UserListActionInfo", [
            { no: 3, name: "conversion_action", kind: "scalar", oneof: "userListAction", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "remarketing_action", kind: "scalar", oneof: "userListAction", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UserListActionInfo>): UserListActionInfo {
        const message = { userListAction: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserListActionInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserListActionInfo): UserListActionInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string conversion_action */ 3:
                    message.userListAction = {
                        oneofKind: "conversionAction",
                        conversionAction: reader.string()
                    };
                    break;
                case /* string remarketing_action */ 4:
                    message.userListAction = {
                        oneofKind: "remarketingAction",
                        remarketingAction: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserListActionInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string conversion_action = 3; */
        if (message.userListAction.oneofKind === "conversionAction")
            writer.tag(3, WireType.LengthDelimited).string(message.userListAction.conversionAction);
        /* string remarketing_action = 4; */
        if (message.userListAction.oneofKind === "remarketingAction")
            writer.tag(4, WireType.LengthDelimited).string(message.userListAction.remarketingAction);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.UserListActionInfo
 */
export const UserListActionInfo = new UserListActionInfo$Type();
