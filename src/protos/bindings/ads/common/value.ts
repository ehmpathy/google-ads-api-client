// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/common/value.proto" (package "google.ads.googleads.v11.common", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// Proto file describing value types.

/**
 * A generic data container.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.Value
 */
export interface Value {
    /**
     * @generated from protobuf oneof: value
     */
    value: {
        oneofKind: "booleanValue";
        /**
         * A boolean.
         *
         * @generated from protobuf field: bool boolean_value = 1;
         */
        booleanValue: boolean;
    } | {
        oneofKind: "int64Value";
        /**
         * An int64.
         *
         * @generated from protobuf field: int64 int64_value = 2;
         */
        int64Value: bigint;
    } | {
        oneofKind: "floatValue";
        /**
         * A float.
         *
         * @generated from protobuf field: float float_value = 3;
         */
        floatValue: number;
    } | {
        oneofKind: "doubleValue";
        /**
         * A double.
         *
         * @generated from protobuf field: double double_value = 4;
         */
        doubleValue: number;
    } | {
        oneofKind: "stringValue";
        /**
         * A string.
         *
         * @generated from protobuf field: string string_value = 5;
         */
        stringValue: string;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class Value$Type extends MessageType<Value> {
    constructor() {
        super("google.ads.googleads.v11.common.Value", [
            { no: 1, name: "boolean_value", kind: "scalar", oneof: "value", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "int64_value", kind: "scalar", oneof: "value", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "float_value", kind: "scalar", oneof: "value", T: 2 /*ScalarType.FLOAT*/ },
            { no: 4, name: "double_value", kind: "scalar", oneof: "value", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "string_value", kind: "scalar", oneof: "value", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Value>): Value {
        const message = { value: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Value>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Value): Value {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool boolean_value */ 1:
                    message.value = {
                        oneofKind: "booleanValue",
                        booleanValue: reader.bool()
                    };
                    break;
                case /* int64 int64_value */ 2:
                    message.value = {
                        oneofKind: "int64Value",
                        int64Value: reader.int64().toBigInt()
                    };
                    break;
                case /* float float_value */ 3:
                    message.value = {
                        oneofKind: "floatValue",
                        floatValue: reader.float()
                    };
                    break;
                case /* double double_value */ 4:
                    message.value = {
                        oneofKind: "doubleValue",
                        doubleValue: reader.double()
                    };
                    break;
                case /* string string_value */ 5:
                    message.value = {
                        oneofKind: "stringValue",
                        stringValue: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Value, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool boolean_value = 1; */
        if (message.value.oneofKind === "booleanValue")
            writer.tag(1, WireType.Varint).bool(message.value.booleanValue);
        /* int64 int64_value = 2; */
        if (message.value.oneofKind === "int64Value")
            writer.tag(2, WireType.Varint).int64(message.value.int64Value);
        /* float float_value = 3; */
        if (message.value.oneofKind === "floatValue")
            writer.tag(3, WireType.Bit32).float(message.value.floatValue);
        /* double double_value = 4; */
        if (message.value.oneofKind === "doubleValue")
            writer.tag(4, WireType.Bit64).double(message.value.doubleValue);
        /* string string_value = 5; */
        if (message.value.oneofKind === "stringValue")
            writer.tag(5, WireType.LengthDelimited).string(message.value.stringValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.Value
 */
export const Value = new Value$Type();
