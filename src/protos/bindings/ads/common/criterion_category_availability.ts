// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/common/criterion_category_availability.proto" (package "google.ads.googleads.v11.common", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CriterionCategoryLocaleAvailabilityModeEnum_CriterionCategoryLocaleAvailabilityMode } from "../enums/criterion_category_locale_availability_mode";
import { AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType } from "../enums/advertising_channel_sub_type";
import { AdvertisingChannelTypeEnum_AdvertisingChannelType } from "../enums/advertising_channel_type";
import { CriterionCategoryChannelAvailabilityModeEnum_CriterionCategoryChannelAvailabilityMode } from "../enums/criterion_category_channel_availability_mode";
// Proto file describing criterion category availability information.

/**
 * Information of category availability, per advertising channel.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.CriterionCategoryAvailability
 */
export interface CriterionCategoryAvailability {
    /**
     * Channel types and subtypes that are available to the category.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.CriterionCategoryChannelAvailability channel = 1;
     */
    channel?: CriterionCategoryChannelAvailability;
    /**
     * Locales that are available to the category for the channel.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.CriterionCategoryLocaleAvailability locale = 2;
     */
    locale: CriterionCategoryLocaleAvailability[];
}
/**
 * Information of advertising channel type and subtypes a category is available
 * in.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.CriterionCategoryChannelAvailability
 */
export interface CriterionCategoryChannelAvailability {
    /**
     * Format of the channel availability. Can be ALL_CHANNELS (the rest of the
     * fields will not be set), CHANNEL_TYPE (only advertising_channel_type type
     * will be set, the category is available to all sub types under it) or
     * CHANNEL_TYPE_AND_SUBTYPES (advertising_channel_type,
     * advertising_channel_sub_type, and include_default_channel_sub_type will all
     * be set).
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.CriterionCategoryChannelAvailabilityModeEnum.CriterionCategoryChannelAvailabilityMode availability_mode = 1;
     */
    availabilityMode: CriterionCategoryChannelAvailabilityModeEnum_CriterionCategoryChannelAvailabilityMode;
    /**
     * Channel type the category is available to.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType advertising_channel_type = 2;
     */
    advertisingChannelType: AdvertisingChannelTypeEnum_AdvertisingChannelType;
    /**
     * Channel subtypes under the channel type the category is available to.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType advertising_channel_sub_type = 3;
     */
    advertisingChannelSubType: AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType[];
    /**
     * Whether default channel sub type is included. For example,
     * advertising_channel_type being DISPLAY and include_default_channel_sub_type
     * being false means that the default display campaign where channel sub type
     * is not set is not included in this availability configuration.
     *
     * @generated from protobuf field: optional bool include_default_channel_sub_type = 5;
     */
    includeDefaultChannelSubType?: boolean;
}
/**
 * Information about which locales a category is available in.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.CriterionCategoryLocaleAvailability
 */
export interface CriterionCategoryLocaleAvailability {
    /**
     * Format of the locale availability. Can be LAUNCHED_TO_ALL (both country and
     * language will be empty), COUNTRY (only country will be set), LANGUAGE (only
     * language wil be set), COUNTRY_AND_LANGUAGE (both country and language will
     * be set).
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.CriterionCategoryLocaleAvailabilityModeEnum.CriterionCategoryLocaleAvailabilityMode availability_mode = 1;
     */
    availabilityMode: CriterionCategoryLocaleAvailabilityModeEnum_CriterionCategoryLocaleAvailabilityMode;
    /**
     * Code of the country.
     *
     * @generated from protobuf field: optional string country_code = 4;
     */
    countryCode?: string;
    /**
     * Code of the language.
     *
     * @generated from protobuf field: optional string language_code = 5;
     */
    languageCode?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class CriterionCategoryAvailability$Type extends MessageType<CriterionCategoryAvailability> {
    constructor() {
        super("google.ads.googleads.v11.common.CriterionCategoryAvailability", [
            { no: 1, name: "channel", kind: "message", T: () => CriterionCategoryChannelAvailability },
            { no: 2, name: "locale", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CriterionCategoryLocaleAvailability }
        ]);
    }
    create(value?: PartialMessage<CriterionCategoryAvailability>): CriterionCategoryAvailability {
        const message = { locale: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CriterionCategoryAvailability>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CriterionCategoryAvailability): CriterionCategoryAvailability {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.CriterionCategoryChannelAvailability channel */ 1:
                    message.channel = CriterionCategoryChannelAvailability.internalBinaryRead(reader, reader.uint32(), options, message.channel);
                    break;
                case /* repeated google.ads.googleads.v11.common.CriterionCategoryLocaleAvailability locale */ 2:
                    message.locale.push(CriterionCategoryLocaleAvailability.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CriterionCategoryAvailability, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.common.CriterionCategoryChannelAvailability channel = 1; */
        if (message.channel)
            CriterionCategoryChannelAvailability.internalBinaryWrite(message.channel, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.common.CriterionCategoryLocaleAvailability locale = 2; */
        for (let i = 0; i < message.locale.length; i++)
            CriterionCategoryLocaleAvailability.internalBinaryWrite(message.locale[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CriterionCategoryAvailability
 */
export const CriterionCategoryAvailability = new CriterionCategoryAvailability$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CriterionCategoryChannelAvailability$Type extends MessageType<CriterionCategoryChannelAvailability> {
    constructor() {
        super("google.ads.googleads.v11.common.CriterionCategoryChannelAvailability", [
            { no: 1, name: "availability_mode", kind: "enum", T: () => ["google.ads.googleads.v11.enums.CriterionCategoryChannelAvailabilityModeEnum.CriterionCategoryChannelAvailabilityMode", CriterionCategoryChannelAvailabilityModeEnum_CriterionCategoryChannelAvailabilityMode] },
            { no: 2, name: "advertising_channel_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType", AdvertisingChannelTypeEnum_AdvertisingChannelType] },
            { no: 3, name: "advertising_channel_sub_type", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType", AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType] },
            { no: 5, name: "include_default_channel_sub_type", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<CriterionCategoryChannelAvailability>): CriterionCategoryChannelAvailability {
        const message = { availabilityMode: 0, advertisingChannelType: 0, advertisingChannelSubType: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CriterionCategoryChannelAvailability>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CriterionCategoryChannelAvailability): CriterionCategoryChannelAvailability {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.CriterionCategoryChannelAvailabilityModeEnum.CriterionCategoryChannelAvailabilityMode availability_mode */ 1:
                    message.availabilityMode = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType advertising_channel_type */ 2:
                    message.advertisingChannelType = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType advertising_channel_sub_type */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.advertisingChannelSubType.push(reader.int32());
                    else
                        message.advertisingChannelSubType.push(reader.int32());
                    break;
                case /* optional bool include_default_channel_sub_type */ 5:
                    message.includeDefaultChannelSubType = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CriterionCategoryChannelAvailability, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.CriterionCategoryChannelAvailabilityModeEnum.CriterionCategoryChannelAvailabilityMode availability_mode = 1; */
        if (message.availabilityMode !== 0)
            writer.tag(1, WireType.Varint).int32(message.availabilityMode);
        /* google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType advertising_channel_type = 2; */
        if (message.advertisingChannelType !== 0)
            writer.tag(2, WireType.Varint).int32(message.advertisingChannelType);
        /* repeated google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType advertising_channel_sub_type = 3; */
        if (message.advertisingChannelSubType.length) {
            writer.tag(3, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.advertisingChannelSubType.length; i++)
                writer.int32(message.advertisingChannelSubType[i]);
            writer.join();
        }
        /* optional bool include_default_channel_sub_type = 5; */
        if (message.includeDefaultChannelSubType !== undefined)
            writer.tag(5, WireType.Varint).bool(message.includeDefaultChannelSubType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CriterionCategoryChannelAvailability
 */
export const CriterionCategoryChannelAvailability = new CriterionCategoryChannelAvailability$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CriterionCategoryLocaleAvailability$Type extends MessageType<CriterionCategoryLocaleAvailability> {
    constructor() {
        super("google.ads.googleads.v11.common.CriterionCategoryLocaleAvailability", [
            { no: 1, name: "availability_mode", kind: "enum", T: () => ["google.ads.googleads.v11.enums.CriterionCategoryLocaleAvailabilityModeEnum.CriterionCategoryLocaleAvailabilityMode", CriterionCategoryLocaleAvailabilityModeEnum_CriterionCategoryLocaleAvailabilityMode] },
            { no: 4, name: "country_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "language_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<CriterionCategoryLocaleAvailability>): CriterionCategoryLocaleAvailability {
        const message = { availabilityMode: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CriterionCategoryLocaleAvailability>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CriterionCategoryLocaleAvailability): CriterionCategoryLocaleAvailability {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.CriterionCategoryLocaleAvailabilityModeEnum.CriterionCategoryLocaleAvailabilityMode availability_mode */ 1:
                    message.availabilityMode = reader.int32();
                    break;
                case /* optional string country_code */ 4:
                    message.countryCode = reader.string();
                    break;
                case /* optional string language_code */ 5:
                    message.languageCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CriterionCategoryLocaleAvailability, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.CriterionCategoryLocaleAvailabilityModeEnum.CriterionCategoryLocaleAvailabilityMode availability_mode = 1; */
        if (message.availabilityMode !== 0)
            writer.tag(1, WireType.Varint).int32(message.availabilityMode);
        /* optional string country_code = 4; */
        if (message.countryCode !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.countryCode);
        /* optional string language_code = 5; */
        if (message.languageCode !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.languageCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CriterionCategoryLocaleAvailability
 */
export const CriterionCategoryLocaleAvailability = new CriterionCategoryLocaleAvailability$Type();
