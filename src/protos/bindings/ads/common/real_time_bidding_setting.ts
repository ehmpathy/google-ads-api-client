// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/common/real_time_bidding_setting.proto" (package "google.ads.googleads.v11.common", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// Proto file describing RealTimeBiddingSetting

/**
 * Settings for Real-Time Bidding, a feature only available for campaigns
 * targeting the Ad Exchange network.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.RealTimeBiddingSetting
 */
export interface RealTimeBiddingSetting {
    /**
     * Whether the campaign is opted in to real-time bidding.
     *
     * @generated from protobuf field: optional bool opt_in = 2;
     */
    optIn?: boolean;
}
// @generated message type with reflection information, may provide speed optimized methods
class RealTimeBiddingSetting$Type extends MessageType<RealTimeBiddingSetting> {
    constructor() {
        super("google.ads.googleads.v11.common.RealTimeBiddingSetting", [
            { no: 2, name: "opt_in", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<RealTimeBiddingSetting>): RealTimeBiddingSetting {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RealTimeBiddingSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RealTimeBiddingSetting): RealTimeBiddingSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool opt_in */ 2:
                    message.optIn = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RealTimeBiddingSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool opt_in = 2; */
        if (message.optIn !== undefined)
            writer.tag(2, WireType.Varint).bool(message.optIn);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.RealTimeBiddingSetting
 */
export const RealTimeBiddingSetting = new RealTimeBiddingSetting$Type();
