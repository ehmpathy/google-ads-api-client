// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/common/final_app_url.proto" (package "google.ads.googleads.v11.common", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { AppUrlOperatingSystemTypeEnum_AppUrlOperatingSystemType } from "../enums/app_url_operating_system_type";
// Proto file FinalAppUrl type.

/**
 * A URL for deep linking into an app for the given operating system.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.FinalAppUrl
 */
export interface FinalAppUrl {
    /**
     * The operating system targeted by this URL. Required.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AppUrlOperatingSystemTypeEnum.AppUrlOperatingSystemType os_type = 1;
     */
    osType: AppUrlOperatingSystemTypeEnum_AppUrlOperatingSystemType;
    /**
     * The app deep link URL. Deep links specify a location in an app that
     * corresponds to the content you'd like to show, and should be of the form
     * {scheme}://{host_path}
     * The scheme identifies which app to open. For your app, you can use a custom
     * scheme that starts with the app's name. The host and path specify the
     * unique location in the app where your content exists.
     * Example: "exampleapp://productid_1234". Required.
     *
     * @generated from protobuf field: optional string url = 3;
     */
    url?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class FinalAppUrl$Type extends MessageType<FinalAppUrl> {
    constructor() {
        super("google.ads.googleads.v11.common.FinalAppUrl", [
            { no: 1, name: "os_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AppUrlOperatingSystemTypeEnum.AppUrlOperatingSystemType", AppUrlOperatingSystemTypeEnum_AppUrlOperatingSystemType] },
            { no: 3, name: "url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<FinalAppUrl>): FinalAppUrl {
        const message = { osType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FinalAppUrl>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FinalAppUrl): FinalAppUrl {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.AppUrlOperatingSystemTypeEnum.AppUrlOperatingSystemType os_type */ 1:
                    message.osType = reader.int32();
                    break;
                case /* optional string url */ 3:
                    message.url = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FinalAppUrl, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.AppUrlOperatingSystemTypeEnum.AppUrlOperatingSystemType os_type = 1; */
        if (message.osType !== 0)
            writer.tag(1, WireType.Varint).int32(message.osType);
        /* optional string url = 3; */
        if (message.url !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.url);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.FinalAppUrl
 */
export const FinalAppUrl = new FinalAppUrl$Type();
