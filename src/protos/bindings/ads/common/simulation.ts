// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/common/simulation.proto" (package "google.ads.googleads.v11.common", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// Proto file describing simulation points.

/**
 * A container for simulation points for simulations of type BID_MODIFIER.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.BidModifierSimulationPointList
 */
export interface BidModifierSimulationPointList {
    /**
     * Projected metrics for a series of bid modifier amounts.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.BidModifierSimulationPoint points = 1;
     */
    points: BidModifierSimulationPoint[];
}
/**
 * A container for simulation points for simulations of type CPC_BID.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.CpcBidSimulationPointList
 */
export interface CpcBidSimulationPointList {
    /**
     * Projected metrics for a series of CPC bid amounts.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.CpcBidSimulationPoint points = 1;
     */
    points: CpcBidSimulationPoint[];
}
/**
 * A container for simulation points for simulations of type CPV_BID.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.CpvBidSimulationPointList
 */
export interface CpvBidSimulationPointList {
    /**
     * Projected metrics for a series of CPV bid amounts.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.CpvBidSimulationPoint points = 1;
     */
    points: CpvBidSimulationPoint[];
}
/**
 * A container for simulation points for simulations of type TARGET_CPA.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.TargetCpaSimulationPointList
 */
export interface TargetCpaSimulationPointList {
    /**
     * Projected metrics for a series of target CPA amounts.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.TargetCpaSimulationPoint points = 1;
     */
    points: TargetCpaSimulationPoint[];
}
/**
 * A container for simulation points for simulations of type TARGET_ROAS.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.TargetRoasSimulationPointList
 */
export interface TargetRoasSimulationPointList {
    /**
     * Projected metrics for a series of target ROAS amounts.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.TargetRoasSimulationPoint points = 1;
     */
    points: TargetRoasSimulationPoint[];
}
/**
 * A container for simulation points for simulations of type PERCENT_CPC_BID.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.PercentCpcBidSimulationPointList
 */
export interface PercentCpcBidSimulationPointList {
    /**
     * Projected metrics for a series of percent CPC bid amounts.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.PercentCpcBidSimulationPoint points = 1;
     */
    points: PercentCpcBidSimulationPoint[];
}
/**
 * A container for simulation points for simulations of type BUDGET.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.BudgetSimulationPointList
 */
export interface BudgetSimulationPointList {
    /**
     * Projected metrics for a series of budget amounts.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.BudgetSimulationPoint points = 1;
     */
    points: BudgetSimulationPoint[];
}
/**
 * A container for simulation points for simulations of type
 * TARGET_IMPRESSION_SHARE.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.TargetImpressionShareSimulationPointList
 */
export interface TargetImpressionShareSimulationPointList {
    /**
     * Projected metrics for a specific target impression share value.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.TargetImpressionShareSimulationPoint points = 1;
     */
    points: TargetImpressionShareSimulationPoint[];
}
/**
 * Projected metrics for a specific bid modifier amount.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.BidModifierSimulationPoint
 */
export interface BidModifierSimulationPoint {
    /**
     * The simulated bid modifier upon which projected metrics are based.
     *
     * @generated from protobuf field: optional double bid_modifier = 15;
     */
    bidModifier?: number;
    /**
     * Projected number of biddable conversions.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: optional double biddable_conversions = 16;
     */
    biddableConversions?: number;
    /**
     * Projected total value of biddable conversions.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: optional double biddable_conversions_value = 17;
     */
    biddableConversionsValue?: number;
    /**
     * Projected number of clicks.
     *
     * @generated from protobuf field: optional int64 clicks = 18;
     */
    clicks?: bigint;
    /**
     * Projected cost in micros.
     *
     * @generated from protobuf field: optional int64 cost_micros = 19;
     */
    costMicros?: bigint;
    /**
     * Projected number of impressions.
     *
     * @generated from protobuf field: optional int64 impressions = 20;
     */
    impressions?: bigint;
    /**
     * Projected number of top slot impressions.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: optional int64 top_slot_impressions = 21;
     */
    topSlotImpressions?: bigint;
    /**
     * Projected number of biddable conversions for the parent resource.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: optional double parent_biddable_conversions = 22;
     */
    parentBiddableConversions?: number;
    /**
     * Projected total value of biddable conversions for the parent resource.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: optional double parent_biddable_conversions_value = 23;
     */
    parentBiddableConversionsValue?: number;
    /**
     * Projected number of clicks for the parent resource.
     *
     * @generated from protobuf field: optional int64 parent_clicks = 24;
     */
    parentClicks?: bigint;
    /**
     * Projected cost in micros for the parent resource.
     *
     * @generated from protobuf field: optional int64 parent_cost_micros = 25;
     */
    parentCostMicros?: bigint;
    /**
     * Projected number of impressions for the parent resource.
     *
     * @generated from protobuf field: optional int64 parent_impressions = 26;
     */
    parentImpressions?: bigint;
    /**
     * Projected number of top slot impressions for the parent resource.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: optional int64 parent_top_slot_impressions = 27;
     */
    parentTopSlotImpressions?: bigint;
    /**
     * Projected minimum daily budget that must be available to the parent
     * resource to realize this simulation.
     *
     * @generated from protobuf field: optional int64 parent_required_budget_micros = 28;
     */
    parentRequiredBudgetMicros?: bigint;
}
/**
 * Projected metrics for a specific CPC bid amount.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.CpcBidSimulationPoint
 */
export interface CpcBidSimulationPoint {
    /**
     * Projected required daily budget that the advertiser must set in order to
     * receive the estimated traffic, in micros of advertiser currency.
     *
     * @generated from protobuf field: int64 required_budget_amount_micros = 17;
     */
    requiredBudgetAmountMicros: bigint;
    /**
     * Projected number of biddable conversions.
     *
     * @generated from protobuf field: optional double biddable_conversions = 9;
     */
    biddableConversions?: number;
    /**
     * Projected total value of biddable conversions.
     *
     * @generated from protobuf field: optional double biddable_conversions_value = 10;
     */
    biddableConversionsValue?: number;
    /**
     * Projected number of clicks.
     *
     * @generated from protobuf field: optional int64 clicks = 11;
     */
    clicks?: bigint;
    /**
     * Projected cost in micros.
     *
     * @generated from protobuf field: optional int64 cost_micros = 12;
     */
    costMicros?: bigint;
    /**
     * Projected number of impressions.
     *
     * @generated from protobuf field: optional int64 impressions = 13;
     */
    impressions?: bigint;
    /**
     * Projected number of top slot impressions.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: optional int64 top_slot_impressions = 14;
     */
    topSlotImpressions?: bigint;
    /**
     * @generated from protobuf oneof: cpc_simulation_key_value
     */
    cpcSimulationKeyValue: {
        oneofKind: "cpcBidMicros";
        /**
         * The simulated CPC bid upon which projected metrics are based.
         *
         * @generated from protobuf field: int64 cpc_bid_micros = 15;
         */
        cpcBidMicros: bigint;
    } | {
        oneofKind: "cpcBidScalingModifier";
        /**
         * The simulated scaling modifier upon which projected metrics are based.
         * All CPC bids relevant to the simulated entity are scaled by this
         * modifier.
         *
         * @generated from protobuf field: double cpc_bid_scaling_modifier = 16;
         */
        cpcBidScalingModifier: number;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Projected metrics for a specific CPV bid amount.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.CpvBidSimulationPoint
 */
export interface CpvBidSimulationPoint {
    /**
     * The simulated CPV bid upon which projected metrics are based.
     *
     * @generated from protobuf field: optional int64 cpv_bid_micros = 5;
     */
    cpvBidMicros?: bigint;
    /**
     * Projected cost in micros.
     *
     * @generated from protobuf field: optional int64 cost_micros = 6;
     */
    costMicros?: bigint;
    /**
     * Projected number of impressions.
     *
     * @generated from protobuf field: optional int64 impressions = 7;
     */
    impressions?: bigint;
    /**
     * Projected number of views.
     *
     * @generated from protobuf field: optional int64 views = 8;
     */
    views?: bigint;
}
/**
 * Projected metrics for a specific target CPA amount.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.TargetCpaSimulationPoint
 */
export interface TargetCpaSimulationPoint {
    /**
     * Projected required daily budget that the advertiser must set in order to
     * receive the estimated traffic, in micros of advertiser currency.
     *
     * @generated from protobuf field: int64 required_budget_amount_micros = 19;
     */
    requiredBudgetAmountMicros: bigint;
    /**
     * Projected number of biddable conversions.
     *
     * @generated from protobuf field: optional double biddable_conversions = 9;
     */
    biddableConversions?: number;
    /**
     * Projected total value of biddable conversions.
     *
     * @generated from protobuf field: optional double biddable_conversions_value = 10;
     */
    biddableConversionsValue?: number;
    /**
     * Projected number of app installs.
     *
     * @generated from protobuf field: double app_installs = 15;
     */
    appInstalls: number;
    /**
     * Projected number of in-app actions.
     *
     * @generated from protobuf field: double in_app_actions = 16;
     */
    inAppActions: number;
    /**
     * Projected number of clicks.
     *
     * @generated from protobuf field: optional int64 clicks = 11;
     */
    clicks?: bigint;
    /**
     * Projected cost in micros.
     *
     * @generated from protobuf field: optional int64 cost_micros = 12;
     */
    costMicros?: bigint;
    /**
     * Projected number of impressions.
     *
     * @generated from protobuf field: optional int64 impressions = 13;
     */
    impressions?: bigint;
    /**
     * Projected number of top slot impressions.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: optional int64 top_slot_impressions = 14;
     */
    topSlotImpressions?: bigint;
    /**
     * @generated from protobuf oneof: target_cpa_simulation_key_value
     */
    targetCpaSimulationKeyValue: {
        oneofKind: "targetCpaMicros";
        /**
         * The simulated target CPA upon which projected metrics are based.
         *
         * @generated from protobuf field: int64 target_cpa_micros = 17;
         */
        targetCpaMicros: bigint;
    } | {
        oneofKind: "targetCpaScalingModifier";
        /**
         * The simulated scaling modifier upon which projected metrics are based.
         * All CPA targets relevant to the simulated entity are scaled by this
         * modifier.
         *
         * @generated from protobuf field: double target_cpa_scaling_modifier = 18;
         */
        targetCpaScalingModifier: number;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Projected metrics for a specific target ROAS amount.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.TargetRoasSimulationPoint
 */
export interface TargetRoasSimulationPoint {
    /**
     * The simulated target ROAS upon which projected metrics are based.
     *
     * @generated from protobuf field: optional double target_roas = 8;
     */
    targetRoas?: number;
    /**
     * Projected required daily budget that the advertiser must set in order to
     * receive the estimated traffic, in micros of advertiser currency.
     *
     * @generated from protobuf field: int64 required_budget_amount_micros = 15;
     */
    requiredBudgetAmountMicros: bigint;
    /**
     * Projected number of biddable conversions.
     *
     * @generated from protobuf field: optional double biddable_conversions = 9;
     */
    biddableConversions?: number;
    /**
     * Projected total value of biddable conversions.
     *
     * @generated from protobuf field: optional double biddable_conversions_value = 10;
     */
    biddableConversionsValue?: number;
    /**
     * Projected number of clicks.
     *
     * @generated from protobuf field: optional int64 clicks = 11;
     */
    clicks?: bigint;
    /**
     * Projected cost in micros.
     *
     * @generated from protobuf field: optional int64 cost_micros = 12;
     */
    costMicros?: bigint;
    /**
     * Projected number of impressions.
     *
     * @generated from protobuf field: optional int64 impressions = 13;
     */
    impressions?: bigint;
    /**
     * Projected number of top slot impressions.
     * Only Search advertising channel type supports this field.
     *
     * @generated from protobuf field: optional int64 top_slot_impressions = 14;
     */
    topSlotImpressions?: bigint;
}
/**
 * Projected metrics for a specific percent CPC amount. Only Hotel advertising
 * channel type supports this field.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.PercentCpcBidSimulationPoint
 */
export interface PercentCpcBidSimulationPoint {
    /**
     * The simulated percent CPC upon which projected metrics are based. Percent
     * CPC expressed as fraction of the advertised price for some good or service.
     * The value stored here is 1,000,000 * [fraction].
     *
     * @generated from protobuf field: optional int64 percent_cpc_bid_micros = 1;
     */
    percentCpcBidMicros?: bigint;
    /**
     * Projected number of biddable conversions.
     *
     * @generated from protobuf field: optional double biddable_conversions = 2;
     */
    biddableConversions?: number;
    /**
     * Projected total value of biddable conversions in local currency.
     *
     * @generated from protobuf field: optional double biddable_conversions_value = 3;
     */
    biddableConversionsValue?: number;
    /**
     * Projected number of clicks.
     *
     * @generated from protobuf field: optional int64 clicks = 4;
     */
    clicks?: bigint;
    /**
     * Projected cost in micros.
     *
     * @generated from protobuf field: optional int64 cost_micros = 5;
     */
    costMicros?: bigint;
    /**
     * Projected number of impressions.
     *
     * @generated from protobuf field: optional int64 impressions = 6;
     */
    impressions?: bigint;
    /**
     * Projected number of top slot impressions.
     *
     * @generated from protobuf field: optional int64 top_slot_impressions = 7;
     */
    topSlotImpressions?: bigint;
}
/**
 * Projected metrics for a specific budget amount.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.BudgetSimulationPoint
 */
export interface BudgetSimulationPoint {
    /**
     * The simulated budget upon which projected metrics are based.
     *
     * @generated from protobuf field: int64 budget_amount_micros = 1;
     */
    budgetAmountMicros: bigint;
    /**
     * Projected required daily cpc bid ceiling that the advertiser must set to
     * realize this simulation, in micros of the advertiser currency.
     * Only campaigns with the Target Spend bidding strategy support this field.
     *
     * @generated from protobuf field: int64 required_cpc_bid_ceiling_micros = 2;
     */
    requiredCpcBidCeilingMicros: bigint;
    /**
     * Projected number of biddable conversions.
     *
     * @generated from protobuf field: double biddable_conversions = 3;
     */
    biddableConversions: number;
    /**
     * Projected total value of biddable conversions.
     *
     * @generated from protobuf field: double biddable_conversions_value = 4;
     */
    biddableConversionsValue: number;
    /**
     * Projected number of clicks.
     *
     * @generated from protobuf field: int64 clicks = 5;
     */
    clicks: bigint;
    /**
     * Projected cost in micros.
     *
     * @generated from protobuf field: int64 cost_micros = 6;
     */
    costMicros: bigint;
    /**
     * Projected number of impressions.
     *
     * @generated from protobuf field: int64 impressions = 7;
     */
    impressions: bigint;
    /**
     * Projected number of top slot impressions.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: int64 top_slot_impressions = 8;
     */
    topSlotImpressions: bigint;
}
/**
 * Projected metrics for a specific target impression share value.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.TargetImpressionShareSimulationPoint
 */
export interface TargetImpressionShareSimulationPoint {
    /**
     * The simulated target impression share value (in micros) upon which
     * projected metrics are based.
     * For example, 10% impression share, which is equal to 0.1, is stored as
     * 100_000. This value is validated and will not exceed 1M (100%).
     *
     * @generated from protobuf field: int64 target_impression_share_micros = 1;
     */
    targetImpressionShareMicros: bigint;
    /**
     * Projected required daily cpc bid ceiling that the advertiser must set to
     * realize this simulation, in micros of the advertiser currency.
     *
     * @generated from protobuf field: int64 required_cpc_bid_ceiling_micros = 2;
     */
    requiredCpcBidCeilingMicros: bigint;
    /**
     * Projected required daily budget that the advertiser must set in order to
     * receive the estimated traffic, in micros of advertiser currency.
     *
     * @generated from protobuf field: int64 required_budget_amount_micros = 3;
     */
    requiredBudgetAmountMicros: bigint;
    /**
     * Projected number of biddable conversions.
     *
     * @generated from protobuf field: double biddable_conversions = 4;
     */
    biddableConversions: number;
    /**
     * Projected total value of biddable conversions.
     *
     * @generated from protobuf field: double biddable_conversions_value = 5;
     */
    biddableConversionsValue: number;
    /**
     * Projected number of clicks.
     *
     * @generated from protobuf field: int64 clicks = 6;
     */
    clicks: bigint;
    /**
     * Projected cost in micros.
     *
     * @generated from protobuf field: int64 cost_micros = 7;
     */
    costMicros: bigint;
    /**
     * Projected number of impressions.
     *
     * @generated from protobuf field: int64 impressions = 8;
     */
    impressions: bigint;
    /**
     * Projected number of top slot impressions.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: int64 top_slot_impressions = 9;
     */
    topSlotImpressions: bigint;
    /**
     * Projected number of absolute top impressions.
     * Only search advertising channel type supports this field.
     *
     * @generated from protobuf field: int64 absolute_top_impressions = 10;
     */
    absoluteTopImpressions: bigint;
}
// @generated message type with reflection information, may provide speed optimized methods
class BidModifierSimulationPointList$Type extends MessageType<BidModifierSimulationPointList> {
    constructor() {
        super("google.ads.googleads.v11.common.BidModifierSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BidModifierSimulationPoint }
        ]);
    }
    create(value?: PartialMessage<BidModifierSimulationPointList>): BidModifierSimulationPointList {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BidModifierSimulationPointList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BidModifierSimulationPointList): BidModifierSimulationPointList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.BidModifierSimulationPoint points */ 1:
                    message.points.push(BidModifierSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BidModifierSimulationPointList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.BidModifierSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            BidModifierSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.BidModifierSimulationPointList
 */
export const BidModifierSimulationPointList = new BidModifierSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CpcBidSimulationPointList$Type extends MessageType<CpcBidSimulationPointList> {
    constructor() {
        super("google.ads.googleads.v11.common.CpcBidSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CpcBidSimulationPoint }
        ]);
    }
    create(value?: PartialMessage<CpcBidSimulationPointList>): CpcBidSimulationPointList {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CpcBidSimulationPointList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CpcBidSimulationPointList): CpcBidSimulationPointList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.CpcBidSimulationPoint points */ 1:
                    message.points.push(CpcBidSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CpcBidSimulationPointList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.CpcBidSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            CpcBidSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CpcBidSimulationPointList
 */
export const CpcBidSimulationPointList = new CpcBidSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CpvBidSimulationPointList$Type extends MessageType<CpvBidSimulationPointList> {
    constructor() {
        super("google.ads.googleads.v11.common.CpvBidSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CpvBidSimulationPoint }
        ]);
    }
    create(value?: PartialMessage<CpvBidSimulationPointList>): CpvBidSimulationPointList {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CpvBidSimulationPointList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CpvBidSimulationPointList): CpvBidSimulationPointList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.CpvBidSimulationPoint points */ 1:
                    message.points.push(CpvBidSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CpvBidSimulationPointList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.CpvBidSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            CpvBidSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CpvBidSimulationPointList
 */
export const CpvBidSimulationPointList = new CpvBidSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetCpaSimulationPointList$Type extends MessageType<TargetCpaSimulationPointList> {
    constructor() {
        super("google.ads.googleads.v11.common.TargetCpaSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TargetCpaSimulationPoint }
        ]);
    }
    create(value?: PartialMessage<TargetCpaSimulationPointList>): TargetCpaSimulationPointList {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TargetCpaSimulationPointList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TargetCpaSimulationPointList): TargetCpaSimulationPointList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.TargetCpaSimulationPoint points */ 1:
                    message.points.push(TargetCpaSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TargetCpaSimulationPointList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.TargetCpaSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            TargetCpaSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetCpaSimulationPointList
 */
export const TargetCpaSimulationPointList = new TargetCpaSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetRoasSimulationPointList$Type extends MessageType<TargetRoasSimulationPointList> {
    constructor() {
        super("google.ads.googleads.v11.common.TargetRoasSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TargetRoasSimulationPoint }
        ]);
    }
    create(value?: PartialMessage<TargetRoasSimulationPointList>): TargetRoasSimulationPointList {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TargetRoasSimulationPointList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TargetRoasSimulationPointList): TargetRoasSimulationPointList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.TargetRoasSimulationPoint points */ 1:
                    message.points.push(TargetRoasSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TargetRoasSimulationPointList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.TargetRoasSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            TargetRoasSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetRoasSimulationPointList
 */
export const TargetRoasSimulationPointList = new TargetRoasSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PercentCpcBidSimulationPointList$Type extends MessageType<PercentCpcBidSimulationPointList> {
    constructor() {
        super("google.ads.googleads.v11.common.PercentCpcBidSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PercentCpcBidSimulationPoint }
        ]);
    }
    create(value?: PartialMessage<PercentCpcBidSimulationPointList>): PercentCpcBidSimulationPointList {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PercentCpcBidSimulationPointList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PercentCpcBidSimulationPointList): PercentCpcBidSimulationPointList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.PercentCpcBidSimulationPoint points */ 1:
                    message.points.push(PercentCpcBidSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PercentCpcBidSimulationPointList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.PercentCpcBidSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            PercentCpcBidSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PercentCpcBidSimulationPointList
 */
export const PercentCpcBidSimulationPointList = new PercentCpcBidSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BudgetSimulationPointList$Type extends MessageType<BudgetSimulationPointList> {
    constructor() {
        super("google.ads.googleads.v11.common.BudgetSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BudgetSimulationPoint }
        ]);
    }
    create(value?: PartialMessage<BudgetSimulationPointList>): BudgetSimulationPointList {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BudgetSimulationPointList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BudgetSimulationPointList): BudgetSimulationPointList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.BudgetSimulationPoint points */ 1:
                    message.points.push(BudgetSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BudgetSimulationPointList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.BudgetSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            BudgetSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.BudgetSimulationPointList
 */
export const BudgetSimulationPointList = new BudgetSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetImpressionShareSimulationPointList$Type extends MessageType<TargetImpressionShareSimulationPointList> {
    constructor() {
        super("google.ads.googleads.v11.common.TargetImpressionShareSimulationPointList", [
            { no: 1, name: "points", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TargetImpressionShareSimulationPoint }
        ]);
    }
    create(value?: PartialMessage<TargetImpressionShareSimulationPointList>): TargetImpressionShareSimulationPointList {
        const message = { points: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TargetImpressionShareSimulationPointList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TargetImpressionShareSimulationPointList): TargetImpressionShareSimulationPointList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.TargetImpressionShareSimulationPoint points */ 1:
                    message.points.push(TargetImpressionShareSimulationPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TargetImpressionShareSimulationPointList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.TargetImpressionShareSimulationPoint points = 1; */
        for (let i = 0; i < message.points.length; i++)
            TargetImpressionShareSimulationPoint.internalBinaryWrite(message.points[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetImpressionShareSimulationPointList
 */
export const TargetImpressionShareSimulationPointList = new TargetImpressionShareSimulationPointList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BidModifierSimulationPoint$Type extends MessageType<BidModifierSimulationPoint> {
    constructor() {
        super("google.ads.googleads.v11.common.BidModifierSimulationPoint", [
            { no: 15, name: "bid_modifier", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 16, name: "biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 17, name: "biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 18, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 19, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 20, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 21, name: "top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 22, name: "parent_biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 23, name: "parent_biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 24, name: "parent_clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 25, name: "parent_cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 26, name: "parent_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 27, name: "parent_top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 28, name: "parent_required_budget_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<BidModifierSimulationPoint>): BidModifierSimulationPoint {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BidModifierSimulationPoint>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BidModifierSimulationPoint): BidModifierSimulationPoint {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double bid_modifier */ 15:
                    message.bidModifier = reader.double();
                    break;
                case /* optional double biddable_conversions */ 16:
                    message.biddableConversions = reader.double();
                    break;
                case /* optional double biddable_conversions_value */ 17:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* optional int64 clicks */ 18:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 19:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 20:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 top_slot_impressions */ 21:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                case /* optional double parent_biddable_conversions */ 22:
                    message.parentBiddableConversions = reader.double();
                    break;
                case /* optional double parent_biddable_conversions_value */ 23:
                    message.parentBiddableConversionsValue = reader.double();
                    break;
                case /* optional int64 parent_clicks */ 24:
                    message.parentClicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 parent_cost_micros */ 25:
                    message.parentCostMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 parent_impressions */ 26:
                    message.parentImpressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 parent_top_slot_impressions */ 27:
                    message.parentTopSlotImpressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 parent_required_budget_micros */ 28:
                    message.parentRequiredBudgetMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BidModifierSimulationPoint, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional double bid_modifier = 15; */
        if (message.bidModifier !== undefined)
            writer.tag(15, WireType.Bit64).double(message.bidModifier);
        /* optional double biddable_conversions = 16; */
        if (message.biddableConversions !== undefined)
            writer.tag(16, WireType.Bit64).double(message.biddableConversions);
        /* optional double biddable_conversions_value = 17; */
        if (message.biddableConversionsValue !== undefined)
            writer.tag(17, WireType.Bit64).double(message.biddableConversionsValue);
        /* optional int64 clicks = 18; */
        if (message.clicks !== undefined)
            writer.tag(18, WireType.Varint).int64(message.clicks);
        /* optional int64 cost_micros = 19; */
        if (message.costMicros !== undefined)
            writer.tag(19, WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 20; */
        if (message.impressions !== undefined)
            writer.tag(20, WireType.Varint).int64(message.impressions);
        /* optional int64 top_slot_impressions = 21; */
        if (message.topSlotImpressions !== undefined)
            writer.tag(21, WireType.Varint).int64(message.topSlotImpressions);
        /* optional double parent_biddable_conversions = 22; */
        if (message.parentBiddableConversions !== undefined)
            writer.tag(22, WireType.Bit64).double(message.parentBiddableConversions);
        /* optional double parent_biddable_conversions_value = 23; */
        if (message.parentBiddableConversionsValue !== undefined)
            writer.tag(23, WireType.Bit64).double(message.parentBiddableConversionsValue);
        /* optional int64 parent_clicks = 24; */
        if (message.parentClicks !== undefined)
            writer.tag(24, WireType.Varint).int64(message.parentClicks);
        /* optional int64 parent_cost_micros = 25; */
        if (message.parentCostMicros !== undefined)
            writer.tag(25, WireType.Varint).int64(message.parentCostMicros);
        /* optional int64 parent_impressions = 26; */
        if (message.parentImpressions !== undefined)
            writer.tag(26, WireType.Varint).int64(message.parentImpressions);
        /* optional int64 parent_top_slot_impressions = 27; */
        if (message.parentTopSlotImpressions !== undefined)
            writer.tag(27, WireType.Varint).int64(message.parentTopSlotImpressions);
        /* optional int64 parent_required_budget_micros = 28; */
        if (message.parentRequiredBudgetMicros !== undefined)
            writer.tag(28, WireType.Varint).int64(message.parentRequiredBudgetMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.BidModifierSimulationPoint
 */
export const BidModifierSimulationPoint = new BidModifierSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CpcBidSimulationPoint$Type extends MessageType<CpcBidSimulationPoint> {
    constructor() {
        super("google.ads.googleads.v11.common.CpcBidSimulationPoint", [
            { no: 17, name: "required_budget_amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 10, name: "biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 11, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "cpc_bid_micros", kind: "scalar", oneof: "cpcSimulationKeyValue", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 16, name: "cpc_bid_scaling_modifier", kind: "scalar", oneof: "cpcSimulationKeyValue", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
    create(value?: PartialMessage<CpcBidSimulationPoint>): CpcBidSimulationPoint {
        const message = { requiredBudgetAmountMicros: 0n, cpcSimulationKeyValue: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CpcBidSimulationPoint>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CpcBidSimulationPoint): CpcBidSimulationPoint {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 required_budget_amount_micros */ 17:
                    message.requiredBudgetAmountMicros = reader.int64().toBigInt();
                    break;
                case /* optional double biddable_conversions */ 9:
                    message.biddableConversions = reader.double();
                    break;
                case /* optional double biddable_conversions_value */ 10:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* optional int64 clicks */ 11:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 12:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 13:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 top_slot_impressions */ 14:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                case /* int64 cpc_bid_micros */ 15:
                    message.cpcSimulationKeyValue = {
                        oneofKind: "cpcBidMicros",
                        cpcBidMicros: reader.int64().toBigInt()
                    };
                    break;
                case /* double cpc_bid_scaling_modifier */ 16:
                    message.cpcSimulationKeyValue = {
                        oneofKind: "cpcBidScalingModifier",
                        cpcBidScalingModifier: reader.double()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CpcBidSimulationPoint, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 required_budget_amount_micros = 17; */
        if (message.requiredBudgetAmountMicros !== 0n)
            writer.tag(17, WireType.Varint).int64(message.requiredBudgetAmountMicros);
        /* optional double biddable_conversions = 9; */
        if (message.biddableConversions !== undefined)
            writer.tag(9, WireType.Bit64).double(message.biddableConversions);
        /* optional double biddable_conversions_value = 10; */
        if (message.biddableConversionsValue !== undefined)
            writer.tag(10, WireType.Bit64).double(message.biddableConversionsValue);
        /* optional int64 clicks = 11; */
        if (message.clicks !== undefined)
            writer.tag(11, WireType.Varint).int64(message.clicks);
        /* optional int64 cost_micros = 12; */
        if (message.costMicros !== undefined)
            writer.tag(12, WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 13; */
        if (message.impressions !== undefined)
            writer.tag(13, WireType.Varint).int64(message.impressions);
        /* optional int64 top_slot_impressions = 14; */
        if (message.topSlotImpressions !== undefined)
            writer.tag(14, WireType.Varint).int64(message.topSlotImpressions);
        /* int64 cpc_bid_micros = 15; */
        if (message.cpcSimulationKeyValue.oneofKind === "cpcBidMicros")
            writer.tag(15, WireType.Varint).int64(message.cpcSimulationKeyValue.cpcBidMicros);
        /* double cpc_bid_scaling_modifier = 16; */
        if (message.cpcSimulationKeyValue.oneofKind === "cpcBidScalingModifier")
            writer.tag(16, WireType.Bit64).double(message.cpcSimulationKeyValue.cpcBidScalingModifier);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CpcBidSimulationPoint
 */
export const CpcBidSimulationPoint = new CpcBidSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CpvBidSimulationPoint$Type extends MessageType<CpvBidSimulationPoint> {
    constructor() {
        super("google.ads.googleads.v11.common.CpvBidSimulationPoint", [
            { no: 5, name: "cpv_bid_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "views", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<CpvBidSimulationPoint>): CpvBidSimulationPoint {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CpvBidSimulationPoint>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CpvBidSimulationPoint): CpvBidSimulationPoint {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 cpv_bid_micros */ 5:
                    message.cpvBidMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 6:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 7:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 views */ 8:
                    message.views = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CpvBidSimulationPoint, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 cpv_bid_micros = 5; */
        if (message.cpvBidMicros !== undefined)
            writer.tag(5, WireType.Varint).int64(message.cpvBidMicros);
        /* optional int64 cost_micros = 6; */
        if (message.costMicros !== undefined)
            writer.tag(6, WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 7; */
        if (message.impressions !== undefined)
            writer.tag(7, WireType.Varint).int64(message.impressions);
        /* optional int64 views = 8; */
        if (message.views !== undefined)
            writer.tag(8, WireType.Varint).int64(message.views);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.CpvBidSimulationPoint
 */
export const CpvBidSimulationPoint = new CpvBidSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetCpaSimulationPoint$Type extends MessageType<TargetCpaSimulationPoint> {
    constructor() {
        super("google.ads.googleads.v11.common.TargetCpaSimulationPoint", [
            { no: 19, name: "required_budget_amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 10, name: "biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 15, name: "app_installs", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 16, name: "in_app_actions", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 11, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 17, name: "target_cpa_micros", kind: "scalar", oneof: "targetCpaSimulationKeyValue", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 18, name: "target_cpa_scaling_modifier", kind: "scalar", oneof: "targetCpaSimulationKeyValue", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
    create(value?: PartialMessage<TargetCpaSimulationPoint>): TargetCpaSimulationPoint {
        const message = { requiredBudgetAmountMicros: 0n, appInstalls: 0, inAppActions: 0, targetCpaSimulationKeyValue: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TargetCpaSimulationPoint>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TargetCpaSimulationPoint): TargetCpaSimulationPoint {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 required_budget_amount_micros */ 19:
                    message.requiredBudgetAmountMicros = reader.int64().toBigInt();
                    break;
                case /* optional double biddable_conversions */ 9:
                    message.biddableConversions = reader.double();
                    break;
                case /* optional double biddable_conversions_value */ 10:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* double app_installs */ 15:
                    message.appInstalls = reader.double();
                    break;
                case /* double in_app_actions */ 16:
                    message.inAppActions = reader.double();
                    break;
                case /* optional int64 clicks */ 11:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 12:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 13:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 top_slot_impressions */ 14:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                case /* int64 target_cpa_micros */ 17:
                    message.targetCpaSimulationKeyValue = {
                        oneofKind: "targetCpaMicros",
                        targetCpaMicros: reader.int64().toBigInt()
                    };
                    break;
                case /* double target_cpa_scaling_modifier */ 18:
                    message.targetCpaSimulationKeyValue = {
                        oneofKind: "targetCpaScalingModifier",
                        targetCpaScalingModifier: reader.double()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TargetCpaSimulationPoint, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 required_budget_amount_micros = 19; */
        if (message.requiredBudgetAmountMicros !== 0n)
            writer.tag(19, WireType.Varint).int64(message.requiredBudgetAmountMicros);
        /* optional double biddable_conversions = 9; */
        if (message.biddableConversions !== undefined)
            writer.tag(9, WireType.Bit64).double(message.biddableConversions);
        /* optional double biddable_conversions_value = 10; */
        if (message.biddableConversionsValue !== undefined)
            writer.tag(10, WireType.Bit64).double(message.biddableConversionsValue);
        /* double app_installs = 15; */
        if (message.appInstalls !== 0)
            writer.tag(15, WireType.Bit64).double(message.appInstalls);
        /* double in_app_actions = 16; */
        if (message.inAppActions !== 0)
            writer.tag(16, WireType.Bit64).double(message.inAppActions);
        /* optional int64 clicks = 11; */
        if (message.clicks !== undefined)
            writer.tag(11, WireType.Varint).int64(message.clicks);
        /* optional int64 cost_micros = 12; */
        if (message.costMicros !== undefined)
            writer.tag(12, WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 13; */
        if (message.impressions !== undefined)
            writer.tag(13, WireType.Varint).int64(message.impressions);
        /* optional int64 top_slot_impressions = 14; */
        if (message.topSlotImpressions !== undefined)
            writer.tag(14, WireType.Varint).int64(message.topSlotImpressions);
        /* int64 target_cpa_micros = 17; */
        if (message.targetCpaSimulationKeyValue.oneofKind === "targetCpaMicros")
            writer.tag(17, WireType.Varint).int64(message.targetCpaSimulationKeyValue.targetCpaMicros);
        /* double target_cpa_scaling_modifier = 18; */
        if (message.targetCpaSimulationKeyValue.oneofKind === "targetCpaScalingModifier")
            writer.tag(18, WireType.Bit64).double(message.targetCpaSimulationKeyValue.targetCpaScalingModifier);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetCpaSimulationPoint
 */
export const TargetCpaSimulationPoint = new TargetCpaSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetRoasSimulationPoint$Type extends MessageType<TargetRoasSimulationPoint> {
    constructor() {
        super("google.ads.googleads.v11.common.TargetRoasSimulationPoint", [
            { no: 8, name: "target_roas", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 15, name: "required_budget_amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 10, name: "biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 11, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<TargetRoasSimulationPoint>): TargetRoasSimulationPoint {
        const message = { requiredBudgetAmountMicros: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TargetRoasSimulationPoint>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TargetRoasSimulationPoint): TargetRoasSimulationPoint {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double target_roas */ 8:
                    message.targetRoas = reader.double();
                    break;
                case /* int64 required_budget_amount_micros */ 15:
                    message.requiredBudgetAmountMicros = reader.int64().toBigInt();
                    break;
                case /* optional double biddable_conversions */ 9:
                    message.biddableConversions = reader.double();
                    break;
                case /* optional double biddable_conversions_value */ 10:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* optional int64 clicks */ 11:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 12:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 13:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 top_slot_impressions */ 14:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TargetRoasSimulationPoint, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional double target_roas = 8; */
        if (message.targetRoas !== undefined)
            writer.tag(8, WireType.Bit64).double(message.targetRoas);
        /* int64 required_budget_amount_micros = 15; */
        if (message.requiredBudgetAmountMicros !== 0n)
            writer.tag(15, WireType.Varint).int64(message.requiredBudgetAmountMicros);
        /* optional double biddable_conversions = 9; */
        if (message.biddableConversions !== undefined)
            writer.tag(9, WireType.Bit64).double(message.biddableConversions);
        /* optional double biddable_conversions_value = 10; */
        if (message.biddableConversionsValue !== undefined)
            writer.tag(10, WireType.Bit64).double(message.biddableConversionsValue);
        /* optional int64 clicks = 11; */
        if (message.clicks !== undefined)
            writer.tag(11, WireType.Varint).int64(message.clicks);
        /* optional int64 cost_micros = 12; */
        if (message.costMicros !== undefined)
            writer.tag(12, WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 13; */
        if (message.impressions !== undefined)
            writer.tag(13, WireType.Varint).int64(message.impressions);
        /* optional int64 top_slot_impressions = 14; */
        if (message.topSlotImpressions !== undefined)
            writer.tag(14, WireType.Varint).int64(message.topSlotImpressions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetRoasSimulationPoint
 */
export const TargetRoasSimulationPoint = new TargetRoasSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PercentCpcBidSimulationPoint$Type extends MessageType<PercentCpcBidSimulationPoint> {
    constructor() {
        super("google.ads.googleads.v11.common.PercentCpcBidSimulationPoint", [
            { no: 1, name: "percent_cpc_bid_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "biddable_conversions", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "biddable_conversions_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "clicks", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "cost_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "top_slot_impressions", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<PercentCpcBidSimulationPoint>): PercentCpcBidSimulationPoint {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PercentCpcBidSimulationPoint>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PercentCpcBidSimulationPoint): PercentCpcBidSimulationPoint {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 percent_cpc_bid_micros */ 1:
                    message.percentCpcBidMicros = reader.int64().toBigInt();
                    break;
                case /* optional double biddable_conversions */ 2:
                    message.biddableConversions = reader.double();
                    break;
                case /* optional double biddable_conversions_value */ 3:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* optional int64 clicks */ 4:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* optional int64 cost_micros */ 5:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 impressions */ 6:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* optional int64 top_slot_impressions */ 7:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PercentCpcBidSimulationPoint, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 percent_cpc_bid_micros = 1; */
        if (message.percentCpcBidMicros !== undefined)
            writer.tag(1, WireType.Varint).int64(message.percentCpcBidMicros);
        /* optional double biddable_conversions = 2; */
        if (message.biddableConversions !== undefined)
            writer.tag(2, WireType.Bit64).double(message.biddableConversions);
        /* optional double biddable_conversions_value = 3; */
        if (message.biddableConversionsValue !== undefined)
            writer.tag(3, WireType.Bit64).double(message.biddableConversionsValue);
        /* optional int64 clicks = 4; */
        if (message.clicks !== undefined)
            writer.tag(4, WireType.Varint).int64(message.clicks);
        /* optional int64 cost_micros = 5; */
        if (message.costMicros !== undefined)
            writer.tag(5, WireType.Varint).int64(message.costMicros);
        /* optional int64 impressions = 6; */
        if (message.impressions !== undefined)
            writer.tag(6, WireType.Varint).int64(message.impressions);
        /* optional int64 top_slot_impressions = 7; */
        if (message.topSlotImpressions !== undefined)
            writer.tag(7, WireType.Varint).int64(message.topSlotImpressions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.PercentCpcBidSimulationPoint
 */
export const PercentCpcBidSimulationPoint = new PercentCpcBidSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BudgetSimulationPoint$Type extends MessageType<BudgetSimulationPoint> {
    constructor() {
        super("google.ads.googleads.v11.common.BudgetSimulationPoint", [
            { no: 1, name: "budget_amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "required_cpc_bid_ceiling_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "biddable_conversions", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "biddable_conversions_value", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "clicks", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "cost_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "top_slot_impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<BudgetSimulationPoint>): BudgetSimulationPoint {
        const message = { budgetAmountMicros: 0n, requiredCpcBidCeilingMicros: 0n, biddableConversions: 0, biddableConversionsValue: 0, clicks: 0n, costMicros: 0n, impressions: 0n, topSlotImpressions: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BudgetSimulationPoint>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BudgetSimulationPoint): BudgetSimulationPoint {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 budget_amount_micros */ 1:
                    message.budgetAmountMicros = reader.int64().toBigInt();
                    break;
                case /* int64 required_cpc_bid_ceiling_micros */ 2:
                    message.requiredCpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                case /* double biddable_conversions */ 3:
                    message.biddableConversions = reader.double();
                    break;
                case /* double biddable_conversions_value */ 4:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* int64 clicks */ 5:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* int64 cost_micros */ 6:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* int64 impressions */ 7:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* int64 top_slot_impressions */ 8:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BudgetSimulationPoint, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 budget_amount_micros = 1; */
        if (message.budgetAmountMicros !== 0n)
            writer.tag(1, WireType.Varint).int64(message.budgetAmountMicros);
        /* int64 required_cpc_bid_ceiling_micros = 2; */
        if (message.requiredCpcBidCeilingMicros !== 0n)
            writer.tag(2, WireType.Varint).int64(message.requiredCpcBidCeilingMicros);
        /* double biddable_conversions = 3; */
        if (message.biddableConversions !== 0)
            writer.tag(3, WireType.Bit64).double(message.biddableConversions);
        /* double biddable_conversions_value = 4; */
        if (message.biddableConversionsValue !== 0)
            writer.tag(4, WireType.Bit64).double(message.biddableConversionsValue);
        /* int64 clicks = 5; */
        if (message.clicks !== 0n)
            writer.tag(5, WireType.Varint).int64(message.clicks);
        /* int64 cost_micros = 6; */
        if (message.costMicros !== 0n)
            writer.tag(6, WireType.Varint).int64(message.costMicros);
        /* int64 impressions = 7; */
        if (message.impressions !== 0n)
            writer.tag(7, WireType.Varint).int64(message.impressions);
        /* int64 top_slot_impressions = 8; */
        if (message.topSlotImpressions !== 0n)
            writer.tag(8, WireType.Varint).int64(message.topSlotImpressions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.BudgetSimulationPoint
 */
export const BudgetSimulationPoint = new BudgetSimulationPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetImpressionShareSimulationPoint$Type extends MessageType<TargetImpressionShareSimulationPoint> {
    constructor() {
        super("google.ads.googleads.v11.common.TargetImpressionShareSimulationPoint", [
            { no: 1, name: "target_impression_share_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "required_cpc_bid_ceiling_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "required_budget_amount_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "biddable_conversions", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "biddable_conversions_value", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "clicks", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "cost_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "top_slot_impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "absolute_top_impressions", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<TargetImpressionShareSimulationPoint>): TargetImpressionShareSimulationPoint {
        const message = { targetImpressionShareMicros: 0n, requiredCpcBidCeilingMicros: 0n, requiredBudgetAmountMicros: 0n, biddableConversions: 0, biddableConversionsValue: 0, clicks: 0n, costMicros: 0n, impressions: 0n, topSlotImpressions: 0n, absoluteTopImpressions: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TargetImpressionShareSimulationPoint>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TargetImpressionShareSimulationPoint): TargetImpressionShareSimulationPoint {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 target_impression_share_micros */ 1:
                    message.targetImpressionShareMicros = reader.int64().toBigInt();
                    break;
                case /* int64 required_cpc_bid_ceiling_micros */ 2:
                    message.requiredCpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                case /* int64 required_budget_amount_micros */ 3:
                    message.requiredBudgetAmountMicros = reader.int64().toBigInt();
                    break;
                case /* double biddable_conversions */ 4:
                    message.biddableConversions = reader.double();
                    break;
                case /* double biddable_conversions_value */ 5:
                    message.biddableConversionsValue = reader.double();
                    break;
                case /* int64 clicks */ 6:
                    message.clicks = reader.int64().toBigInt();
                    break;
                case /* int64 cost_micros */ 7:
                    message.costMicros = reader.int64().toBigInt();
                    break;
                case /* int64 impressions */ 8:
                    message.impressions = reader.int64().toBigInt();
                    break;
                case /* int64 top_slot_impressions */ 9:
                    message.topSlotImpressions = reader.int64().toBigInt();
                    break;
                case /* int64 absolute_top_impressions */ 10:
                    message.absoluteTopImpressions = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TargetImpressionShareSimulationPoint, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 target_impression_share_micros = 1; */
        if (message.targetImpressionShareMicros !== 0n)
            writer.tag(1, WireType.Varint).int64(message.targetImpressionShareMicros);
        /* int64 required_cpc_bid_ceiling_micros = 2; */
        if (message.requiredCpcBidCeilingMicros !== 0n)
            writer.tag(2, WireType.Varint).int64(message.requiredCpcBidCeilingMicros);
        /* int64 required_budget_amount_micros = 3; */
        if (message.requiredBudgetAmountMicros !== 0n)
            writer.tag(3, WireType.Varint).int64(message.requiredBudgetAmountMicros);
        /* double biddable_conversions = 4; */
        if (message.biddableConversions !== 0)
            writer.tag(4, WireType.Bit64).double(message.biddableConversions);
        /* double biddable_conversions_value = 5; */
        if (message.biddableConversionsValue !== 0)
            writer.tag(5, WireType.Bit64).double(message.biddableConversionsValue);
        /* int64 clicks = 6; */
        if (message.clicks !== 0n)
            writer.tag(6, WireType.Varint).int64(message.clicks);
        /* int64 cost_micros = 7; */
        if (message.costMicros !== 0n)
            writer.tag(7, WireType.Varint).int64(message.costMicros);
        /* int64 impressions = 8; */
        if (message.impressions !== 0n)
            writer.tag(8, WireType.Varint).int64(message.impressions);
        /* int64 top_slot_impressions = 9; */
        if (message.topSlotImpressions !== 0n)
            writer.tag(9, WireType.Varint).int64(message.topSlotImpressions);
        /* int64 absolute_top_impressions = 10; */
        if (message.absoluteTopImpressions !== 0n)
            writer.tag(10, WireType.Varint).int64(message.absoluteTopImpressions);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetImpressionShareSimulationPoint
 */
export const TargetImpressionShareSimulationPoint = new TargetImpressionShareSimulationPoint$Type();
