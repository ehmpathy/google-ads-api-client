// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/common/targeting_setting.proto" (package "google.ads.googleads.v11.common", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { TargetingDimensionEnum_TargetingDimension } from "../enums/targeting_dimension";
// Proto file describing TargetingSetting

/**
 * Settings for the targeting-related features, at the campaign and ad group
 * levels. For more details about the targeting setting, visit
 * https://support.google.com/google-ads/answer/7365594
 *
 * @generated from protobuf message google.ads.googleads.v11.common.TargetingSetting
 */
export interface TargetingSetting {
    /**
     * The per-targeting-dimension setting to restrict the reach of your campaign
     * or ad group.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.TargetRestriction target_restrictions = 1;
     */
    targetRestrictions: TargetRestriction[];
    /**
     * The list of operations changing the target restrictions.
     *
     * Adding a target restriction with a targeting dimension that already exists
     * causes the existing target restriction to be replaced with the new value.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.TargetRestrictionOperation target_restriction_operations = 2;
     */
    targetRestrictionOperations: TargetRestrictionOperation[];
}
/**
 * The list of per-targeting-dimension targeting settings.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.TargetRestriction
 */
export interface TargetRestriction {
    /**
     * The targeting dimension that these settings apply to.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.TargetingDimensionEnum.TargetingDimension targeting_dimension = 1;
     */
    targetingDimension: TargetingDimensionEnum_TargetingDimension;
    /**
     * Indicates whether to restrict your ads to show only for the criteria you
     * have selected for this targeting_dimension, or to target all values for
     * this targeting_dimension and show ads based on your targeting in other
     * TargetingDimensions. A value of `true` means that these criteria will only
     * apply bid modifiers, and not affect targeting. A value of `false` means
     * that these criteria will restrict targeting as well as applying bid
     * modifiers.
     *
     * @generated from protobuf field: optional bool bid_only = 3;
     */
    bidOnly?: boolean;
}
/**
 * Operation to be performed on a target restriction list in a mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.common.TargetRestrictionOperation
 */
export interface TargetRestrictionOperation {
    /**
     * Type of list operation to perform.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.TargetRestrictionOperation.Operator operator = 1;
     */
    operator: TargetRestrictionOperation_Operator;
    /**
     * The target restriction being added to or removed from the list.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.TargetRestriction value = 2;
     */
    value?: TargetRestriction;
}
/**
 * The operator.
 *
 * @generated from protobuf enum google.ads.googleads.v11.common.TargetRestrictionOperation.Operator
 */
export enum TargetRestrictionOperation_Operator {
    /**
     * Unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * Add the restriction to the existing restrictions.
     *
     * @generated from protobuf enum value: ADD = 2;
     */
    ADD = 2,
    /**
     * Remove the restriction from the existing restrictions.
     *
     * @generated from protobuf enum value: REMOVE = 3;
     */
    REMOVE = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class TargetingSetting$Type extends MessageType<TargetingSetting> {
    constructor() {
        super("google.ads.googleads.v11.common.TargetingSetting", [
            { no: 1, name: "target_restrictions", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TargetRestriction },
            { no: 2, name: "target_restriction_operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TargetRestrictionOperation }
        ]);
    }
    create(value?: PartialMessage<TargetingSetting>): TargetingSetting {
        const message = { targetRestrictions: [], targetRestrictionOperations: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TargetingSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TargetingSetting): TargetingSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.common.TargetRestriction target_restrictions */ 1:
                    message.targetRestrictions.push(TargetRestriction.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.ads.googleads.v11.common.TargetRestrictionOperation target_restriction_operations */ 2:
                    message.targetRestrictionOperations.push(TargetRestrictionOperation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TargetingSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.common.TargetRestriction target_restrictions = 1; */
        for (let i = 0; i < message.targetRestrictions.length; i++)
            TargetRestriction.internalBinaryWrite(message.targetRestrictions[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.common.TargetRestrictionOperation target_restriction_operations = 2; */
        for (let i = 0; i < message.targetRestrictionOperations.length; i++)
            TargetRestrictionOperation.internalBinaryWrite(message.targetRestrictionOperations[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetingSetting
 */
export const TargetingSetting = new TargetingSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetRestriction$Type extends MessageType<TargetRestriction> {
    constructor() {
        super("google.ads.googleads.v11.common.TargetRestriction", [
            { no: 1, name: "targeting_dimension", kind: "enum", T: () => ["google.ads.googleads.v11.enums.TargetingDimensionEnum.TargetingDimension", TargetingDimensionEnum_TargetingDimension] },
            { no: 3, name: "bid_only", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<TargetRestriction>): TargetRestriction {
        const message = { targetingDimension: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TargetRestriction>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TargetRestriction): TargetRestriction {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.TargetingDimensionEnum.TargetingDimension targeting_dimension */ 1:
                    message.targetingDimension = reader.int32();
                    break;
                case /* optional bool bid_only */ 3:
                    message.bidOnly = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TargetRestriction, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.TargetingDimensionEnum.TargetingDimension targeting_dimension = 1; */
        if (message.targetingDimension !== 0)
            writer.tag(1, WireType.Varint).int32(message.targetingDimension);
        /* optional bool bid_only = 3; */
        if (message.bidOnly !== undefined)
            writer.tag(3, WireType.Varint).bool(message.bidOnly);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetRestriction
 */
export const TargetRestriction = new TargetRestriction$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TargetRestrictionOperation$Type extends MessageType<TargetRestrictionOperation> {
    constructor() {
        super("google.ads.googleads.v11.common.TargetRestrictionOperation", [
            { no: 1, name: "operator", kind: "enum", T: () => ["google.ads.googleads.v11.common.TargetRestrictionOperation.Operator", TargetRestrictionOperation_Operator] },
            { no: 2, name: "value", kind: "message", T: () => TargetRestriction }
        ]);
    }
    create(value?: PartialMessage<TargetRestrictionOperation>): TargetRestrictionOperation {
        const message = { operator: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TargetRestrictionOperation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TargetRestrictionOperation): TargetRestrictionOperation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.common.TargetRestrictionOperation.Operator operator */ 1:
                    message.operator = reader.int32();
                    break;
                case /* google.ads.googleads.v11.common.TargetRestriction value */ 2:
                    message.value = TargetRestriction.internalBinaryRead(reader, reader.uint32(), options, message.value);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TargetRestrictionOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.common.TargetRestrictionOperation.Operator operator = 1; */
        if (message.operator !== 0)
            writer.tag(1, WireType.Varint).int32(message.operator);
        /* google.ads.googleads.v11.common.TargetRestriction value = 2; */
        if (message.value)
            TargetRestriction.internalBinaryWrite(message.value, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.common.TargetRestrictionOperation
 */
export const TargetRestrictionOperation = new TargetRestrictionOperation$Type();
