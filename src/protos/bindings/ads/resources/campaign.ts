// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/campaign.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { OptimizationGoalTypeEnum_OptimizationGoalType } from "../enums/optimization_goal_type";
import { VanityPharmaTextEnum_VanityPharmaText } from "../enums/vanity_pharma_text";
import { VanityPharmaDisplayUrlModeEnum_VanityPharmaDisplayUrlMode } from "../enums/vanity_pharma_display_url_mode";
import { AppCampaignAppStoreEnum_AppCampaignAppStore } from "../enums/app_campaign_app_store";
import { AppCampaignBiddingStrategyGoalTypeEnum_AppCampaignBiddingStrategyGoalType } from "../enums/app_campaign_bidding_strategy_goal_type";
import { LocationSourceTypeEnum_LocationSourceType } from "../enums/location_source_type";
import { NegativeGeoTargetTypeEnum_NegativeGeoTargetType } from "../enums/negative_geo_target_type";
import { PositiveGeoTargetTypeEnum_PositiveGeoTargetType } from "../enums/positive_geo_target_type";
import { PerformanceMaxUpgradeStatusEnum_PerformanceMaxUpgradeStatus } from "../enums/performance_max_upgrade_status";
import { TargetCpm } from "../common/bidding";
import { PercentCpc } from "../common/bidding";
import { TargetSpend } from "../common/bidding";
import { TargetRoas } from "../common/bidding";
import { TargetImpressionShare } from "../common/bidding";
import { TargetCpa } from "../common/bidding";
import { MaximizeConversionValue } from "../common/bidding";
import { MaximizeConversions } from "../common/bidding";
import { ManualCpv } from "../common/bidding";
import { ManualCpm } from "../common/bidding";
import { ManualCpc } from "../common/bidding";
import { ManualCpa } from "../common/bidding";
import { Commission } from "../common/bidding";
import { AssetFieldTypeEnum_AssetFieldType } from "../enums/asset_field_type";
import { PaymentModeEnum_PaymentMode } from "../enums/payment_mode";
import { BrandSafetySuitabilityEnum_BrandSafetySuitability } from "../enums/brand_safety_suitability";
import { FrequencyCapEntry } from "../common/frequency_cap";
import { BiddingStrategyTypeEnum_BiddingStrategyType } from "../enums/bidding_strategy_type";
import { CampaignExperimentTypeEnum_CampaignExperimentType } from "../enums/campaign_experiment_type";
import { TargetingSetting } from "../common/targeting_setting";
import { RealTimeBiddingSetting } from "../common/real_time_bidding_setting";
import { CustomParameter } from "../common/custom_parameter";
import { AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType } from "../enums/advertising_channel_sub_type";
import { AdvertisingChannelTypeEnum_AdvertisingChannelType } from "../enums/advertising_channel_type";
import { AdServingOptimizationStatusEnum_AdServingOptimizationStatus } from "../enums/ad_serving_optimization_status";
import { BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus } from "../enums/bidding_strategy_system_status";
import { CampaignServingStatusEnum_CampaignServingStatus } from "../enums/campaign_serving_status";
import { CampaignStatusEnum_CampaignStatus } from "../enums/campaign_status";
// Proto file describing the Campaign resource.

/**
 * A campaign.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign
 */
export interface Campaign {
    /**
     * Immutable. The resource name of the campaign.
     * Campaign resource names have the form:
     *
     * `customers/{customer_id}/campaigns/{campaign_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. The ID of the campaign.
     *
     * @generated from protobuf field: optional int64 id = 59;
     */
    id?: bigint;
    /**
     * The name of the campaign.
     *
     * This field is required and should not be empty when creating new
     * campaigns.
     *
     * It must not contain any null (code point 0x0), NL line feed
     * (code point 0xA) or carriage return (code point 0xD) characters.
     *
     * @generated from protobuf field: optional string name = 58;
     */
    name?: string;
    /**
     * The status of the campaign.
     *
     * When a new campaign is added, the status defaults to ENABLED.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.CampaignStatusEnum.CampaignStatus status = 5;
     */
    status: CampaignStatusEnum_CampaignStatus;
    /**
     * Output only. The ad serving status of the campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.CampaignServingStatusEnum.CampaignServingStatus serving_status = 21;
     */
    servingStatus: CampaignServingStatusEnum_CampaignServingStatus;
    /**
     * Output only. The system status of the campaign's bidding strategy.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.BiddingStrategySystemStatusEnum.BiddingStrategySystemStatus bidding_strategy_system_status = 78;
     */
    biddingStrategySystemStatus: BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus;
    /**
     * The ad serving optimization status of the campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AdServingOptimizationStatusEnum.AdServingOptimizationStatus ad_serving_optimization_status = 8;
     */
    adServingOptimizationStatus: AdServingOptimizationStatusEnum_AdServingOptimizationStatus;
    /**
     * Immutable. The primary serving target for ads within the campaign.
     * The targeting options can be refined in `network_settings`.
     *
     * This field is required and should not be empty when creating new
     * campaigns.
     *
     * Can be set only when creating campaigns.
     * After the campaign is created, the field can not be changed.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType advertising_channel_type = 9;
     */
    advertisingChannelType: AdvertisingChannelTypeEnum_AdvertisingChannelType;
    /**
     * Immutable. Optional refinement to `advertising_channel_type`.
     * Must be a valid sub-type of the parent channel type.
     *
     * Can be set only when creating campaigns.
     * After campaign is created, the field can not be changed.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType advertising_channel_sub_type = 10;
     */
    advertisingChannelSubType: AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType;
    /**
     * The URL template for constructing a tracking URL.
     *
     * @generated from protobuf field: optional string tracking_url_template = 60;
     */
    trackingUrlTemplate?: string;
    /**
     * The list of mappings used to substitute custom parameter tags in a
     * `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.CustomParameter url_custom_parameters = 12;
     */
    urlCustomParameters: CustomParameter[];
    /**
     * The Local Services Campaign related settings.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.LocalServicesCampaignSettings local_services_campaign_settings = 75;
     */
    localServicesCampaignSettings?: Campaign_LocalServicesCampaignSettings;
    /**
     * Settings for Real-Time Bidding, a feature only available for campaigns
     * targeting the Ad Exchange network.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.RealTimeBiddingSetting real_time_bidding_setting = 39;
     */
    realTimeBiddingSetting?: RealTimeBiddingSetting;
    /**
     * The network settings for the campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.NetworkSettings network_settings = 14;
     */
    networkSettings?: Campaign_NetworkSettings;
    /**
     * Immutable. The hotel setting for the campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.HotelSettingInfo hotel_setting = 32;
     */
    hotelSetting?: Campaign_HotelSettingInfo;
    /**
     * The setting for controlling Dynamic Search Ads (DSA).
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.DynamicSearchAdsSetting dynamic_search_ads_setting = 33;
     */
    dynamicSearchAdsSetting?: Campaign_DynamicSearchAdsSetting;
    /**
     * The setting for controlling Shopping campaigns.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.ShoppingSetting shopping_setting = 36;
     */
    shoppingSetting?: Campaign_ShoppingSetting;
    /**
     * Setting for targeting related features.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.TargetingSetting targeting_setting = 43;
     */
    targetingSetting?: TargetingSetting;
    /**
     * Immutable. Setting for audience related features.
     *
     * @generated from protobuf field: optional google.ads.googleads.v11.resources.Campaign.AudienceSetting audience_setting = 73;
     */
    audienceSetting?: Campaign_AudienceSetting;
    /**
     * The setting for ads geotargeting.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.GeoTargetTypeSetting geo_target_type_setting = 47;
     */
    geoTargetTypeSetting?: Campaign_GeoTargetTypeSetting;
    /**
     * The setting for local campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.LocalCampaignSetting local_campaign_setting = 50;
     */
    localCampaignSetting?: Campaign_LocalCampaignSetting;
    /**
     * The setting related to App Campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.AppCampaignSetting app_campaign_setting = 51;
     */
    appCampaignSetting?: Campaign_AppCampaignSetting;
    /**
     * Output only. The resource names of labels attached to this campaign.
     *
     * @generated from protobuf field: repeated string labels = 61;
     */
    labels: string[];
    /**
     * Output only. The type of campaign: normal, draft, or experiment.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.CampaignExperimentTypeEnum.CampaignExperimentType experiment_type = 17;
     */
    experimentType: CampaignExperimentTypeEnum_CampaignExperimentType;
    /**
     * Output only. The resource name of the base campaign of a draft or experiment campaign.
     * For base campaigns, this is equal to `resource_name`.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: optional string base_campaign = 56;
     */
    baseCampaign?: string;
    /**
     * The budget of the campaign.
     *
     * @generated from protobuf field: optional string campaign_budget = 62;
     */
    campaignBudget?: string;
    /**
     * Output only. The type of bidding strategy.
     *
     * A bidding strategy can be created by setting either the bidding scheme to
     * create a standard bidding strategy or the `bidding_strategy` field to
     * create a portfolio bidding strategy.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType bidding_strategy_type = 22;
     */
    biddingStrategyType: BiddingStrategyTypeEnum_BiddingStrategyType;
    /**
     * Output only. Resource name of AccessibleBiddingStrategy, a read-only view of the
     * unrestricted attributes of the attached portfolio bidding
     * strategy identified by 'bidding_strategy'. Empty, if the campaign does not
     * use a portfolio strategy.
     * Unrestricted strategy attributes are available to all customers
     * with whom the strategy is shared and are read from the
     * AccessibleBiddingStrategy resource. In contrast, restricted attributes are
     * only available to the owner customer of the strategy and their managers.
     * Restricted attributes can only be read from the BiddingStrategy resource.
     *
     * @generated from protobuf field: string accessible_bidding_strategy = 71;
     */
    accessibleBiddingStrategy: string;
    /**
     * The date when campaign started in serving customer's timezone in YYYY-MM-DD
     * format.
     *
     * @generated from protobuf field: optional string start_date = 63;
     */
    startDate?: string;
    /**
     * The campaign group this campaign belongs to.
     *
     * @generated from protobuf field: optional string campaign_group = 76;
     */
    campaignGroup?: string;
    /**
     * The last day of the campaign in serving customer's timezone in YYYY-MM-DD
     * format.
     *
     * @generated from protobuf field: optional string end_date = 64;
     */
    endDate?: string;
    /**
     * Suffix used to append query parameters to landing pages that are served
     * with parallel tracking.
     *
     * @generated from protobuf field: optional string final_url_suffix = 65;
     */
    finalUrlSuffix?: string;
    /**
     * A list that limits how often each user will see this campaign's ads.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.FrequencyCapEntry frequency_caps = 40;
     */
    frequencyCaps: FrequencyCapEntry[];
    /**
     * Output only. 3-Tier Brand Safety setting for the campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.BrandSafetySuitabilityEnum.BrandSafetySuitability video_brand_safety_suitability = 42;
     */
    videoBrandSafetySuitability: BrandSafetySuitabilityEnum_BrandSafetySuitability;
    /**
     * Describes how unbranded pharma ads will be displayed.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.VanityPharma vanity_pharma = 44;
     */
    vanityPharma?: Campaign_VanityPharma;
    /**
     * Selective optimization setting for this campaign, which includes a set of
     * conversion actions to optimize this campaign towards.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.SelectiveOptimization selective_optimization = 45;
     */
    selectiveOptimization?: Campaign_SelectiveOptimization;
    /**
     * Optimization goal setting for this campaign, which includes a set of
     * optimization goal types.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.OptimizationGoalSetting optimization_goal_setting = 54;
     */
    optimizationGoalSetting?: Campaign_OptimizationGoalSetting;
    /**
     * Output only. Campaign-level settings for tracking information.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.TrackingSetting tracking_setting = 46;
     */
    trackingSetting?: Campaign_TrackingSetting;
    /**
     * Payment mode for the campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.PaymentModeEnum.PaymentMode payment_mode = 52;
     */
    paymentMode: PaymentModeEnum_PaymentMode;
    /**
     * Output only. Optimization score of the campaign.
     *
     * Optimization score is an estimate of how well a campaign is set to perform.
     * It ranges from 0% (0.0) to 100% (1.0), with 100% indicating that the
     * campaign is performing at full potential. This field is null for unscored
     * campaigns.
     *
     * See "About optimization score" at
     * https://support.google.com/google-ads/answer/9061546.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: optional double optimization_score = 66;
     */
    optimizationScore?: number;
    /**
     * The asset field types that should be excluded from this campaign. Asset
     * links with these field types will not be inherited by this campaign from
     * the upper level.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.enums.AssetFieldTypeEnum.AssetFieldType excluded_parent_asset_field_types = 69;
     */
    excludedParentAssetFieldTypes: AssetFieldTypeEnum_AssetFieldType[];
    /**
     * Represents opting out of URL expansion to more targeted URLs. If opted out
     * (true), only the final URLs in the asset group or URLs specified in the
     * advertiser's Google Merchant Center or business data feeds are targeted.
     * If opted in (false), the entire domain will be targeted. This field can
     * only be set for Performance Max campaigns, where the default value is
     * false.
     *
     * @generated from protobuf field: optional bool url_expansion_opt_out = 72;
     */
    urlExpansionOptOut?: boolean;
    /**
     * Output only. Information about campaigns being upgraded to Performance Max.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Campaign.PerformanceMaxUpgrade performance_max_upgrade = 77;
     */
    performanceMaxUpgrade?: Campaign_PerformanceMaxUpgrade;
    /**
     * @generated from protobuf oneof: campaign_bidding_strategy
     */
    campaignBiddingStrategy: {
        oneofKind: "biddingStrategy";
        /**
         * Portfolio bidding strategy used by campaign.
         *
         * @generated from protobuf field: string bidding_strategy = 67;
         */
        biddingStrategy: string;
    } | {
        oneofKind: "commission";
        /**
         * Commission is an automatic bidding strategy in which the advertiser pays
         * a certain portion of the conversion value.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.Commission commission = 49;
         */
        commission: Commission;
    } | {
        oneofKind: "manualCpa";
        /**
         * Standard Manual CPA bidding strategy.
         * Manual bidding strategy that allows advertiser to set the bid per
         * advertiser-specified action. Supported only for Local Services campaigns.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.ManualCpa manual_cpa = 74;
         */
        manualCpa: ManualCpa;
    } | {
        oneofKind: "manualCpc";
        /**
         * Standard Manual CPC bidding strategy.
         * Manual click-based bidding where user pays per click.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.ManualCpc manual_cpc = 24;
         */
        manualCpc: ManualCpc;
    } | {
        oneofKind: "manualCpm";
        /**
         * Standard Manual CPM bidding strategy.
         * Manual impression-based bidding where user pays per thousand
         * impressions.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.ManualCpm manual_cpm = 25;
         */
        manualCpm: ManualCpm;
    } | {
        oneofKind: "manualCpv";
        /**
         * Output only. A bidding strategy that pays a configurable amount per video view.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.ManualCpv manual_cpv = 37;
         */
        manualCpv: ManualCpv;
    } | {
        oneofKind: "maximizeConversions";
        /**
         * Standard Maximize Conversions bidding strategy that automatically
         * maximizes number of conversions while spending your budget.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.MaximizeConversions maximize_conversions = 30;
         */
        maximizeConversions: MaximizeConversions;
    } | {
        oneofKind: "maximizeConversionValue";
        /**
         * Standard Maximize Conversion Value bidding strategy that automatically
         * sets bids to maximize revenue while spending your budget.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.MaximizeConversionValue maximize_conversion_value = 31;
         */
        maximizeConversionValue: MaximizeConversionValue;
    } | {
        oneofKind: "targetCpa";
        /**
         * Standard Target CPA bidding strategy that automatically sets bids to
         * help get as many conversions as possible at the target
         * cost-per-acquisition (CPA) you set.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.TargetCpa target_cpa = 26;
         */
        targetCpa: TargetCpa;
    } | {
        oneofKind: "targetImpressionShare";
        /**
         * Target Impression Share bidding strategy. An automated bidding strategy
         * that sets bids to achieve a chosen percentage of impressions.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.TargetImpressionShare target_impression_share = 48;
         */
        targetImpressionShare: TargetImpressionShare;
    } | {
        oneofKind: "targetRoas";
        /**
         * Standard Target ROAS bidding strategy that automatically maximizes
         * revenue while averaging a specific target return on ad spend (ROAS).
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.TargetRoas target_roas = 29;
         */
        targetRoas: TargetRoas;
    } | {
        oneofKind: "targetSpend";
        /**
         * Standard Target Spend bidding strategy that automatically sets your bids
         * to help get as many clicks as possible within your budget.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.TargetSpend target_spend = 27;
         */
        targetSpend: TargetSpend;
    } | {
        oneofKind: "percentCpc";
        /**
         * Standard Percent Cpc bidding strategy where bids are a fraction of the
         * advertised price for some good or service.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.PercentCpc percent_cpc = 34;
         */
        percentCpc: PercentCpc;
    } | {
        oneofKind: "targetCpm";
        /**
         * A bidding strategy that automatically optimizes cost per thousand
         * impressions.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.TargetCpm target_cpm = 41;
         */
        targetCpm: TargetCpm;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Information about a campaign being upgraded to Performance Max.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.PerformanceMaxUpgrade
 */
export interface Campaign_PerformanceMaxUpgrade {
    /**
     * Output only. Indicates which Performance Max campaign the campaign is upgraded to.
     *
     * @generated from protobuf field: string performance_max_campaign = 1;
     */
    performanceMaxCampaign: string;
    /**
     * Output only. Indicates legacy campaign upgraded to Performance Max.
     *
     * @generated from protobuf field: string pre_upgrade_campaign = 2;
     */
    preUpgradeCampaign: string;
    /**
     * Output only. The upgrade status of a campaign requested to be upgraded to Performance
     * Max.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.PerformanceMaxUpgradeStatusEnum.PerformanceMaxUpgradeStatus status = 3;
     */
    status: PerformanceMaxUpgradeStatusEnum_PerformanceMaxUpgradeStatus;
}
/**
 * The network settings for the campaign.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.NetworkSettings
 */
export interface Campaign_NetworkSettings {
    /**
     * Whether ads will be served with google.com search results.
     *
     * @generated from protobuf field: optional bool target_google_search = 5;
     */
    targetGoogleSearch?: boolean;
    /**
     * Whether ads will be served on partner sites in the Google Search Network
     * (requires `target_google_search` to also be `true`).
     *
     * @generated from protobuf field: optional bool target_search_network = 6;
     */
    targetSearchNetwork?: boolean;
    /**
     * Whether ads will be served on specified placements in the Google Display
     * Network. Placements are specified using the Placement criterion.
     *
     * @generated from protobuf field: optional bool target_content_network = 7;
     */
    targetContentNetwork?: boolean;
    /**
     * Whether ads will be served on the Google Partner Network.
     * This is available only to some select Google partner accounts.
     *
     * @generated from protobuf field: optional bool target_partner_search_network = 8;
     */
    targetPartnerSearchNetwork?: boolean;
}
/**
 * Campaign-level settings for hotel ads.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.HotelSettingInfo
 */
export interface Campaign_HotelSettingInfo {
    /**
     * Immutable. The linked Hotel Center account.
     *
     * @generated from protobuf field: optional int64 hotel_center_id = 2;
     */
    hotelCenterId?: bigint;
}
/**
 * The setting for controlling Dynamic Search Ads (DSA).
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.DynamicSearchAdsSetting
 */
export interface Campaign_DynamicSearchAdsSetting {
    /**
     * Required. The Internet domain name that this setting represents, for example,
     * "google.com" or "www.google.com".
     *
     * @generated from protobuf field: string domain_name = 6;
     */
    domainName: string;
    /**
     * Required. The language code specifying the language of the domain, for example,
     * "en".
     *
     * @generated from protobuf field: string language_code = 7;
     */
    languageCode: string;
    /**
     * Whether the campaign uses advertiser supplied URLs exclusively.
     *
     * @generated from protobuf field: optional bool use_supplied_urls_only = 8;
     */
    useSuppliedUrlsOnly?: boolean;
    /**
     * The list of page feeds associated with the campaign.
     *
     * @generated from protobuf field: repeated string feeds = 9;
     */
    feeds: string[];
}
/**
 * The setting for Shopping campaigns. Defines the universe of products that
 * can be advertised by the campaign, and how this campaign interacts with
 * other Shopping campaigns.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.ShoppingSetting
 */
export interface Campaign_ShoppingSetting {
    /**
     * Immutable. ID of the Merchant Center account.
     * This field is required for create operations. This field is immutable for
     * Shopping campaigns.
     *
     * @generated from protobuf field: optional int64 merchant_id = 5;
     */
    merchantId?: bigint;
    /**
     * Sales country of products to include in the campaign.
     * Only one of feed_label or sales_country can be set.
     * Field is immutable except for clearing.
     * Once this field is cleared, you must use feed_label if you
     * want to set the sales country.
     *
     * @generated from protobuf field: optional string sales_country = 6;
     */
    salesCountry?: string;
    /**
     * Feed label of products to include in the campaign.
     * Only one of feed_label or sales_country can be set.
     * If used instead of sales_country, the feed_label field accepts country
     * codes in the same format for example: 'XX'.
     * Otherwise can be any string used for feed label in Google Merchant
     * Center.
     *
     * @generated from protobuf field: string feed_label = 10;
     */
    feedLabel: string;
    /**
     * Priority of the campaign. Campaigns with numerically higher priorities
     * take precedence over those with lower priorities.
     * This field is required for Shopping campaigns, with values between 0 and
     * 2, inclusive.
     * This field is optional for Smart Shopping campaigns, but must be equal to
     * 3 if set.
     *
     * @generated from protobuf field: optional int32 campaign_priority = 7;
     */
    campaignPriority?: number;
    /**
     * Whether to include local products.
     *
     * @generated from protobuf field: optional bool enable_local = 8;
     */
    enableLocal?: boolean;
    /**
     * Immutable. Whether to target Vehicle Listing inventory.
     *
     * @generated from protobuf field: bool use_vehicle_inventory = 9;
     */
    useVehicleInventory: boolean;
}
/**
 * Campaign-level settings for tracking information.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.TrackingSetting
 */
export interface Campaign_TrackingSetting {
    /**
     * Output only. The url used for dynamic tracking.
     *
     * @generated from protobuf field: optional string tracking_url = 2;
     */
    trackingUrl?: string;
}
/**
 * Represents a collection of settings related to ads geotargeting.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.GeoTargetTypeSetting
 */
export interface Campaign_GeoTargetTypeSetting {
    /**
     * The setting used for positive geotargeting in this particular campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.PositiveGeoTargetTypeEnum.PositiveGeoTargetType positive_geo_target_type = 1;
     */
    positiveGeoTargetType: PositiveGeoTargetTypeEnum_PositiveGeoTargetType;
    /**
     * The setting used for negative geotargeting in this particular campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.NegativeGeoTargetTypeEnum.NegativeGeoTargetType negative_geo_target_type = 2;
     */
    negativeGeoTargetType: NegativeGeoTargetTypeEnum_NegativeGeoTargetType;
}
/**
 * Campaign setting for local campaigns.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.LocalCampaignSetting
 */
export interface Campaign_LocalCampaignSetting {
    /**
     * The location source type for this local campaign.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.LocationSourceTypeEnum.LocationSourceType location_source_type = 1;
     */
    locationSourceType: LocationSourceTypeEnum_LocationSourceType;
}
/**
 * Campaign-level settings for App Campaigns.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.AppCampaignSetting
 */
export interface Campaign_AppCampaignSetting {
    /**
     * Represents the goal which the bidding strategy of this app campaign
     * should optimize towards.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AppCampaignBiddingStrategyGoalTypeEnum.AppCampaignBiddingStrategyGoalType bidding_strategy_goal_type = 1;
     */
    biddingStrategyGoalType: AppCampaignBiddingStrategyGoalTypeEnum_AppCampaignBiddingStrategyGoalType;
    /**
     * Immutable. A string that uniquely identifies a mobile application.
     *
     * @generated from protobuf field: optional string app_id = 4;
     */
    appId?: string;
    /**
     * Immutable. The application store that distributes this specific app.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AppCampaignAppStoreEnum.AppCampaignAppStore app_store = 3;
     */
    appStore: AppCampaignAppStoreEnum_AppCampaignAppStore;
}
/**
 * Describes how unbranded pharma ads will be displayed.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.VanityPharma
 */
export interface Campaign_VanityPharma {
    /**
     * The display mode for vanity pharma URLs.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.VanityPharmaDisplayUrlModeEnum.VanityPharmaDisplayUrlMode vanity_pharma_display_url_mode = 1;
     */
    vanityPharmaDisplayUrlMode: VanityPharmaDisplayUrlModeEnum_VanityPharmaDisplayUrlMode;
    /**
     * The text that will be displayed in display URL of the text ad when
     * website description is the selected display mode for vanity pharma URLs.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.VanityPharmaTextEnum.VanityPharmaText vanity_pharma_text = 2;
     */
    vanityPharmaText: VanityPharmaTextEnum_VanityPharmaText;
}
/**
 * Selective optimization setting for this campaign, which includes a set of
 * conversion actions to optimize this campaign towards.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.SelectiveOptimization
 */
export interface Campaign_SelectiveOptimization {
    /**
     * The selected set of conversion actions for optimizing this campaign.
     *
     * @generated from protobuf field: repeated string conversion_actions = 2;
     */
    conversionActions: string[];
}
/**
 * Optimization goal setting for this campaign, which includes a set of
 * optimization goal types.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.OptimizationGoalSetting
 */
export interface Campaign_OptimizationGoalSetting {
    /**
     * The list of optimization goal types.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.enums.OptimizationGoalTypeEnum.OptimizationGoalType optimization_goal_types = 1;
     */
    optimizationGoalTypes: OptimizationGoalTypeEnum_OptimizationGoalType[];
}
/**
 * Settings for the audience targeting.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.AudienceSetting
 */
export interface Campaign_AudienceSetting {
    /**
     * Immutable. If true, this campaign uses an Audience resource for audience targeting.
     * If false, this campaign may use audience segment criteria instead.
     *
     * @generated from protobuf field: optional bool use_audience_grouped = 1;
     */
    useAudienceGrouped?: boolean;
}
/**
 * Settings for LocalServicesCampaign subresource.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.LocalServicesCampaignSettings
 */
export interface Campaign_LocalServicesCampaignSettings {
    /**
     * Categorical level bids associated with MANUAL_CPA bidding strategy.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.resources.Campaign.CategoryBid category_bids = 1;
     */
    categoryBids: Campaign_CategoryBid[];
}
/**
 * Category bids in LocalServicesReportingCampaignSettings.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Campaign.CategoryBid
 */
export interface Campaign_CategoryBid {
    /**
     * Category for which the bid will be associated with. For example,
     * xcat:service_area_business_plumber.
     *
     * @generated from protobuf field: optional string category_id = 1;
     */
    categoryId?: string;
    /**
     * Manual CPA bid for the category. Bid must be greater than the
     * reserve price associated for that category. Value is in micros
     * and in the advertiser's currency.
     *
     * @generated from protobuf field: optional int64 manual_cpa_bid_micros = 2;
     */
    manualCpaBidMicros?: bigint;
}
// @generated message type with reflection information, may provide speed optimized methods
class Campaign$Type extends MessageType<Campaign> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/Campaign" } } },
            { no: 59, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 58, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.CampaignStatusEnum.CampaignStatus", CampaignStatusEnum_CampaignStatus] },
            { no: 21, name: "serving_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.CampaignServingStatusEnum.CampaignServingStatus", CampaignServingStatusEnum_CampaignServingStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 78, name: "bidding_strategy_system_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.BiddingStrategySystemStatusEnum.BiddingStrategySystemStatus", BiddingStrategySystemStatusEnum_BiddingStrategySystemStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "ad_serving_optimization_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AdServingOptimizationStatusEnum.AdServingOptimizationStatus", AdServingOptimizationStatusEnum_AdServingOptimizationStatus] },
            { no: 9, name: "advertising_channel_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType", AdvertisingChannelTypeEnum_AdvertisingChannelType], options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 10, name: "advertising_channel_sub_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType", AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType], options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 60, name: "tracking_url_template", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "url_custom_parameters", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CustomParameter },
            { no: 75, name: "local_services_campaign_settings", kind: "message", T: () => Campaign_LocalServicesCampaignSettings },
            { no: 39, name: "real_time_bidding_setting", kind: "message", T: () => RealTimeBiddingSetting },
            { no: 14, name: "network_settings", kind: "message", T: () => Campaign_NetworkSettings },
            { no: 32, name: "hotel_setting", kind: "message", T: () => Campaign_HotelSettingInfo, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 33, name: "dynamic_search_ads_setting", kind: "message", T: () => Campaign_DynamicSearchAdsSetting },
            { no: 36, name: "shopping_setting", kind: "message", T: () => Campaign_ShoppingSetting },
            { no: 43, name: "targeting_setting", kind: "message", T: () => TargetingSetting },
            { no: 73, name: "audience_setting", kind: "message", T: () => Campaign_AudienceSetting, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 47, name: "geo_target_type_setting", kind: "message", T: () => Campaign_GeoTargetTypeSetting },
            { no: 50, name: "local_campaign_setting", kind: "message", T: () => Campaign_LocalCampaignSetting },
            { no: 51, name: "app_campaign_setting", kind: "message", T: () => Campaign_AppCampaignSetting },
            { no: 61, name: "labels", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/CampaignLabel" } } },
            { no: 17, name: "experiment_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.CampaignExperimentTypeEnum.CampaignExperimentType", CampaignExperimentTypeEnum_CampaignExperimentType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 56, name: "base_campaign", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/Campaign" } } },
            { no: 62, name: "campaign_budget", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/CampaignBudget" } } },
            { no: 22, name: "bidding_strategy_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType", BiddingStrategyTypeEnum_BiddingStrategyType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 71, name: "accessible_bidding_strategy", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/AccessibleBiddingStrategy" } } },
            { no: 63, name: "start_date", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 76, name: "campaign_group", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/CampaignGroup" } } },
            { no: 64, name: "end_date", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 65, name: "final_url_suffix", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 40, name: "frequency_caps", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FrequencyCapEntry },
            { no: 42, name: "video_brand_safety_suitability", kind: "enum", T: () => ["google.ads.googleads.v11.enums.BrandSafetySuitabilityEnum.BrandSafetySuitability", BrandSafetySuitabilityEnum_BrandSafetySuitability], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 44, name: "vanity_pharma", kind: "message", T: () => Campaign_VanityPharma },
            { no: 45, name: "selective_optimization", kind: "message", T: () => Campaign_SelectiveOptimization },
            { no: 54, name: "optimization_goal_setting", kind: "message", T: () => Campaign_OptimizationGoalSetting },
            { no: 46, name: "tracking_setting", kind: "message", T: () => Campaign_TrackingSetting, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 52, name: "payment_mode", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PaymentModeEnum.PaymentMode", PaymentModeEnum_PaymentMode] },
            { no: 66, name: "optimization_score", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 69, name: "excluded_parent_asset_field_types", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.AssetFieldTypeEnum.AssetFieldType", AssetFieldTypeEnum_AssetFieldType] },
            { no: 72, name: "url_expansion_opt_out", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 77, name: "performance_max_upgrade", kind: "message", T: () => Campaign_PerformanceMaxUpgrade, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 67, name: "bidding_strategy", kind: "scalar", oneof: "campaignBiddingStrategy", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/BiddingStrategy" } } },
            { no: 49, name: "commission", kind: "message", oneof: "campaignBiddingStrategy", T: () => Commission },
            { no: 74, name: "manual_cpa", kind: "message", oneof: "campaignBiddingStrategy", T: () => ManualCpa },
            { no: 24, name: "manual_cpc", kind: "message", oneof: "campaignBiddingStrategy", T: () => ManualCpc },
            { no: 25, name: "manual_cpm", kind: "message", oneof: "campaignBiddingStrategy", T: () => ManualCpm },
            { no: 37, name: "manual_cpv", kind: "message", oneof: "campaignBiddingStrategy", T: () => ManualCpv, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 30, name: "maximize_conversions", kind: "message", oneof: "campaignBiddingStrategy", T: () => MaximizeConversions },
            { no: 31, name: "maximize_conversion_value", kind: "message", oneof: "campaignBiddingStrategy", T: () => MaximizeConversionValue },
            { no: 26, name: "target_cpa", kind: "message", oneof: "campaignBiddingStrategy", T: () => TargetCpa },
            { no: 48, name: "target_impression_share", kind: "message", oneof: "campaignBiddingStrategy", T: () => TargetImpressionShare },
            { no: 29, name: "target_roas", kind: "message", oneof: "campaignBiddingStrategy", T: () => TargetRoas },
            { no: 27, name: "target_spend", kind: "message", oneof: "campaignBiddingStrategy", T: () => TargetSpend },
            { no: 34, name: "percent_cpc", kind: "message", oneof: "campaignBiddingStrategy", T: () => PercentCpc },
            { no: 41, name: "target_cpm", kind: "message", oneof: "campaignBiddingStrategy", T: () => TargetCpm }
        ], { "google.api.resource": { type: "googleads.googleapis.com/Campaign", pattern: ["customers/{customer_id}/campaigns/{campaign_id}"] } });
    }
    create(value?: PartialMessage<Campaign>): Campaign {
        const message = { resourceName: "", status: 0, servingStatus: 0, biddingStrategySystemStatus: 0, adServingOptimizationStatus: 0, advertisingChannelType: 0, advertisingChannelSubType: 0, urlCustomParameters: [], labels: [], experimentType: 0, biddingStrategyType: 0, accessibleBiddingStrategy: "", frequencyCaps: [], videoBrandSafetySuitability: 0, paymentMode: 0, excludedParentAssetFieldTypes: [], campaignBiddingStrategy: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign): Campaign {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional int64 id */ 59:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* optional string name */ 58:
                    message.name = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.CampaignStatusEnum.CampaignStatus status */ 5:
                    message.status = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.CampaignServingStatusEnum.CampaignServingStatus serving_status */ 21:
                    message.servingStatus = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.BiddingStrategySystemStatusEnum.BiddingStrategySystemStatus bidding_strategy_system_status */ 78:
                    message.biddingStrategySystemStatus = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.AdServingOptimizationStatusEnum.AdServingOptimizationStatus ad_serving_optimization_status */ 8:
                    message.adServingOptimizationStatus = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType advertising_channel_type */ 9:
                    message.advertisingChannelType = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType advertising_channel_sub_type */ 10:
                    message.advertisingChannelSubType = reader.int32();
                    break;
                case /* optional string tracking_url_template */ 60:
                    message.trackingUrlTemplate = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.common.CustomParameter url_custom_parameters */ 12:
                    message.urlCustomParameters.push(CustomParameter.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.LocalServicesCampaignSettings local_services_campaign_settings */ 75:
                    message.localServicesCampaignSettings = Campaign_LocalServicesCampaignSettings.internalBinaryRead(reader, reader.uint32(), options, message.localServicesCampaignSettings);
                    break;
                case /* google.ads.googleads.v11.common.RealTimeBiddingSetting real_time_bidding_setting */ 39:
                    message.realTimeBiddingSetting = RealTimeBiddingSetting.internalBinaryRead(reader, reader.uint32(), options, message.realTimeBiddingSetting);
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.NetworkSettings network_settings */ 14:
                    message.networkSettings = Campaign_NetworkSettings.internalBinaryRead(reader, reader.uint32(), options, message.networkSettings);
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.HotelSettingInfo hotel_setting */ 32:
                    message.hotelSetting = Campaign_HotelSettingInfo.internalBinaryRead(reader, reader.uint32(), options, message.hotelSetting);
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.DynamicSearchAdsSetting dynamic_search_ads_setting */ 33:
                    message.dynamicSearchAdsSetting = Campaign_DynamicSearchAdsSetting.internalBinaryRead(reader, reader.uint32(), options, message.dynamicSearchAdsSetting);
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.ShoppingSetting shopping_setting */ 36:
                    message.shoppingSetting = Campaign_ShoppingSetting.internalBinaryRead(reader, reader.uint32(), options, message.shoppingSetting);
                    break;
                case /* google.ads.googleads.v11.common.TargetingSetting targeting_setting */ 43:
                    message.targetingSetting = TargetingSetting.internalBinaryRead(reader, reader.uint32(), options, message.targetingSetting);
                    break;
                case /* optional google.ads.googleads.v11.resources.Campaign.AudienceSetting audience_setting */ 73:
                    message.audienceSetting = Campaign_AudienceSetting.internalBinaryRead(reader, reader.uint32(), options, message.audienceSetting);
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.GeoTargetTypeSetting geo_target_type_setting */ 47:
                    message.geoTargetTypeSetting = Campaign_GeoTargetTypeSetting.internalBinaryRead(reader, reader.uint32(), options, message.geoTargetTypeSetting);
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.LocalCampaignSetting local_campaign_setting */ 50:
                    message.localCampaignSetting = Campaign_LocalCampaignSetting.internalBinaryRead(reader, reader.uint32(), options, message.localCampaignSetting);
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.AppCampaignSetting app_campaign_setting */ 51:
                    message.appCampaignSetting = Campaign_AppCampaignSetting.internalBinaryRead(reader, reader.uint32(), options, message.appCampaignSetting);
                    break;
                case /* repeated string labels */ 61:
                    message.labels.push(reader.string());
                    break;
                case /* google.ads.googleads.v11.enums.CampaignExperimentTypeEnum.CampaignExperimentType experiment_type */ 17:
                    message.experimentType = reader.int32();
                    break;
                case /* optional string base_campaign */ 56:
                    message.baseCampaign = reader.string();
                    break;
                case /* optional string campaign_budget */ 62:
                    message.campaignBudget = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType bidding_strategy_type */ 22:
                    message.biddingStrategyType = reader.int32();
                    break;
                case /* string accessible_bidding_strategy */ 71:
                    message.accessibleBiddingStrategy = reader.string();
                    break;
                case /* optional string start_date */ 63:
                    message.startDate = reader.string();
                    break;
                case /* optional string campaign_group */ 76:
                    message.campaignGroup = reader.string();
                    break;
                case /* optional string end_date */ 64:
                    message.endDate = reader.string();
                    break;
                case /* optional string final_url_suffix */ 65:
                    message.finalUrlSuffix = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.common.FrequencyCapEntry frequency_caps */ 40:
                    message.frequencyCaps.push(FrequencyCapEntry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.enums.BrandSafetySuitabilityEnum.BrandSafetySuitability video_brand_safety_suitability */ 42:
                    message.videoBrandSafetySuitability = reader.int32();
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.VanityPharma vanity_pharma */ 44:
                    message.vanityPharma = Campaign_VanityPharma.internalBinaryRead(reader, reader.uint32(), options, message.vanityPharma);
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.SelectiveOptimization selective_optimization */ 45:
                    message.selectiveOptimization = Campaign_SelectiveOptimization.internalBinaryRead(reader, reader.uint32(), options, message.selectiveOptimization);
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.OptimizationGoalSetting optimization_goal_setting */ 54:
                    message.optimizationGoalSetting = Campaign_OptimizationGoalSetting.internalBinaryRead(reader, reader.uint32(), options, message.optimizationGoalSetting);
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.TrackingSetting tracking_setting */ 46:
                    message.trackingSetting = Campaign_TrackingSetting.internalBinaryRead(reader, reader.uint32(), options, message.trackingSetting);
                    break;
                case /* google.ads.googleads.v11.enums.PaymentModeEnum.PaymentMode payment_mode */ 52:
                    message.paymentMode = reader.int32();
                    break;
                case /* optional double optimization_score */ 66:
                    message.optimizationScore = reader.double();
                    break;
                case /* repeated google.ads.googleads.v11.enums.AssetFieldTypeEnum.AssetFieldType excluded_parent_asset_field_types */ 69:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.excludedParentAssetFieldTypes.push(reader.int32());
                    else
                        message.excludedParentAssetFieldTypes.push(reader.int32());
                    break;
                case /* optional bool url_expansion_opt_out */ 72:
                    message.urlExpansionOptOut = reader.bool();
                    break;
                case /* google.ads.googleads.v11.resources.Campaign.PerformanceMaxUpgrade performance_max_upgrade */ 77:
                    message.performanceMaxUpgrade = Campaign_PerformanceMaxUpgrade.internalBinaryRead(reader, reader.uint32(), options, message.performanceMaxUpgrade);
                    break;
                case /* string bidding_strategy */ 67:
                    message.campaignBiddingStrategy = {
                        oneofKind: "biddingStrategy",
                        biddingStrategy: reader.string()
                    };
                    break;
                case /* google.ads.googleads.v11.common.Commission commission */ 49:
                    message.campaignBiddingStrategy = {
                        oneofKind: "commission",
                        commission: Commission.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).commission)
                    };
                    break;
                case /* google.ads.googleads.v11.common.ManualCpa manual_cpa */ 74:
                    message.campaignBiddingStrategy = {
                        oneofKind: "manualCpa",
                        manualCpa: ManualCpa.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).manualCpa)
                    };
                    break;
                case /* google.ads.googleads.v11.common.ManualCpc manual_cpc */ 24:
                    message.campaignBiddingStrategy = {
                        oneofKind: "manualCpc",
                        manualCpc: ManualCpc.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).manualCpc)
                    };
                    break;
                case /* google.ads.googleads.v11.common.ManualCpm manual_cpm */ 25:
                    message.campaignBiddingStrategy = {
                        oneofKind: "manualCpm",
                        manualCpm: ManualCpm.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).manualCpm)
                    };
                    break;
                case /* google.ads.googleads.v11.common.ManualCpv manual_cpv */ 37:
                    message.campaignBiddingStrategy = {
                        oneofKind: "manualCpv",
                        manualCpv: ManualCpv.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).manualCpv)
                    };
                    break;
                case /* google.ads.googleads.v11.common.MaximizeConversions maximize_conversions */ 30:
                    message.campaignBiddingStrategy = {
                        oneofKind: "maximizeConversions",
                        maximizeConversions: MaximizeConversions.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).maximizeConversions)
                    };
                    break;
                case /* google.ads.googleads.v11.common.MaximizeConversionValue maximize_conversion_value */ 31:
                    message.campaignBiddingStrategy = {
                        oneofKind: "maximizeConversionValue",
                        maximizeConversionValue: MaximizeConversionValue.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).maximizeConversionValue)
                    };
                    break;
                case /* google.ads.googleads.v11.common.TargetCpa target_cpa */ 26:
                    message.campaignBiddingStrategy = {
                        oneofKind: "targetCpa",
                        targetCpa: TargetCpa.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).targetCpa)
                    };
                    break;
                case /* google.ads.googleads.v11.common.TargetImpressionShare target_impression_share */ 48:
                    message.campaignBiddingStrategy = {
                        oneofKind: "targetImpressionShare",
                        targetImpressionShare: TargetImpressionShare.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).targetImpressionShare)
                    };
                    break;
                case /* google.ads.googleads.v11.common.TargetRoas target_roas */ 29:
                    message.campaignBiddingStrategy = {
                        oneofKind: "targetRoas",
                        targetRoas: TargetRoas.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).targetRoas)
                    };
                    break;
                case /* google.ads.googleads.v11.common.TargetSpend target_spend */ 27:
                    message.campaignBiddingStrategy = {
                        oneofKind: "targetSpend",
                        targetSpend: TargetSpend.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).targetSpend)
                    };
                    break;
                case /* google.ads.googleads.v11.common.PercentCpc percent_cpc */ 34:
                    message.campaignBiddingStrategy = {
                        oneofKind: "percentCpc",
                        percentCpc: PercentCpc.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).percentCpc)
                    };
                    break;
                case /* google.ads.googleads.v11.common.TargetCpm target_cpm */ 41:
                    message.campaignBiddingStrategy = {
                        oneofKind: "targetCpm",
                        targetCpm: TargetCpm.internalBinaryRead(reader, reader.uint32(), options, (message.campaignBiddingStrategy as any).targetCpm)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional int64 id = 59; */
        if (message.id !== undefined)
            writer.tag(59, WireType.Varint).int64(message.id);
        /* optional string name = 58; */
        if (message.name !== undefined)
            writer.tag(58, WireType.LengthDelimited).string(message.name);
        /* google.ads.googleads.v11.enums.CampaignStatusEnum.CampaignStatus status = 5; */
        if (message.status !== 0)
            writer.tag(5, WireType.Varint).int32(message.status);
        /* google.ads.googleads.v11.enums.CampaignServingStatusEnum.CampaignServingStatus serving_status = 21; */
        if (message.servingStatus !== 0)
            writer.tag(21, WireType.Varint).int32(message.servingStatus);
        /* google.ads.googleads.v11.enums.BiddingStrategySystemStatusEnum.BiddingStrategySystemStatus bidding_strategy_system_status = 78; */
        if (message.biddingStrategySystemStatus !== 0)
            writer.tag(78, WireType.Varint).int32(message.biddingStrategySystemStatus);
        /* google.ads.googleads.v11.enums.AdServingOptimizationStatusEnum.AdServingOptimizationStatus ad_serving_optimization_status = 8; */
        if (message.adServingOptimizationStatus !== 0)
            writer.tag(8, WireType.Varint).int32(message.adServingOptimizationStatus);
        /* google.ads.googleads.v11.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType advertising_channel_type = 9; */
        if (message.advertisingChannelType !== 0)
            writer.tag(9, WireType.Varint).int32(message.advertisingChannelType);
        /* google.ads.googleads.v11.enums.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType advertising_channel_sub_type = 10; */
        if (message.advertisingChannelSubType !== 0)
            writer.tag(10, WireType.Varint).int32(message.advertisingChannelSubType);
        /* optional string tracking_url_template = 60; */
        if (message.trackingUrlTemplate !== undefined)
            writer.tag(60, WireType.LengthDelimited).string(message.trackingUrlTemplate);
        /* repeated google.ads.googleads.v11.common.CustomParameter url_custom_parameters = 12; */
        for (let i = 0; i < message.urlCustomParameters.length; i++)
            CustomParameter.internalBinaryWrite(message.urlCustomParameters[i], writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.LocalServicesCampaignSettings local_services_campaign_settings = 75; */
        if (message.localServicesCampaignSettings)
            Campaign_LocalServicesCampaignSettings.internalBinaryWrite(message.localServicesCampaignSettings, writer.tag(75, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.RealTimeBiddingSetting real_time_bidding_setting = 39; */
        if (message.realTimeBiddingSetting)
            RealTimeBiddingSetting.internalBinaryWrite(message.realTimeBiddingSetting, writer.tag(39, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.NetworkSettings network_settings = 14; */
        if (message.networkSettings)
            Campaign_NetworkSettings.internalBinaryWrite(message.networkSettings, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.HotelSettingInfo hotel_setting = 32; */
        if (message.hotelSetting)
            Campaign_HotelSettingInfo.internalBinaryWrite(message.hotelSetting, writer.tag(32, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.DynamicSearchAdsSetting dynamic_search_ads_setting = 33; */
        if (message.dynamicSearchAdsSetting)
            Campaign_DynamicSearchAdsSetting.internalBinaryWrite(message.dynamicSearchAdsSetting, writer.tag(33, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.ShoppingSetting shopping_setting = 36; */
        if (message.shoppingSetting)
            Campaign_ShoppingSetting.internalBinaryWrite(message.shoppingSetting, writer.tag(36, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetingSetting targeting_setting = 43; */
        if (message.targetingSetting)
            TargetingSetting.internalBinaryWrite(message.targetingSetting, writer.tag(43, WireType.LengthDelimited).fork(), options).join();
        /* optional google.ads.googleads.v11.resources.Campaign.AudienceSetting audience_setting = 73; */
        if (message.audienceSetting)
            Campaign_AudienceSetting.internalBinaryWrite(message.audienceSetting, writer.tag(73, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.GeoTargetTypeSetting geo_target_type_setting = 47; */
        if (message.geoTargetTypeSetting)
            Campaign_GeoTargetTypeSetting.internalBinaryWrite(message.geoTargetTypeSetting, writer.tag(47, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.LocalCampaignSetting local_campaign_setting = 50; */
        if (message.localCampaignSetting)
            Campaign_LocalCampaignSetting.internalBinaryWrite(message.localCampaignSetting, writer.tag(50, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.AppCampaignSetting app_campaign_setting = 51; */
        if (message.appCampaignSetting)
            Campaign_AppCampaignSetting.internalBinaryWrite(message.appCampaignSetting, writer.tag(51, WireType.LengthDelimited).fork(), options).join();
        /* repeated string labels = 61; */
        for (let i = 0; i < message.labels.length; i++)
            writer.tag(61, WireType.LengthDelimited).string(message.labels[i]);
        /* google.ads.googleads.v11.enums.CampaignExperimentTypeEnum.CampaignExperimentType experiment_type = 17; */
        if (message.experimentType !== 0)
            writer.tag(17, WireType.Varint).int32(message.experimentType);
        /* optional string base_campaign = 56; */
        if (message.baseCampaign !== undefined)
            writer.tag(56, WireType.LengthDelimited).string(message.baseCampaign);
        /* optional string campaign_budget = 62; */
        if (message.campaignBudget !== undefined)
            writer.tag(62, WireType.LengthDelimited).string(message.campaignBudget);
        /* google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType bidding_strategy_type = 22; */
        if (message.biddingStrategyType !== 0)
            writer.tag(22, WireType.Varint).int32(message.biddingStrategyType);
        /* string accessible_bidding_strategy = 71; */
        if (message.accessibleBiddingStrategy !== "")
            writer.tag(71, WireType.LengthDelimited).string(message.accessibleBiddingStrategy);
        /* optional string start_date = 63; */
        if (message.startDate !== undefined)
            writer.tag(63, WireType.LengthDelimited).string(message.startDate);
        /* optional string campaign_group = 76; */
        if (message.campaignGroup !== undefined)
            writer.tag(76, WireType.LengthDelimited).string(message.campaignGroup);
        /* optional string end_date = 64; */
        if (message.endDate !== undefined)
            writer.tag(64, WireType.LengthDelimited).string(message.endDate);
        /* optional string final_url_suffix = 65; */
        if (message.finalUrlSuffix !== undefined)
            writer.tag(65, WireType.LengthDelimited).string(message.finalUrlSuffix);
        /* repeated google.ads.googleads.v11.common.FrequencyCapEntry frequency_caps = 40; */
        for (let i = 0; i < message.frequencyCaps.length; i++)
            FrequencyCapEntry.internalBinaryWrite(message.frequencyCaps[i], writer.tag(40, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.BrandSafetySuitabilityEnum.BrandSafetySuitability video_brand_safety_suitability = 42; */
        if (message.videoBrandSafetySuitability !== 0)
            writer.tag(42, WireType.Varint).int32(message.videoBrandSafetySuitability);
        /* google.ads.googleads.v11.resources.Campaign.VanityPharma vanity_pharma = 44; */
        if (message.vanityPharma)
            Campaign_VanityPharma.internalBinaryWrite(message.vanityPharma, writer.tag(44, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.SelectiveOptimization selective_optimization = 45; */
        if (message.selectiveOptimization)
            Campaign_SelectiveOptimization.internalBinaryWrite(message.selectiveOptimization, writer.tag(45, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.OptimizationGoalSetting optimization_goal_setting = 54; */
        if (message.optimizationGoalSetting)
            Campaign_OptimizationGoalSetting.internalBinaryWrite(message.optimizationGoalSetting, writer.tag(54, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Campaign.TrackingSetting tracking_setting = 46; */
        if (message.trackingSetting)
            Campaign_TrackingSetting.internalBinaryWrite(message.trackingSetting, writer.tag(46, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.PaymentModeEnum.PaymentMode payment_mode = 52; */
        if (message.paymentMode !== 0)
            writer.tag(52, WireType.Varint).int32(message.paymentMode);
        /* optional double optimization_score = 66; */
        if (message.optimizationScore !== undefined)
            writer.tag(66, WireType.Bit64).double(message.optimizationScore);
        /* repeated google.ads.googleads.v11.enums.AssetFieldTypeEnum.AssetFieldType excluded_parent_asset_field_types = 69; */
        if (message.excludedParentAssetFieldTypes.length) {
            writer.tag(69, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.excludedParentAssetFieldTypes.length; i++)
                writer.int32(message.excludedParentAssetFieldTypes[i]);
            writer.join();
        }
        /* optional bool url_expansion_opt_out = 72; */
        if (message.urlExpansionOptOut !== undefined)
            writer.tag(72, WireType.Varint).bool(message.urlExpansionOptOut);
        /* google.ads.googleads.v11.resources.Campaign.PerformanceMaxUpgrade performance_max_upgrade = 77; */
        if (message.performanceMaxUpgrade)
            Campaign_PerformanceMaxUpgrade.internalBinaryWrite(message.performanceMaxUpgrade, writer.tag(77, WireType.LengthDelimited).fork(), options).join();
        /* string bidding_strategy = 67; */
        if (message.campaignBiddingStrategy.oneofKind === "biddingStrategy")
            writer.tag(67, WireType.LengthDelimited).string(message.campaignBiddingStrategy.biddingStrategy);
        /* google.ads.googleads.v11.common.Commission commission = 49; */
        if (message.campaignBiddingStrategy.oneofKind === "commission")
            Commission.internalBinaryWrite(message.campaignBiddingStrategy.commission, writer.tag(49, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.ManualCpa manual_cpa = 74; */
        if (message.campaignBiddingStrategy.oneofKind === "manualCpa")
            ManualCpa.internalBinaryWrite(message.campaignBiddingStrategy.manualCpa, writer.tag(74, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.ManualCpc manual_cpc = 24; */
        if (message.campaignBiddingStrategy.oneofKind === "manualCpc")
            ManualCpc.internalBinaryWrite(message.campaignBiddingStrategy.manualCpc, writer.tag(24, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.ManualCpm manual_cpm = 25; */
        if (message.campaignBiddingStrategy.oneofKind === "manualCpm")
            ManualCpm.internalBinaryWrite(message.campaignBiddingStrategy.manualCpm, writer.tag(25, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.ManualCpv manual_cpv = 37; */
        if (message.campaignBiddingStrategy.oneofKind === "manualCpv")
            ManualCpv.internalBinaryWrite(message.campaignBiddingStrategy.manualCpv, writer.tag(37, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.MaximizeConversions maximize_conversions = 30; */
        if (message.campaignBiddingStrategy.oneofKind === "maximizeConversions")
            MaximizeConversions.internalBinaryWrite(message.campaignBiddingStrategy.maximizeConversions, writer.tag(30, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.MaximizeConversionValue maximize_conversion_value = 31; */
        if (message.campaignBiddingStrategy.oneofKind === "maximizeConversionValue")
            MaximizeConversionValue.internalBinaryWrite(message.campaignBiddingStrategy.maximizeConversionValue, writer.tag(31, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetCpa target_cpa = 26; */
        if (message.campaignBiddingStrategy.oneofKind === "targetCpa")
            TargetCpa.internalBinaryWrite(message.campaignBiddingStrategy.targetCpa, writer.tag(26, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetImpressionShare target_impression_share = 48; */
        if (message.campaignBiddingStrategy.oneofKind === "targetImpressionShare")
            TargetImpressionShare.internalBinaryWrite(message.campaignBiddingStrategy.targetImpressionShare, writer.tag(48, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetRoas target_roas = 29; */
        if (message.campaignBiddingStrategy.oneofKind === "targetRoas")
            TargetRoas.internalBinaryWrite(message.campaignBiddingStrategy.targetRoas, writer.tag(29, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetSpend target_spend = 27; */
        if (message.campaignBiddingStrategy.oneofKind === "targetSpend")
            TargetSpend.internalBinaryWrite(message.campaignBiddingStrategy.targetSpend, writer.tag(27, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.PercentCpc percent_cpc = 34; */
        if (message.campaignBiddingStrategy.oneofKind === "percentCpc")
            PercentCpc.internalBinaryWrite(message.campaignBiddingStrategy.percentCpc, writer.tag(34, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.TargetCpm target_cpm = 41; */
        if (message.campaignBiddingStrategy.oneofKind === "targetCpm")
            TargetCpm.internalBinaryWrite(message.campaignBiddingStrategy.targetCpm, writer.tag(41, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign
 */
export const Campaign = new Campaign$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_PerformanceMaxUpgrade$Type extends MessageType<Campaign_PerformanceMaxUpgrade> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.PerformanceMaxUpgrade", [
            { no: 1, name: "performance_max_campaign", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/Campaign" } } },
            { no: 2, name: "pre_upgrade_campaign", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/Campaign" } } },
            { no: 3, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PerformanceMaxUpgradeStatusEnum.PerformanceMaxUpgradeStatus", PerformanceMaxUpgradeStatusEnum_PerformanceMaxUpgradeStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<Campaign_PerformanceMaxUpgrade>): Campaign_PerformanceMaxUpgrade {
        const message = { performanceMaxCampaign: "", preUpgradeCampaign: "", status: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_PerformanceMaxUpgrade>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_PerformanceMaxUpgrade): Campaign_PerformanceMaxUpgrade {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string performance_max_campaign */ 1:
                    message.performanceMaxCampaign = reader.string();
                    break;
                case /* string pre_upgrade_campaign */ 2:
                    message.preUpgradeCampaign = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.PerformanceMaxUpgradeStatusEnum.PerformanceMaxUpgradeStatus status */ 3:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_PerformanceMaxUpgrade, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string performance_max_campaign = 1; */
        if (message.performanceMaxCampaign !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.performanceMaxCampaign);
        /* string pre_upgrade_campaign = 2; */
        if (message.preUpgradeCampaign !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.preUpgradeCampaign);
        /* google.ads.googleads.v11.enums.PerformanceMaxUpgradeStatusEnum.PerformanceMaxUpgradeStatus status = 3; */
        if (message.status !== 0)
            writer.tag(3, WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.PerformanceMaxUpgrade
 */
export const Campaign_PerformanceMaxUpgrade = new Campaign_PerformanceMaxUpgrade$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_NetworkSettings$Type extends MessageType<Campaign_NetworkSettings> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.NetworkSettings", [
            { no: 5, name: "target_google_search", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "target_search_network", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "target_content_network", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "target_partner_search_network", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<Campaign_NetworkSettings>): Campaign_NetworkSettings {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_NetworkSettings>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_NetworkSettings): Campaign_NetworkSettings {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool target_google_search */ 5:
                    message.targetGoogleSearch = reader.bool();
                    break;
                case /* optional bool target_search_network */ 6:
                    message.targetSearchNetwork = reader.bool();
                    break;
                case /* optional bool target_content_network */ 7:
                    message.targetContentNetwork = reader.bool();
                    break;
                case /* optional bool target_partner_search_network */ 8:
                    message.targetPartnerSearchNetwork = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_NetworkSettings, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool target_google_search = 5; */
        if (message.targetGoogleSearch !== undefined)
            writer.tag(5, WireType.Varint).bool(message.targetGoogleSearch);
        /* optional bool target_search_network = 6; */
        if (message.targetSearchNetwork !== undefined)
            writer.tag(6, WireType.Varint).bool(message.targetSearchNetwork);
        /* optional bool target_content_network = 7; */
        if (message.targetContentNetwork !== undefined)
            writer.tag(7, WireType.Varint).bool(message.targetContentNetwork);
        /* optional bool target_partner_search_network = 8; */
        if (message.targetPartnerSearchNetwork !== undefined)
            writer.tag(8, WireType.Varint).bool(message.targetPartnerSearchNetwork);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.NetworkSettings
 */
export const Campaign_NetworkSettings = new Campaign_NetworkSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_HotelSettingInfo$Type extends MessageType<Campaign_HotelSettingInfo> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.HotelSettingInfo", [
            { no: 2, name: "hotel_center_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } }
        ]);
    }
    create(value?: PartialMessage<Campaign_HotelSettingInfo>): Campaign_HotelSettingInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_HotelSettingInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_HotelSettingInfo): Campaign_HotelSettingInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 hotel_center_id */ 2:
                    message.hotelCenterId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_HotelSettingInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 hotel_center_id = 2; */
        if (message.hotelCenterId !== undefined)
            writer.tag(2, WireType.Varint).int64(message.hotelCenterId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.HotelSettingInfo
 */
export const Campaign_HotelSettingInfo = new Campaign_HotelSettingInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_DynamicSearchAdsSetting$Type extends MessageType<Campaign_DynamicSearchAdsSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.DynamicSearchAdsSetting", [
            { no: 6, name: "domain_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 7, name: "language_code", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 8, name: "use_supplied_urls_only", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "feeds", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/Feed" } } }
        ]);
    }
    create(value?: PartialMessage<Campaign_DynamicSearchAdsSetting>): Campaign_DynamicSearchAdsSetting {
        const message = { domainName: "", languageCode: "", feeds: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_DynamicSearchAdsSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_DynamicSearchAdsSetting): Campaign_DynamicSearchAdsSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string domain_name */ 6:
                    message.domainName = reader.string();
                    break;
                case /* string language_code */ 7:
                    message.languageCode = reader.string();
                    break;
                case /* optional bool use_supplied_urls_only */ 8:
                    message.useSuppliedUrlsOnly = reader.bool();
                    break;
                case /* repeated string feeds */ 9:
                    message.feeds.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_DynamicSearchAdsSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string domain_name = 6; */
        if (message.domainName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.domainName);
        /* string language_code = 7; */
        if (message.languageCode !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.languageCode);
        /* optional bool use_supplied_urls_only = 8; */
        if (message.useSuppliedUrlsOnly !== undefined)
            writer.tag(8, WireType.Varint).bool(message.useSuppliedUrlsOnly);
        /* repeated string feeds = 9; */
        for (let i = 0; i < message.feeds.length; i++)
            writer.tag(9, WireType.LengthDelimited).string(message.feeds[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.DynamicSearchAdsSetting
 */
export const Campaign_DynamicSearchAdsSetting = new Campaign_DynamicSearchAdsSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_ShoppingSetting$Type extends MessageType<Campaign_ShoppingSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.ShoppingSetting", [
            { no: 5, name: "merchant_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 6, name: "sales_country", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "feed_label", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "campaign_priority", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "enable_local", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "use_vehicle_inventory", kind: "scalar", T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } }
        ]);
    }
    create(value?: PartialMessage<Campaign_ShoppingSetting>): Campaign_ShoppingSetting {
        const message = { feedLabel: "", useVehicleInventory: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_ShoppingSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_ShoppingSetting): Campaign_ShoppingSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 merchant_id */ 5:
                    message.merchantId = reader.int64().toBigInt();
                    break;
                case /* optional string sales_country */ 6:
                    message.salesCountry = reader.string();
                    break;
                case /* string feed_label */ 10:
                    message.feedLabel = reader.string();
                    break;
                case /* optional int32 campaign_priority */ 7:
                    message.campaignPriority = reader.int32();
                    break;
                case /* optional bool enable_local */ 8:
                    message.enableLocal = reader.bool();
                    break;
                case /* bool use_vehicle_inventory */ 9:
                    message.useVehicleInventory = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_ShoppingSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 merchant_id = 5; */
        if (message.merchantId !== undefined)
            writer.tag(5, WireType.Varint).int64(message.merchantId);
        /* optional string sales_country = 6; */
        if (message.salesCountry !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.salesCountry);
        /* string feed_label = 10; */
        if (message.feedLabel !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.feedLabel);
        /* optional int32 campaign_priority = 7; */
        if (message.campaignPriority !== undefined)
            writer.tag(7, WireType.Varint).int32(message.campaignPriority);
        /* optional bool enable_local = 8; */
        if (message.enableLocal !== undefined)
            writer.tag(8, WireType.Varint).bool(message.enableLocal);
        /* bool use_vehicle_inventory = 9; */
        if (message.useVehicleInventory !== false)
            writer.tag(9, WireType.Varint).bool(message.useVehicleInventory);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.ShoppingSetting
 */
export const Campaign_ShoppingSetting = new Campaign_ShoppingSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_TrackingSetting$Type extends MessageType<Campaign_TrackingSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.TrackingSetting", [
            { no: 2, name: "tracking_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<Campaign_TrackingSetting>): Campaign_TrackingSetting {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_TrackingSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_TrackingSetting): Campaign_TrackingSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string tracking_url */ 2:
                    message.trackingUrl = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_TrackingSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string tracking_url = 2; */
        if (message.trackingUrl !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.trackingUrl);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.TrackingSetting
 */
export const Campaign_TrackingSetting = new Campaign_TrackingSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_GeoTargetTypeSetting$Type extends MessageType<Campaign_GeoTargetTypeSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.GeoTargetTypeSetting", [
            { no: 1, name: "positive_geo_target_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PositiveGeoTargetTypeEnum.PositiveGeoTargetType", PositiveGeoTargetTypeEnum_PositiveGeoTargetType] },
            { no: 2, name: "negative_geo_target_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.NegativeGeoTargetTypeEnum.NegativeGeoTargetType", NegativeGeoTargetTypeEnum_NegativeGeoTargetType] }
        ]);
    }
    create(value?: PartialMessage<Campaign_GeoTargetTypeSetting>): Campaign_GeoTargetTypeSetting {
        const message = { positiveGeoTargetType: 0, negativeGeoTargetType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_GeoTargetTypeSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_GeoTargetTypeSetting): Campaign_GeoTargetTypeSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.PositiveGeoTargetTypeEnum.PositiveGeoTargetType positive_geo_target_type */ 1:
                    message.positiveGeoTargetType = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.NegativeGeoTargetTypeEnum.NegativeGeoTargetType negative_geo_target_type */ 2:
                    message.negativeGeoTargetType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_GeoTargetTypeSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.PositiveGeoTargetTypeEnum.PositiveGeoTargetType positive_geo_target_type = 1; */
        if (message.positiveGeoTargetType !== 0)
            writer.tag(1, WireType.Varint).int32(message.positiveGeoTargetType);
        /* google.ads.googleads.v11.enums.NegativeGeoTargetTypeEnum.NegativeGeoTargetType negative_geo_target_type = 2; */
        if (message.negativeGeoTargetType !== 0)
            writer.tag(2, WireType.Varint).int32(message.negativeGeoTargetType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.GeoTargetTypeSetting
 */
export const Campaign_GeoTargetTypeSetting = new Campaign_GeoTargetTypeSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_LocalCampaignSetting$Type extends MessageType<Campaign_LocalCampaignSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.LocalCampaignSetting", [
            { no: 1, name: "location_source_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.LocationSourceTypeEnum.LocationSourceType", LocationSourceTypeEnum_LocationSourceType] }
        ]);
    }
    create(value?: PartialMessage<Campaign_LocalCampaignSetting>): Campaign_LocalCampaignSetting {
        const message = { locationSourceType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_LocalCampaignSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_LocalCampaignSetting): Campaign_LocalCampaignSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.LocationSourceTypeEnum.LocationSourceType location_source_type */ 1:
                    message.locationSourceType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_LocalCampaignSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.LocationSourceTypeEnum.LocationSourceType location_source_type = 1; */
        if (message.locationSourceType !== 0)
            writer.tag(1, WireType.Varint).int32(message.locationSourceType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.LocalCampaignSetting
 */
export const Campaign_LocalCampaignSetting = new Campaign_LocalCampaignSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_AppCampaignSetting$Type extends MessageType<Campaign_AppCampaignSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.AppCampaignSetting", [
            { no: 1, name: "bidding_strategy_goal_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AppCampaignBiddingStrategyGoalTypeEnum.AppCampaignBiddingStrategyGoalType", AppCampaignBiddingStrategyGoalTypeEnum_AppCampaignBiddingStrategyGoalType] },
            { no: 4, name: "app_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 3, name: "app_store", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AppCampaignAppStoreEnum.AppCampaignAppStore", AppCampaignAppStoreEnum_AppCampaignAppStore], options: { "google.api.field_behavior": ["IMMUTABLE"] } }
        ]);
    }
    create(value?: PartialMessage<Campaign_AppCampaignSetting>): Campaign_AppCampaignSetting {
        const message = { biddingStrategyGoalType: 0, appStore: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_AppCampaignSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_AppCampaignSetting): Campaign_AppCampaignSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.AppCampaignBiddingStrategyGoalTypeEnum.AppCampaignBiddingStrategyGoalType bidding_strategy_goal_type */ 1:
                    message.biddingStrategyGoalType = reader.int32();
                    break;
                case /* optional string app_id */ 4:
                    message.appId = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.AppCampaignAppStoreEnum.AppCampaignAppStore app_store */ 3:
                    message.appStore = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_AppCampaignSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.AppCampaignBiddingStrategyGoalTypeEnum.AppCampaignBiddingStrategyGoalType bidding_strategy_goal_type = 1; */
        if (message.biddingStrategyGoalType !== 0)
            writer.tag(1, WireType.Varint).int32(message.biddingStrategyGoalType);
        /* optional string app_id = 4; */
        if (message.appId !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.appId);
        /* google.ads.googleads.v11.enums.AppCampaignAppStoreEnum.AppCampaignAppStore app_store = 3; */
        if (message.appStore !== 0)
            writer.tag(3, WireType.Varint).int32(message.appStore);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.AppCampaignSetting
 */
export const Campaign_AppCampaignSetting = new Campaign_AppCampaignSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_VanityPharma$Type extends MessageType<Campaign_VanityPharma> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.VanityPharma", [
            { no: 1, name: "vanity_pharma_display_url_mode", kind: "enum", T: () => ["google.ads.googleads.v11.enums.VanityPharmaDisplayUrlModeEnum.VanityPharmaDisplayUrlMode", VanityPharmaDisplayUrlModeEnum_VanityPharmaDisplayUrlMode] },
            { no: 2, name: "vanity_pharma_text", kind: "enum", T: () => ["google.ads.googleads.v11.enums.VanityPharmaTextEnum.VanityPharmaText", VanityPharmaTextEnum_VanityPharmaText] }
        ]);
    }
    create(value?: PartialMessage<Campaign_VanityPharma>): Campaign_VanityPharma {
        const message = { vanityPharmaDisplayUrlMode: 0, vanityPharmaText: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_VanityPharma>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_VanityPharma): Campaign_VanityPharma {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.VanityPharmaDisplayUrlModeEnum.VanityPharmaDisplayUrlMode vanity_pharma_display_url_mode */ 1:
                    message.vanityPharmaDisplayUrlMode = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.VanityPharmaTextEnum.VanityPharmaText vanity_pharma_text */ 2:
                    message.vanityPharmaText = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_VanityPharma, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.VanityPharmaDisplayUrlModeEnum.VanityPharmaDisplayUrlMode vanity_pharma_display_url_mode = 1; */
        if (message.vanityPharmaDisplayUrlMode !== 0)
            writer.tag(1, WireType.Varint).int32(message.vanityPharmaDisplayUrlMode);
        /* google.ads.googleads.v11.enums.VanityPharmaTextEnum.VanityPharmaText vanity_pharma_text = 2; */
        if (message.vanityPharmaText !== 0)
            writer.tag(2, WireType.Varint).int32(message.vanityPharmaText);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.VanityPharma
 */
export const Campaign_VanityPharma = new Campaign_VanityPharma$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_SelectiveOptimization$Type extends MessageType<Campaign_SelectiveOptimization> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.SelectiveOptimization", [
            { no: 2, name: "conversion_actions", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/ConversionAction" } } }
        ]);
    }
    create(value?: PartialMessage<Campaign_SelectiveOptimization>): Campaign_SelectiveOptimization {
        const message = { conversionActions: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_SelectiveOptimization>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_SelectiveOptimization): Campaign_SelectiveOptimization {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string conversion_actions */ 2:
                    message.conversionActions.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_SelectiveOptimization, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated string conversion_actions = 2; */
        for (let i = 0; i < message.conversionActions.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.conversionActions[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.SelectiveOptimization
 */
export const Campaign_SelectiveOptimization = new Campaign_SelectiveOptimization$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_OptimizationGoalSetting$Type extends MessageType<Campaign_OptimizationGoalSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.OptimizationGoalSetting", [
            { no: 1, name: "optimization_goal_types", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.OptimizationGoalTypeEnum.OptimizationGoalType", OptimizationGoalTypeEnum_OptimizationGoalType] }
        ]);
    }
    create(value?: PartialMessage<Campaign_OptimizationGoalSetting>): Campaign_OptimizationGoalSetting {
        const message = { optimizationGoalTypes: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_OptimizationGoalSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_OptimizationGoalSetting): Campaign_OptimizationGoalSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.enums.OptimizationGoalTypeEnum.OptimizationGoalType optimization_goal_types */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.optimizationGoalTypes.push(reader.int32());
                    else
                        message.optimizationGoalTypes.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_OptimizationGoalSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.enums.OptimizationGoalTypeEnum.OptimizationGoalType optimization_goal_types = 1; */
        if (message.optimizationGoalTypes.length) {
            writer.tag(1, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.optimizationGoalTypes.length; i++)
                writer.int32(message.optimizationGoalTypes[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.OptimizationGoalSetting
 */
export const Campaign_OptimizationGoalSetting = new Campaign_OptimizationGoalSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_AudienceSetting$Type extends MessageType<Campaign_AudienceSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.AudienceSetting", [
            { no: 1, name: "use_audience_grouped", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } }
        ]);
    }
    create(value?: PartialMessage<Campaign_AudienceSetting>): Campaign_AudienceSetting {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_AudienceSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_AudienceSetting): Campaign_AudienceSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool use_audience_grouped */ 1:
                    message.useAudienceGrouped = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_AudienceSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool use_audience_grouped = 1; */
        if (message.useAudienceGrouped !== undefined)
            writer.tag(1, WireType.Varint).bool(message.useAudienceGrouped);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.AudienceSetting
 */
export const Campaign_AudienceSetting = new Campaign_AudienceSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_LocalServicesCampaignSettings$Type extends MessageType<Campaign_LocalServicesCampaignSettings> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.LocalServicesCampaignSettings", [
            { no: 1, name: "category_bids", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Campaign_CategoryBid }
        ]);
    }
    create(value?: PartialMessage<Campaign_LocalServicesCampaignSettings>): Campaign_LocalServicesCampaignSettings {
        const message = { categoryBids: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_LocalServicesCampaignSettings>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_LocalServicesCampaignSettings): Campaign_LocalServicesCampaignSettings {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated google.ads.googleads.v11.resources.Campaign.CategoryBid category_bids */ 1:
                    message.categoryBids.push(Campaign_CategoryBid.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_LocalServicesCampaignSettings, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated google.ads.googleads.v11.resources.Campaign.CategoryBid category_bids = 1; */
        for (let i = 0; i < message.categoryBids.length; i++)
            Campaign_CategoryBid.internalBinaryWrite(message.categoryBids[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.LocalServicesCampaignSettings
 */
export const Campaign_LocalServicesCampaignSettings = new Campaign_LocalServicesCampaignSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Campaign_CategoryBid$Type extends MessageType<Campaign_CategoryBid> {
    constructor() {
        super("google.ads.googleads.v11.resources.Campaign.CategoryBid", [
            { no: 1, name: "category_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "manual_cpa_bid_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<Campaign_CategoryBid>): Campaign_CategoryBid {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Campaign_CategoryBid>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Campaign_CategoryBid): Campaign_CategoryBid {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string category_id */ 1:
                    message.categoryId = reader.string();
                    break;
                case /* optional int64 manual_cpa_bid_micros */ 2:
                    message.manualCpaBidMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Campaign_CategoryBid, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string category_id = 1; */
        if (message.categoryId !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.categoryId);
        /* optional int64 manual_cpa_bid_micros = 2; */
        if (message.manualCpaBidMicros !== undefined)
            writer.tag(2, WireType.Varint).int64(message.manualCpaBidMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Campaign.CategoryBid
 */
export const Campaign_CategoryBid = new Campaign_CategoryBid$Type();
