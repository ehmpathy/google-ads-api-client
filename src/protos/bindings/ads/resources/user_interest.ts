// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/user_interest.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CriterionCategoryAvailability } from "../common/criterion_category_availability";
import { UserInterestTaxonomyTypeEnum_UserInterestTaxonomyType } from "../enums/user_interest_taxonomy_type";
// Proto file describing the User Interest resource.

/**
 * A user interest: a particular interest-based vertical to be targeted.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.UserInterest
 */
export interface UserInterest {
    /**
     * Output only. The resource name of the user interest.
     * User interest resource names have the form:
     *
     * `customers/{customer_id}/userInterests/{user_interest_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. Taxonomy type of the user interest.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserInterestTaxonomyTypeEnum.UserInterestTaxonomyType taxonomy_type = 2;
     */
    taxonomyType: UserInterestTaxonomyTypeEnum_UserInterestTaxonomyType;
    /**
     * Output only. The ID of the user interest.
     *
     * @generated from protobuf field: optional int64 user_interest_id = 8;
     */
    userInterestId?: bigint;
    /**
     * Output only. The name of the user interest.
     *
     * @generated from protobuf field: optional string name = 9;
     */
    name?: string;
    /**
     * Output only. The parent of the user interest.
     *
     * @generated from protobuf field: optional string user_interest_parent = 10;
     */
    userInterestParent?: string;
    /**
     * Output only. True if the user interest is launched to all channels and locales.
     *
     * @generated from protobuf field: optional bool launched_to_all = 11;
     */
    launchedToAll?: boolean;
    /**
     * Output only. Availability information of the user interest.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.CriterionCategoryAvailability availabilities = 7;
     */
    availabilities: CriterionCategoryAvailability[];
}
// @generated message type with reflection information, may provide speed optimized methods
class UserInterest$Type extends MessageType<UserInterest> {
    constructor() {
        super("google.ads.googleads.v11.resources.UserInterest", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/UserInterest" } } },
            { no: 2, name: "taxonomy_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserInterestTaxonomyTypeEnum.UserInterestTaxonomyType", UserInterestTaxonomyTypeEnum_UserInterestTaxonomyType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "user_interest_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 9, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 10, name: "user_interest_parent", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/UserInterest" } } },
            { no: 11, name: "launched_to_all", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "availabilities", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CriterionCategoryAvailability, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/UserInterest", pattern: ["customers/{customer_id}/userInterests/{user_interest_id}"] } });
    }
    create(value?: PartialMessage<UserInterest>): UserInterest {
        const message = { resourceName: "", taxonomyType: 0, availabilities: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserInterest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserInterest): UserInterest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.UserInterestTaxonomyTypeEnum.UserInterestTaxonomyType taxonomy_type */ 2:
                    message.taxonomyType = reader.int32();
                    break;
                case /* optional int64 user_interest_id */ 8:
                    message.userInterestId = reader.int64().toBigInt();
                    break;
                case /* optional string name */ 9:
                    message.name = reader.string();
                    break;
                case /* optional string user_interest_parent */ 10:
                    message.userInterestParent = reader.string();
                    break;
                case /* optional bool launched_to_all */ 11:
                    message.launchedToAll = reader.bool();
                    break;
                case /* repeated google.ads.googleads.v11.common.CriterionCategoryAvailability availabilities */ 7:
                    message.availabilities.push(CriterionCategoryAvailability.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserInterest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* google.ads.googleads.v11.enums.UserInterestTaxonomyTypeEnum.UserInterestTaxonomyType taxonomy_type = 2; */
        if (message.taxonomyType !== 0)
            writer.tag(2, WireType.Varint).int32(message.taxonomyType);
        /* optional int64 user_interest_id = 8; */
        if (message.userInterestId !== undefined)
            writer.tag(8, WireType.Varint).int64(message.userInterestId);
        /* optional string name = 9; */
        if (message.name !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.name);
        /* optional string user_interest_parent = 10; */
        if (message.userInterestParent !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.userInterestParent);
        /* optional bool launched_to_all = 11; */
        if (message.launchedToAll !== undefined)
            writer.tag(11, WireType.Varint).bool(message.launchedToAll);
        /* repeated google.ads.googleads.v11.common.CriterionCategoryAvailability availabilities = 7; */
        for (let i = 0; i < message.availabilities.length; i++)
            CriterionCategoryAvailability.internalBinaryWrite(message.availabilities[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.UserInterest
 */
export const UserInterest = new UserInterest$Type();
