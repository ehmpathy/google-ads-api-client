// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/group_placement_view.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { PlacementTypeEnum_PlacementType } from "../enums/placement_type";
// Proto file describing the group placement view resource.

/**
 * A group placement view.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.GroupPlacementView
 */
export interface GroupPlacementView {
    /**
     * Output only. The resource name of the group placement view.
     * Group placement view resource names have the form:
     *
     * `customers/{customer_id}/groupPlacementViews/{ad_group_id}~{base64_placement}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. The automatic placement string at group level, e. g. web domain, mobile
     * app ID, or a YouTube channel ID.
     *
     * @generated from protobuf field: optional string placement = 6;
     */
    placement?: string;
    /**
     * Output only. Domain name for websites and YouTube channel name for YouTube channels.
     *
     * @generated from protobuf field: optional string display_name = 7;
     */
    displayName?: string;
    /**
     * Output only. URL of the group placement, for example, domain, link to the mobile
     * application in app store, or a YouTube channel URL.
     *
     * @generated from protobuf field: optional string target_url = 8;
     */
    targetUrl?: string;
    /**
     * Output only. Type of the placement, for example, Website, YouTube Channel, Mobile
     * Application.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.PlacementTypeEnum.PlacementType placement_type = 5;
     */
    placementType: PlacementTypeEnum_PlacementType;
}
// @generated message type with reflection information, may provide speed optimized methods
class GroupPlacementView$Type extends MessageType<GroupPlacementView> {
    constructor() {
        super("google.ads.googleads.v11.resources.GroupPlacementView", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/GroupPlacementView" } } },
            { no: 6, name: "placement", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "display_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "target_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "placement_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PlacementTypeEnum.PlacementType", PlacementTypeEnum_PlacementType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/GroupPlacementView", pattern: ["customers/{customer_id}/groupPlacementViews/{ad_group_id}~{base64_placement}"] } });
    }
    create(value?: PartialMessage<GroupPlacementView>): GroupPlacementView {
        const message = { resourceName: "", placementType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GroupPlacementView>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GroupPlacementView): GroupPlacementView {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional string placement */ 6:
                    message.placement = reader.string();
                    break;
                case /* optional string display_name */ 7:
                    message.displayName = reader.string();
                    break;
                case /* optional string target_url */ 8:
                    message.targetUrl = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.PlacementTypeEnum.PlacementType placement_type */ 5:
                    message.placementType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GroupPlacementView, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional string placement = 6; */
        if (message.placement !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.placement);
        /* optional string display_name = 7; */
        if (message.displayName !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.displayName);
        /* optional string target_url = 8; */
        if (message.targetUrl !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.targetUrl);
        /* google.ads.googleads.v11.enums.PlacementTypeEnum.PlacementType placement_type = 5; */
        if (message.placementType !== 0)
            writer.tag(5, WireType.Varint).int32(message.placementType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.GroupPlacementView
 */
export const GroupPlacementView = new GroupPlacementView$Type();
