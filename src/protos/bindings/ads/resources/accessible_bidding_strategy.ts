// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/accessible_bidding_strategy.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { TargetImpressionShareLocationEnum_TargetImpressionShareLocation } from "../enums/target_impression_share_location";
import { BiddingStrategyTypeEnum_BiddingStrategyType } from "../enums/bidding_strategy_type";
/**
 * Represents a view of BiddingStrategies owned by and shared with the customer.
 *
 * In contrast to BiddingStrategy, this resource includes strategies owned by
 * managers of the customer and shared with this customer - in addition to
 * strategies owned by this customer. This resource does not provide metrics and
 * only exposes a limited subset of the BiddingStrategy attributes.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy
 */
export interface AccessibleBiddingStrategy {
    /**
     * Output only. The resource name of the accessible bidding strategy.
     * AccessibleBiddingStrategy resource names have the form:
     *
     * `customers/{customer_id}/accessibleBiddingStrategies/{bidding_strategy_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. The ID of the bidding strategy.
     *
     * @generated from protobuf field: int64 id = 2;
     */
    id: bigint;
    /**
     * Output only. The name of the bidding strategy.
     *
     * @generated from protobuf field: string name = 3;
     */
    name: string;
    /**
     * Output only. The type of the bidding strategy.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType type = 4;
     */
    type: BiddingStrategyTypeEnum_BiddingStrategyType;
    /**
     * Output only. The ID of the Customer which owns the bidding strategy.
     *
     * @generated from protobuf field: int64 owner_customer_id = 5;
     */
    ownerCustomerId: bigint;
    /**
     * Output only. descriptive_name of the Customer which owns the bidding strategy.
     *
     * @generated from protobuf field: string owner_descriptive_name = 6;
     */
    ownerDescriptiveName: string;
    /**
     * @generated from protobuf oneof: scheme
     */
    scheme: {
        oneofKind: "maximizeConversionValue";
        /**
         * Output only. An automated bidding strategy to help get the most conversion value for
         * your campaigns while spending your budget.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversionValue maximize_conversion_value = 7;
         */
        maximizeConversionValue: AccessibleBiddingStrategy_MaximizeConversionValue;
    } | {
        oneofKind: "maximizeConversions";
        /**
         * Output only. An automated bidding strategy to help get the most conversions for your
         * campaigns while spending your budget.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversions maximize_conversions = 8;
         */
        maximizeConversions: AccessibleBiddingStrategy_MaximizeConversions;
    } | {
        oneofKind: "targetCpa";
        /**
         * Output only. A bidding strategy that sets bids to help get as many conversions as
         * possible at the target cost-per-acquisition (CPA) you set.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetCpa target_cpa = 9;
         */
        targetCpa: AccessibleBiddingStrategy_TargetCpa;
    } | {
        oneofKind: "targetImpressionShare";
        /**
         * Output only. A bidding strategy that automatically optimizes towards a chosen
         * percentage of impressions.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetImpressionShare target_impression_share = 10;
         */
        targetImpressionShare: AccessibleBiddingStrategy_TargetImpressionShare;
    } | {
        oneofKind: "targetRoas";
        /**
         * Output only. A bidding strategy that helps you maximize revenue while averaging a
         * specific target Return On Ad Spend (ROAS).
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetRoas target_roas = 11;
         */
        targetRoas: AccessibleBiddingStrategy_TargetRoas;
    } | {
        oneofKind: "targetSpend";
        /**
         * Output only. A bid strategy that sets your bids to help get as many clicks as
         * possible within your budget.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetSpend target_spend = 12;
         */
        targetSpend: AccessibleBiddingStrategy_TargetSpend;
    } | {
        oneofKind: undefined;
    };
}
/**
 * An automated bidding strategy to help get the most conversion value for
 * your campaigns while spending your budget.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversionValue
 */
export interface AccessibleBiddingStrategy_MaximizeConversionValue {
    /**
     * Output only. The target return on ad spend (ROAS) option. If set, the bid strategy
     * will maximize revenue while averaging the target return on ad spend. If
     * the target ROAS is high, the bid strategy may not be able to spend the
     * full budget. If the target ROAS is not set, the bid strategy will aim to
     * achieve the highest possible ROAS for the budget.
     *
     * @generated from protobuf field: double target_roas = 1;
     */
    targetRoas: number;
}
/**
 * An automated bidding strategy to help get the most conversions for your
 * campaigns while spending your budget.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversions
 */
export interface AccessibleBiddingStrategy_MaximizeConversions {
    /**
     * Output only. The target cost per acquisition (CPA) option. This is the average amount
     * that you would like to spend per acquisition.
     *
     * @generated from protobuf field: int64 target_cpa_micros = 2;
     */
    targetCpaMicros: bigint;
}
/**
 * An automated bid strategy that sets bids to help get as many conversions as
 * possible at the target cost-per-acquisition (CPA) you set.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetCpa
 */
export interface AccessibleBiddingStrategy_TargetCpa {
    /**
     * Output only. Average CPA target.
     * This target should be greater than or equal to minimum billable unit
     * based on the currency for the account.
     *
     * @generated from protobuf field: optional int64 target_cpa_micros = 1;
     */
    targetCpaMicros?: bigint;
}
/**
 * An automated bidding strategy that sets bids so that a certain percentage
 * of search ads are shown at the top of the first page (or other targeted
 * location).
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetImpressionShare
 */
export interface AccessibleBiddingStrategy_TargetImpressionShare {
    /**
     * Output only. The targeted location on the search results page.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation location = 1;
     */
    location: TargetImpressionShareLocationEnum_TargetImpressionShareLocation;
    /**
     * The chosen fraction of ads to be shown in the targeted location in
     * micros. For example, 1% equals 10,000.
     *
     * @generated from protobuf field: optional int64 location_fraction_micros = 2;
     */
    locationFractionMicros?: bigint;
    /**
     * Output only. The highest CPC bid the automated bidding system is permitted to specify.
     * This is a required field entered by the advertiser that sets the ceiling
     * and specified in local micros.
     *
     * @generated from protobuf field: optional int64 cpc_bid_ceiling_micros = 3;
     */
    cpcBidCeilingMicros?: bigint;
}
/**
 * An automated bidding strategy that helps you maximize revenue while
 * averaging a specific target return on ad spend (ROAS).
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetRoas
 */
export interface AccessibleBiddingStrategy_TargetRoas {
    /**
     * Output only. The chosen revenue (based on conversion data) per unit of spend.
     *
     * @generated from protobuf field: optional double target_roas = 1;
     */
    targetRoas?: number;
}
/**
 * An automated bid strategy that sets your bids to help get as many clicks
 * as possible within your budget.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetSpend
 */
export interface AccessibleBiddingStrategy_TargetSpend {
    /**
     * Output only. The spend target under which to maximize clicks.
     * A TargetSpend bidder will attempt to spend the smaller of this value
     * or the natural throttling spend amount.
     * If not specified, the budget is used as the spend target.
     * This field is deprecated and should no longer be used. See
     * https://ads-developers.googleblog.com/2020/05/reminder-about-sunset-creation-of.html
     * for details.
     *
     * @deprecated
     * @generated from protobuf field: optional int64 target_spend_micros = 1 [deprecated = true];
     */
    targetSpendMicros?: bigint;
    /**
     * Output only. Maximum bid limit that can be set by the bid strategy.
     * The limit applies to all keywords managed by the strategy.
     *
     * @generated from protobuf field: optional int64 cpc_bid_ceiling_micros = 2;
     */
    cpcBidCeilingMicros?: bigint;
}
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy$Type extends MessageType<AccessibleBiddingStrategy> {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/AccessibleBiddingStrategy" } } },
            { no: 2, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 4, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType", BiddingStrategyTypeEnum_BiddingStrategyType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "owner_customer_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "owner_descriptive_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "maximize_conversion_value", kind: "message", oneof: "scheme", T: () => AccessibleBiddingStrategy_MaximizeConversionValue, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "maximize_conversions", kind: "message", oneof: "scheme", T: () => AccessibleBiddingStrategy_MaximizeConversions, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 9, name: "target_cpa", kind: "message", oneof: "scheme", T: () => AccessibleBiddingStrategy_TargetCpa, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 10, name: "target_impression_share", kind: "message", oneof: "scheme", T: () => AccessibleBiddingStrategy_TargetImpressionShare, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 11, name: "target_roas", kind: "message", oneof: "scheme", T: () => AccessibleBiddingStrategy_TargetRoas, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 12, name: "target_spend", kind: "message", oneof: "scheme", T: () => AccessibleBiddingStrategy_TargetSpend, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/AccessibleBiddingStrategy", pattern: ["customers/{customer_id}/accessibleBiddingStrategies/{bidding_strategy_id}"] } });
    }
    create(value?: PartialMessage<AccessibleBiddingStrategy>): AccessibleBiddingStrategy {
        const message = { resourceName: "", id: 0n, name: "", type: 0, ownerCustomerId: 0n, ownerDescriptiveName: "", scheme: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AccessibleBiddingStrategy>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AccessibleBiddingStrategy): AccessibleBiddingStrategy {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* int64 id */ 2:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string name */ 3:
                    message.name = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType type */ 4:
                    message.type = reader.int32();
                    break;
                case /* int64 owner_customer_id */ 5:
                    message.ownerCustomerId = reader.int64().toBigInt();
                    break;
                case /* string owner_descriptive_name */ 6:
                    message.ownerDescriptiveName = reader.string();
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversionValue maximize_conversion_value */ 7:
                    message.scheme = {
                        oneofKind: "maximizeConversionValue",
                        maximizeConversionValue: AccessibleBiddingStrategy_MaximizeConversionValue.internalBinaryRead(reader, reader.uint32(), options, (message.scheme as any).maximizeConversionValue)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversions maximize_conversions */ 8:
                    message.scheme = {
                        oneofKind: "maximizeConversions",
                        maximizeConversions: AccessibleBiddingStrategy_MaximizeConversions.internalBinaryRead(reader, reader.uint32(), options, (message.scheme as any).maximizeConversions)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetCpa target_cpa */ 9:
                    message.scheme = {
                        oneofKind: "targetCpa",
                        targetCpa: AccessibleBiddingStrategy_TargetCpa.internalBinaryRead(reader, reader.uint32(), options, (message.scheme as any).targetCpa)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetImpressionShare target_impression_share */ 10:
                    message.scheme = {
                        oneofKind: "targetImpressionShare",
                        targetImpressionShare: AccessibleBiddingStrategy_TargetImpressionShare.internalBinaryRead(reader, reader.uint32(), options, (message.scheme as any).targetImpressionShare)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetRoas target_roas */ 11:
                    message.scheme = {
                        oneofKind: "targetRoas",
                        targetRoas: AccessibleBiddingStrategy_TargetRoas.internalBinaryRead(reader, reader.uint32(), options, (message.scheme as any).targetRoas)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetSpend target_spend */ 12:
                    message.scheme = {
                        oneofKind: "targetSpend",
                        targetSpend: AccessibleBiddingStrategy_TargetSpend.internalBinaryRead(reader, reader.uint32(), options, (message.scheme as any).targetSpend)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AccessibleBiddingStrategy, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* int64 id = 2; */
        if (message.id !== 0n)
            writer.tag(2, WireType.Varint).int64(message.id);
        /* string name = 3; */
        if (message.name !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.name);
        /* google.ads.googleads.v11.enums.BiddingStrategyTypeEnum.BiddingStrategyType type = 4; */
        if (message.type !== 0)
            writer.tag(4, WireType.Varint).int32(message.type);
        /* int64 owner_customer_id = 5; */
        if (message.ownerCustomerId !== 0n)
            writer.tag(5, WireType.Varint).int64(message.ownerCustomerId);
        /* string owner_descriptive_name = 6; */
        if (message.ownerDescriptiveName !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.ownerDescriptiveName);
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversionValue maximize_conversion_value = 7; */
        if (message.scheme.oneofKind === "maximizeConversionValue")
            AccessibleBiddingStrategy_MaximizeConversionValue.internalBinaryWrite(message.scheme.maximizeConversionValue, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversions maximize_conversions = 8; */
        if (message.scheme.oneofKind === "maximizeConversions")
            AccessibleBiddingStrategy_MaximizeConversions.internalBinaryWrite(message.scheme.maximizeConversions, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetCpa target_cpa = 9; */
        if (message.scheme.oneofKind === "targetCpa")
            AccessibleBiddingStrategy_TargetCpa.internalBinaryWrite(message.scheme.targetCpa, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetImpressionShare target_impression_share = 10; */
        if (message.scheme.oneofKind === "targetImpressionShare")
            AccessibleBiddingStrategy_TargetImpressionShare.internalBinaryWrite(message.scheme.targetImpressionShare, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetRoas target_roas = 11; */
        if (message.scheme.oneofKind === "targetRoas")
            AccessibleBiddingStrategy_TargetRoas.internalBinaryWrite(message.scheme.targetRoas, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetSpend target_spend = 12; */
        if (message.scheme.oneofKind === "targetSpend")
            AccessibleBiddingStrategy_TargetSpend.internalBinaryWrite(message.scheme.targetSpend, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy
 */
export const AccessibleBiddingStrategy = new AccessibleBiddingStrategy$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_MaximizeConversionValue$Type extends MessageType<AccessibleBiddingStrategy_MaximizeConversionValue> {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversionValue", [
            { no: 1, name: "target_roas", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<AccessibleBiddingStrategy_MaximizeConversionValue>): AccessibleBiddingStrategy_MaximizeConversionValue {
        const message = { targetRoas: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AccessibleBiddingStrategy_MaximizeConversionValue>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AccessibleBiddingStrategy_MaximizeConversionValue): AccessibleBiddingStrategy_MaximizeConversionValue {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* double target_roas */ 1:
                    message.targetRoas = reader.double();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AccessibleBiddingStrategy_MaximizeConversionValue, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* double target_roas = 1; */
        if (message.targetRoas !== 0)
            writer.tag(1, WireType.Bit64).double(message.targetRoas);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversionValue
 */
export const AccessibleBiddingStrategy_MaximizeConversionValue = new AccessibleBiddingStrategy_MaximizeConversionValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_MaximizeConversions$Type extends MessageType<AccessibleBiddingStrategy_MaximizeConversions> {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversions", [
            { no: 2, name: "target_cpa_micros", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<AccessibleBiddingStrategy_MaximizeConversions>): AccessibleBiddingStrategy_MaximizeConversions {
        const message = { targetCpaMicros: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AccessibleBiddingStrategy_MaximizeConversions>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AccessibleBiddingStrategy_MaximizeConversions): AccessibleBiddingStrategy_MaximizeConversions {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 target_cpa_micros */ 2:
                    message.targetCpaMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AccessibleBiddingStrategy_MaximizeConversions, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 target_cpa_micros = 2; */
        if (message.targetCpaMicros !== 0n)
            writer.tag(2, WireType.Varint).int64(message.targetCpaMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.MaximizeConversions
 */
export const AccessibleBiddingStrategy_MaximizeConversions = new AccessibleBiddingStrategy_MaximizeConversions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_TargetCpa$Type extends MessageType<AccessibleBiddingStrategy_TargetCpa> {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetCpa", [
            { no: 1, name: "target_cpa_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<AccessibleBiddingStrategy_TargetCpa>): AccessibleBiddingStrategy_TargetCpa {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AccessibleBiddingStrategy_TargetCpa>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AccessibleBiddingStrategy_TargetCpa): AccessibleBiddingStrategy_TargetCpa {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 target_cpa_micros */ 1:
                    message.targetCpaMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AccessibleBiddingStrategy_TargetCpa, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 target_cpa_micros = 1; */
        if (message.targetCpaMicros !== undefined)
            writer.tag(1, WireType.Varint).int64(message.targetCpaMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetCpa
 */
export const AccessibleBiddingStrategy_TargetCpa = new AccessibleBiddingStrategy_TargetCpa$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_TargetImpressionShare$Type extends MessageType<AccessibleBiddingStrategy_TargetImpressionShare> {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetImpressionShare", [
            { no: 1, name: "location", kind: "enum", T: () => ["google.ads.googleads.v11.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation", TargetImpressionShareLocationEnum_TargetImpressionShareLocation], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 2, name: "location_fraction_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "cpc_bid_ceiling_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<AccessibleBiddingStrategy_TargetImpressionShare>): AccessibleBiddingStrategy_TargetImpressionShare {
        const message = { location: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AccessibleBiddingStrategy_TargetImpressionShare>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AccessibleBiddingStrategy_TargetImpressionShare): AccessibleBiddingStrategy_TargetImpressionShare {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation location */ 1:
                    message.location = reader.int32();
                    break;
                case /* optional int64 location_fraction_micros */ 2:
                    message.locationFractionMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cpc_bid_ceiling_micros */ 3:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AccessibleBiddingStrategy_TargetImpressionShare, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.TargetImpressionShareLocationEnum.TargetImpressionShareLocation location = 1; */
        if (message.location !== 0)
            writer.tag(1, WireType.Varint).int32(message.location);
        /* optional int64 location_fraction_micros = 2; */
        if (message.locationFractionMicros !== undefined)
            writer.tag(2, WireType.Varint).int64(message.locationFractionMicros);
        /* optional int64 cpc_bid_ceiling_micros = 3; */
        if (message.cpcBidCeilingMicros !== undefined)
            writer.tag(3, WireType.Varint).int64(message.cpcBidCeilingMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetImpressionShare
 */
export const AccessibleBiddingStrategy_TargetImpressionShare = new AccessibleBiddingStrategy_TargetImpressionShare$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_TargetRoas$Type extends MessageType<AccessibleBiddingStrategy_TargetRoas> {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetRoas", [
            { no: 1, name: "target_roas", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<AccessibleBiddingStrategy_TargetRoas>): AccessibleBiddingStrategy_TargetRoas {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AccessibleBiddingStrategy_TargetRoas>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AccessibleBiddingStrategy_TargetRoas): AccessibleBiddingStrategy_TargetRoas {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional double target_roas */ 1:
                    message.targetRoas = reader.double();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AccessibleBiddingStrategy_TargetRoas, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional double target_roas = 1; */
        if (message.targetRoas !== undefined)
            writer.tag(1, WireType.Bit64).double(message.targetRoas);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetRoas
 */
export const AccessibleBiddingStrategy_TargetRoas = new AccessibleBiddingStrategy_TargetRoas$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccessibleBiddingStrategy_TargetSpend$Type extends MessageType<AccessibleBiddingStrategy_TargetSpend> {
    constructor() {
        super("google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetSpend", [
            { no: 1, name: "target_spend_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 2, name: "cpc_bid_ceiling_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<AccessibleBiddingStrategy_TargetSpend>): AccessibleBiddingStrategy_TargetSpend {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AccessibleBiddingStrategy_TargetSpend>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AccessibleBiddingStrategy_TargetSpend): AccessibleBiddingStrategy_TargetSpend {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 target_spend_micros = 1 [deprecated = true];*/ 1:
                    message.targetSpendMicros = reader.int64().toBigInt();
                    break;
                case /* optional int64 cpc_bid_ceiling_micros */ 2:
                    message.cpcBidCeilingMicros = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AccessibleBiddingStrategy_TargetSpend, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 target_spend_micros = 1 [deprecated = true]; */
        if (message.targetSpendMicros !== undefined)
            writer.tag(1, WireType.Varint).int64(message.targetSpendMicros);
        /* optional int64 cpc_bid_ceiling_micros = 2; */
        if (message.cpcBidCeilingMicros !== undefined)
            writer.tag(2, WireType.Varint).int64(message.cpcBidCeilingMicros);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AccessibleBiddingStrategy.TargetSpend
 */
export const AccessibleBiddingStrategy_TargetSpend = new AccessibleBiddingStrategy_TargetSpend$Type();
