// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/customer_feed.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { FeedLinkStatusEnum_FeedLinkStatus } from "../enums/feed_link_status";
import { MatchingFunction } from "../common/matching_function";
import { PlaceholderTypeEnum_PlaceholderType } from "../enums/placeholder_type";
// Proto file describing the CustomerFeed resource.

/**
 * A customer feed.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.CustomerFeed
 */
export interface CustomerFeed {
    /**
     * Immutable. The resource name of the customer feed.
     * Customer feed resource names have the form:
     *
     * `customers/{customer_id}/customerFeeds/{feed_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Immutable. The feed being linked to the customer.
     *
     * @generated from protobuf field: optional string feed = 6;
     */
    feed?: string;
    /**
     * Indicates which placeholder types the feed may populate under the connected
     * customer. Required.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType placeholder_types = 3;
     */
    placeholderTypes: PlaceholderTypeEnum_PlaceholderType[];
    /**
     * Matching function associated with the CustomerFeed.
     * The matching function is used to filter the set of feed items selected.
     * Required.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.MatchingFunction matching_function = 4;
     */
    matchingFunction?: MatchingFunction;
    /**
     * Output only. Status of the customer feed.
     * This field is read-only.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.FeedLinkStatusEnum.FeedLinkStatus status = 5;
     */
    status: FeedLinkStatusEnum_FeedLinkStatus;
}
// @generated message type with reflection information, may provide speed optimized methods
class CustomerFeed$Type extends MessageType<CustomerFeed> {
    constructor() {
        super("google.ads.googleads.v11.resources.CustomerFeed", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/CustomerFeed" } } },
            { no: 6, name: "feed", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/Feed" } } },
            { no: 3, name: "placeholder_types", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType", PlaceholderTypeEnum_PlaceholderType] },
            { no: 4, name: "matching_function", kind: "message", T: () => MatchingFunction },
            { no: 5, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FeedLinkStatusEnum.FeedLinkStatus", FeedLinkStatusEnum_FeedLinkStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/CustomerFeed", pattern: ["customers/{customer_id}/customerFeeds/{feed_id}"] } });
    }
    create(value?: PartialMessage<CustomerFeed>): CustomerFeed {
        const message = { resourceName: "", placeholderTypes: [], status: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomerFeed>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomerFeed): CustomerFeed {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional string feed */ 6:
                    message.feed = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType placeholder_types */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.placeholderTypes.push(reader.int32());
                    else
                        message.placeholderTypes.push(reader.int32());
                    break;
                case /* google.ads.googleads.v11.common.MatchingFunction matching_function */ 4:
                    message.matchingFunction = MatchingFunction.internalBinaryRead(reader, reader.uint32(), options, message.matchingFunction);
                    break;
                case /* google.ads.googleads.v11.enums.FeedLinkStatusEnum.FeedLinkStatus status */ 5:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomerFeed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional string feed = 6; */
        if (message.feed !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.feed);
        /* repeated google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType placeholder_types = 3; */
        if (message.placeholderTypes.length) {
            writer.tag(3, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.placeholderTypes.length; i++)
                writer.int32(message.placeholderTypes[i]);
            writer.join();
        }
        /* google.ads.googleads.v11.common.MatchingFunction matching_function = 4; */
        if (message.matchingFunction)
            MatchingFunction.internalBinaryWrite(message.matchingFunction, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.FeedLinkStatusEnum.FeedLinkStatus status = 5; */
        if (message.status !== 0)
            writer.tag(5, WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.CustomerFeed
 */
export const CustomerFeed = new CustomerFeed$Type();
