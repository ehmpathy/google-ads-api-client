// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/ad_parameter.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// Proto file describing the ad parameter resource.

/**
 * An ad parameter that is used to update numeric values (such as prices or
 * inventory levels) in any text line of an ad (including URLs). There can
 * be a maximum of two AdParameters per ad group criterion. (One with
 * parameter_index = 1 and one with parameter_index = 2.)
 * In the ad the parameters are referenced by a placeholder of the form
 * "{param#:value}". For example, "{param1:$17}"
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AdParameter
 */
export interface AdParameter {
    /**
     * Immutable. The resource name of the ad parameter.
     * Ad parameter resource names have the form:
     *
     * `customers/{customer_id}/adParameters/{ad_group_id}~{criterion_id}~{parameter_index}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Immutable. The ad group criterion that this ad parameter belongs to.
     *
     * @generated from protobuf field: optional string ad_group_criterion = 5;
     */
    adGroupCriterion?: string;
    /**
     * Immutable. The unique index of this ad parameter. Must be either 1 or 2.
     *
     * @generated from protobuf field: optional int64 parameter_index = 6;
     */
    parameterIndex?: bigint;
    /**
     * Numeric value to insert into the ad text. The following restrictions
     *  apply:
     *  - Can use comma or period as a separator, with an optional period or
     *    comma (respectively) for fractional values. For example, 1,000,000.00
     *    and 2.000.000,10 are valid.
     *  - Can be prepended or appended with a currency symbol. For example,
     *    $99.99 is valid.
     *  - Can be prepended or appended with a currency code. For example, 99.99USD
     *    and EUR200 are valid.
     *  - Can use '%'. For example, 1.0% and 1,0% are valid.
     *  - Can use plus or minus. For example, -10.99 and 25+ are valid.
     *  - Can use '/' between two numbers. For example 4/1 and 0.95/0.45 are
     *    valid.
     *
     * @generated from protobuf field: optional string insertion_text = 7;
     */
    insertionText?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class AdParameter$Type extends MessageType<AdParameter> {
    constructor() {
        super("google.ads.googleads.v11.resources.AdParameter", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/AdParameter" } } },
            { no: 5, name: "ad_group_criterion", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/AdGroupCriterion" } } },
            { no: 6, name: "parameter_index", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 7, name: "insertion_text", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ], { "google.api.resource": { type: "googleads.googleapis.com/AdParameter", pattern: ["customers/{customer_id}/adParameters/{ad_group_id}~{criterion_id}~{parameter_index}"] } });
    }
    create(value?: PartialMessage<AdParameter>): AdParameter {
        const message = { resourceName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AdParameter>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AdParameter): AdParameter {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional string ad_group_criterion */ 5:
                    message.adGroupCriterion = reader.string();
                    break;
                case /* optional int64 parameter_index */ 6:
                    message.parameterIndex = reader.int64().toBigInt();
                    break;
                case /* optional string insertion_text */ 7:
                    message.insertionText = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AdParameter, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional string ad_group_criterion = 5; */
        if (message.adGroupCriterion !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.adGroupCriterion);
        /* optional int64 parameter_index = 6; */
        if (message.parameterIndex !== undefined)
            writer.tag(6, WireType.Varint).int64(message.parameterIndex);
        /* optional string insertion_text = 7; */
        if (message.insertionText !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.insertionText);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AdParameter
 */
export const AdParameter = new AdParameter$Type();
