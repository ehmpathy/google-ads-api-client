// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/feed_item.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { FeedItemValidationErrorEnum_FeedItemValidationError } from "../errors/feed_item_validation_error";
import { FeedItemQualityDisapprovalReasonEnum_FeedItemQualityDisapprovalReason } from "../enums/feed_item_quality_disapproval_reason";
import { FeedItemQualityApprovalStatusEnum_FeedItemQualityApprovalStatus } from "../enums/feed_item_quality_approval_status";
import { FeedItemValidationStatusEnum_FeedItemValidationStatus } from "../enums/feed_item_validation_status";
import { PolicyTopicEntry } from "../common/policy";
import { PolicyApprovalStatusEnum_PolicyApprovalStatus } from "../enums/policy_approval_status";
import { PolicyReviewStatusEnum_PolicyReviewStatus } from "../enums/policy_review_status";
import { PlaceholderTypeEnum_PlaceholderType } from "../enums/placeholder_type";
import { Money } from "../common/feed_common";
import { FeedItemStatusEnum_FeedItemStatus } from "../enums/feed_item_status";
import { CustomParameter } from "../common/custom_parameter";
import { GeoTargetingRestrictionEnum_GeoTargetingRestriction } from "../enums/geo_targeting_restriction";
// Proto file describing the FeedItem resource.

/**
 * A feed item.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.FeedItem
 */
export interface FeedItem {
    /**
     * Immutable. The resource name of the feed item.
     * Feed item resource names have the form:
     *
     * `customers/{customer_id}/feedItems/{feed_id}~{feed_item_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Immutable. The feed to which this feed item belongs.
     *
     * @generated from protobuf field: optional string feed = 11;
     */
    feed?: string;
    /**
     * Output only. The ID of this feed item.
     *
     * @generated from protobuf field: optional int64 id = 12;
     */
    id?: bigint;
    /**
     * Start time in which this feed item is effective and can begin serving. The
     * time is in the customer's time zone.
     * The format is "YYYY-MM-DD HH:MM:SS".
     * Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
     *
     * @generated from protobuf field: optional string start_date_time = 13;
     */
    startDateTime?: string;
    /**
     * End time in which this feed item is no longer effective and will stop
     * serving. The time is in the customer's time zone.
     * The format is "YYYY-MM-DD HH:MM:SS".
     * Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
     *
     * @generated from protobuf field: optional string end_date_time = 14;
     */
    endDateTime?: string;
    /**
     * The feed item's attribute values.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.resources.FeedItemAttributeValue attribute_values = 6;
     */
    attributeValues: FeedItemAttributeValue[];
    /**
     * Geo targeting restriction specifies the type of location that can be used
     * for targeting.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.GeoTargetingRestrictionEnum.GeoTargetingRestriction geo_targeting_restriction = 7;
     */
    geoTargetingRestriction: GeoTargetingRestrictionEnum_GeoTargetingRestriction;
    /**
     * The list of mappings used to substitute custom parameter tags in a
     * `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.CustomParameter url_custom_parameters = 8;
     */
    urlCustomParameters: CustomParameter[];
    /**
     * Output only. Status of the feed item.
     * This field is read-only.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.FeedItemStatusEnum.FeedItemStatus status = 9;
     */
    status: FeedItemStatusEnum_FeedItemStatus;
    /**
     * Output only. List of info about a feed item's validation and approval state for active
     * feed mappings. There will be an entry in the list for each type of feed
     * mapping associated with the feed, for example, a feed with a sitelink and a
     * call feed mapping would cause every feed item associated with that feed to
     * have an entry in this list for both sitelink and call. This field is
     * read-only.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.resources.FeedItemPlaceholderPolicyInfo policy_infos = 10;
     */
    policyInfos: FeedItemPlaceholderPolicyInfo[];
}
/**
 * A feed item attribute value.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.FeedItemAttributeValue
 */
export interface FeedItemAttributeValue {
    /**
     * Id of the feed attribute for which the value is associated with.
     *
     * @generated from protobuf field: optional int64 feed_attribute_id = 11;
     */
    feedAttributeId?: bigint;
    /**
     * Int64 value. Should be set if feed_attribute_id refers to a feed attribute
     * of type INT64.
     *
     * @generated from protobuf field: optional int64 integer_value = 12;
     */
    integerValue?: bigint;
    /**
     * Bool value. Should be set if feed_attribute_id refers to a feed attribute
     * of type BOOLEAN.
     *
     * @generated from protobuf field: optional bool boolean_value = 13;
     */
    booleanValue?: boolean;
    /**
     * String value. Should be set if feed_attribute_id refers to a feed attribute
     * of type STRING, URL or DATE_TIME.
     * For STRING the maximum length is 1500 characters. For URL the maximum
     * length is 2076 characters. For DATE_TIME the string must be in the format
     * "YYYYMMDD HHMMSS".
     *
     * @generated from protobuf field: optional string string_value = 14;
     */
    stringValue?: string;
    /**
     * Double value. Should be set if feed_attribute_id refers to a feed attribute
     * of type DOUBLE.
     *
     * @generated from protobuf field: optional double double_value = 15;
     */
    doubleValue?: number;
    /**
     * Price value. Should be set if feed_attribute_id refers to a feed attribute
     * of type PRICE.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.Money price_value = 6;
     */
    priceValue?: Money;
    /**
     * Repeated int64 value. Should be set if feed_attribute_id refers to a feed
     * attribute of type INT64_LIST.
     *
     * @generated from protobuf field: repeated int64 integer_values = 16;
     */
    integerValues: bigint[];
    /**
     * Repeated bool value. Should be set if feed_attribute_id refers to a feed
     * attribute of type BOOLEAN_LIST.
     *
     * @generated from protobuf field: repeated bool boolean_values = 17;
     */
    booleanValues: boolean[];
    /**
     * Repeated string value. Should be set if feed_attribute_id refers to a feed
     * attribute of type STRING_LIST, URL_LIST or DATE_TIME_LIST.
     * For STRING_LIST and URL_LIST the total size of the list in bytes may not
     * exceed 3000. For DATE_TIME_LIST the number of elements may not exceed 200.
     *
     * For STRING_LIST the maximum length of each string element is 1500
     * characters. For URL_LIST the maximum length is 2076 characters. For
     * DATE_TIME the format of the string must be the same as start and end time
     * for the feed item.
     *
     * @generated from protobuf field: repeated string string_values = 18;
     */
    stringValues: string[];
    /**
     * Repeated double value. Should be set if feed_attribute_id refers to a feed
     * attribute of type DOUBLE_LIST.
     *
     * @generated from protobuf field: repeated double double_values = 19;
     */
    doubleValues: number[];
}
/**
 * Policy, validation, and quality approval info for a feed item for the
 * specified placeholder type.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.FeedItemPlaceholderPolicyInfo
 */
export interface FeedItemPlaceholderPolicyInfo {
    /**
     * Output only. The placeholder type.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type_enum = 10;
     */
    placeholderTypeEnum: PlaceholderTypeEnum_PlaceholderType;
    /**
     * Output only. The FeedMapping that contains the placeholder type.
     *
     * @generated from protobuf field: optional string feed_mapping_resource_name = 11;
     */
    feedMappingResourceName?: string;
    /**
     * Output only. Where the placeholder type is in the review process.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.PolicyReviewStatusEnum.PolicyReviewStatus review_status = 3;
     */
    reviewStatus: PolicyReviewStatusEnum_PolicyReviewStatus;
    /**
     * Output only. The overall approval status of the placeholder type, calculated based on
     * the status of its individual policy topic entries.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.PolicyApprovalStatusEnum.PolicyApprovalStatus approval_status = 4;
     */
    approvalStatus: PolicyApprovalStatusEnum_PolicyApprovalStatus;
    /**
     * Output only. The list of policy findings for the placeholder type.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.common.PolicyTopicEntry policy_topic_entries = 5;
     */
    policyTopicEntries: PolicyTopicEntry[];
    /**
     * Output only. The validation status of the palceholder type.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.FeedItemValidationStatusEnum.FeedItemValidationStatus validation_status = 6;
     */
    validationStatus: FeedItemValidationStatusEnum_FeedItemValidationStatus;
    /**
     * Output only. List of placeholder type validation errors.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.resources.FeedItemValidationError validation_errors = 7;
     */
    validationErrors: FeedItemValidationError[];
    /**
     * Output only. Placeholder type quality evaluation approval status.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.FeedItemQualityApprovalStatusEnum.FeedItemQualityApprovalStatus quality_approval_status = 8;
     */
    qualityApprovalStatus: FeedItemQualityApprovalStatusEnum_FeedItemQualityApprovalStatus;
    /**
     * Output only. List of placeholder type quality evaluation disapproval reasons.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.enums.FeedItemQualityDisapprovalReasonEnum.FeedItemQualityDisapprovalReason quality_disapproval_reasons = 9;
     */
    qualityDisapprovalReasons: FeedItemQualityDisapprovalReasonEnum_FeedItemQualityDisapprovalReason[];
}
/**
 * Stores a validation error and the set of offending feed attributes which
 * together are responsible for causing a feed item validation error.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.FeedItemValidationError
 */
export interface FeedItemValidationError {
    /**
     * Output only. Error code indicating what validation error was triggered. The description
     * of the error can be found in the 'description' field.
     *
     * @generated from protobuf field: google.ads.googleads.v11.errors.FeedItemValidationErrorEnum.FeedItemValidationError validation_error = 1;
     */
    validationError: FeedItemValidationErrorEnum_FeedItemValidationError;
    /**
     * Output only. The description of the validation error.
     *
     * @generated from protobuf field: optional string description = 6;
     */
    description?: string;
    /**
     * Output only. Set of feed attributes in the feed item flagged during validation. If
     * empty, no specific feed attributes can be associated with the error
     * (for example, error across the entire feed item).
     *
     * @generated from protobuf field: repeated int64 feed_attribute_ids = 7;
     */
    feedAttributeIds: bigint[];
    /**
     * Output only. Any extra information related to this error which is not captured by
     * validation_error and feed_attribute_id (for example, placeholder field IDs
     * when feed_attribute_id is not mapped). Note that extra_info is not
     * localized.
     *
     * @generated from protobuf field: optional string extra_info = 8;
     */
    extraInfo?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class FeedItem$Type extends MessageType<FeedItem> {
    constructor() {
        super("google.ads.googleads.v11.resources.FeedItem", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/FeedItem" } } },
            { no: 11, name: "feed", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/Feed" } } },
            { no: 12, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 13, name: "start_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "end_date_time", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "attribute_values", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FeedItemAttributeValue },
            { no: 7, name: "geo_targeting_restriction", kind: "enum", T: () => ["google.ads.googleads.v11.enums.GeoTargetingRestrictionEnum.GeoTargetingRestriction", GeoTargetingRestrictionEnum_GeoTargetingRestriction] },
            { no: 8, name: "url_custom_parameters", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CustomParameter },
            { no: 9, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FeedItemStatusEnum.FeedItemStatus", FeedItemStatusEnum_FeedItemStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 10, name: "policy_infos", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FeedItemPlaceholderPolicyInfo, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/FeedItem", pattern: ["customers/{customer_id}/feedItems/{feed_id}~{feed_item_id}"] } });
    }
    create(value?: PartialMessage<FeedItem>): FeedItem {
        const message = { resourceName: "", attributeValues: [], geoTargetingRestriction: 0, urlCustomParameters: [], status: 0, policyInfos: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FeedItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeedItem): FeedItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional string feed */ 11:
                    message.feed = reader.string();
                    break;
                case /* optional int64 id */ 12:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* optional string start_date_time */ 13:
                    message.startDateTime = reader.string();
                    break;
                case /* optional string end_date_time */ 14:
                    message.endDateTime = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.resources.FeedItemAttributeValue attribute_values */ 6:
                    message.attributeValues.push(FeedItemAttributeValue.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.enums.GeoTargetingRestrictionEnum.GeoTargetingRestriction geo_targeting_restriction */ 7:
                    message.geoTargetingRestriction = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.common.CustomParameter url_custom_parameters */ 8:
                    message.urlCustomParameters.push(CustomParameter.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.enums.FeedItemStatusEnum.FeedItemStatus status */ 9:
                    message.status = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.resources.FeedItemPlaceholderPolicyInfo policy_infos */ 10:
                    message.policyInfos.push(FeedItemPlaceholderPolicyInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FeedItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional string feed = 11; */
        if (message.feed !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.feed);
        /* optional int64 id = 12; */
        if (message.id !== undefined)
            writer.tag(12, WireType.Varint).int64(message.id);
        /* optional string start_date_time = 13; */
        if (message.startDateTime !== undefined)
            writer.tag(13, WireType.LengthDelimited).string(message.startDateTime);
        /* optional string end_date_time = 14; */
        if (message.endDateTime !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.endDateTime);
        /* repeated google.ads.googleads.v11.resources.FeedItemAttributeValue attribute_values = 6; */
        for (let i = 0; i < message.attributeValues.length; i++)
            FeedItemAttributeValue.internalBinaryWrite(message.attributeValues[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.GeoTargetingRestrictionEnum.GeoTargetingRestriction geo_targeting_restriction = 7; */
        if (message.geoTargetingRestriction !== 0)
            writer.tag(7, WireType.Varint).int32(message.geoTargetingRestriction);
        /* repeated google.ads.googleads.v11.common.CustomParameter url_custom_parameters = 8; */
        for (let i = 0; i < message.urlCustomParameters.length; i++)
            CustomParameter.internalBinaryWrite(message.urlCustomParameters[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.FeedItemStatusEnum.FeedItemStatus status = 9; */
        if (message.status !== 0)
            writer.tag(9, WireType.Varint).int32(message.status);
        /* repeated google.ads.googleads.v11.resources.FeedItemPlaceholderPolicyInfo policy_infos = 10; */
        for (let i = 0; i < message.policyInfos.length; i++)
            FeedItemPlaceholderPolicyInfo.internalBinaryWrite(message.policyInfos[i], writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.FeedItem
 */
export const FeedItem = new FeedItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FeedItemAttributeValue$Type extends MessageType<FeedItemAttributeValue> {
    constructor() {
        super("google.ads.googleads.v11.resources.FeedItemAttributeValue", [
            { no: 11, name: "feed_attribute_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "integer_value", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "boolean_value", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "string_value", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "double_value", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "price_value", kind: "message", T: () => Money },
            { no: 16, name: "integer_values", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 17, name: "boolean_values", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 8 /*ScalarType.BOOL*/ },
            { no: 18, name: "string_values", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "double_values", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
    create(value?: PartialMessage<FeedItemAttributeValue>): FeedItemAttributeValue {
        const message = { integerValues: [], booleanValues: [], stringValues: [], doubleValues: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FeedItemAttributeValue>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeedItemAttributeValue): FeedItemAttributeValue {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 feed_attribute_id */ 11:
                    message.feedAttributeId = reader.int64().toBigInt();
                    break;
                case /* optional int64 integer_value */ 12:
                    message.integerValue = reader.int64().toBigInt();
                    break;
                case /* optional bool boolean_value */ 13:
                    message.booleanValue = reader.bool();
                    break;
                case /* optional string string_value */ 14:
                    message.stringValue = reader.string();
                    break;
                case /* optional double double_value */ 15:
                    message.doubleValue = reader.double();
                    break;
                case /* google.ads.googleads.v11.common.Money price_value */ 6:
                    message.priceValue = Money.internalBinaryRead(reader, reader.uint32(), options, message.priceValue);
                    break;
                case /* repeated int64 integer_values */ 16:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.integerValues.push(reader.int64().toBigInt());
                    else
                        message.integerValues.push(reader.int64().toBigInt());
                    break;
                case /* repeated bool boolean_values */ 17:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.booleanValues.push(reader.bool());
                    else
                        message.booleanValues.push(reader.bool());
                    break;
                case /* repeated string string_values */ 18:
                    message.stringValues.push(reader.string());
                    break;
                case /* repeated double double_values */ 19:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.doubleValues.push(reader.double());
                    else
                        message.doubleValues.push(reader.double());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FeedItemAttributeValue, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 feed_attribute_id = 11; */
        if (message.feedAttributeId !== undefined)
            writer.tag(11, WireType.Varint).int64(message.feedAttributeId);
        /* optional int64 integer_value = 12; */
        if (message.integerValue !== undefined)
            writer.tag(12, WireType.Varint).int64(message.integerValue);
        /* optional bool boolean_value = 13; */
        if (message.booleanValue !== undefined)
            writer.tag(13, WireType.Varint).bool(message.booleanValue);
        /* optional string string_value = 14; */
        if (message.stringValue !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.stringValue);
        /* optional double double_value = 15; */
        if (message.doubleValue !== undefined)
            writer.tag(15, WireType.Bit64).double(message.doubleValue);
        /* google.ads.googleads.v11.common.Money price_value = 6; */
        if (message.priceValue)
            Money.internalBinaryWrite(message.priceValue, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* repeated int64 integer_values = 16; */
        if (message.integerValues.length) {
            writer.tag(16, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.integerValues.length; i++)
                writer.int64(message.integerValues[i]);
            writer.join();
        }
        /* repeated bool boolean_values = 17; */
        if (message.booleanValues.length) {
            writer.tag(17, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.booleanValues.length; i++)
                writer.bool(message.booleanValues[i]);
            writer.join();
        }
        /* repeated string string_values = 18; */
        for (let i = 0; i < message.stringValues.length; i++)
            writer.tag(18, WireType.LengthDelimited).string(message.stringValues[i]);
        /* repeated double double_values = 19; */
        if (message.doubleValues.length) {
            writer.tag(19, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.doubleValues.length; i++)
                writer.double(message.doubleValues[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.FeedItemAttributeValue
 */
export const FeedItemAttributeValue = new FeedItemAttributeValue$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FeedItemPlaceholderPolicyInfo$Type extends MessageType<FeedItemPlaceholderPolicyInfo> {
    constructor() {
        super("google.ads.googleads.v11.resources.FeedItemPlaceholderPolicyInfo", [
            { no: 10, name: "placeholder_type_enum", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType", PlaceholderTypeEnum_PlaceholderType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 11, name: "feed_mapping_resource_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "review_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PolicyReviewStatusEnum.PolicyReviewStatus", PolicyReviewStatusEnum_PolicyReviewStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 4, name: "approval_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.PolicyApprovalStatusEnum.PolicyApprovalStatus", PolicyApprovalStatusEnum_PolicyApprovalStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "policy_topic_entries", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PolicyTopicEntry, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "validation_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FeedItemValidationStatusEnum.FeedItemValidationStatus", FeedItemValidationStatusEnum_FeedItemValidationStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "validation_errors", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FeedItemValidationError, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "quality_approval_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FeedItemQualityApprovalStatusEnum.FeedItemQualityApprovalStatus", FeedItemQualityApprovalStatusEnum_FeedItemQualityApprovalStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 9, name: "quality_disapproval_reasons", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.FeedItemQualityDisapprovalReasonEnum.FeedItemQualityDisapprovalReason", FeedItemQualityDisapprovalReasonEnum_FeedItemQualityDisapprovalReason], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<FeedItemPlaceholderPolicyInfo>): FeedItemPlaceholderPolicyInfo {
        const message = { placeholderTypeEnum: 0, reviewStatus: 0, approvalStatus: 0, policyTopicEntries: [], validationStatus: 0, validationErrors: [], qualityApprovalStatus: 0, qualityDisapprovalReasons: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FeedItemPlaceholderPolicyInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeedItemPlaceholderPolicyInfo): FeedItemPlaceholderPolicyInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type_enum */ 10:
                    message.placeholderTypeEnum = reader.int32();
                    break;
                case /* optional string feed_mapping_resource_name */ 11:
                    message.feedMappingResourceName = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.PolicyReviewStatusEnum.PolicyReviewStatus review_status */ 3:
                    message.reviewStatus = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.PolicyApprovalStatusEnum.PolicyApprovalStatus approval_status */ 4:
                    message.approvalStatus = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.common.PolicyTopicEntry policy_topic_entries */ 5:
                    message.policyTopicEntries.push(PolicyTopicEntry.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.enums.FeedItemValidationStatusEnum.FeedItemValidationStatus validation_status */ 6:
                    message.validationStatus = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.resources.FeedItemValidationError validation_errors */ 7:
                    message.validationErrors.push(FeedItemValidationError.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.enums.FeedItemQualityApprovalStatusEnum.FeedItemQualityApprovalStatus quality_approval_status */ 8:
                    message.qualityApprovalStatus = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.enums.FeedItemQualityDisapprovalReasonEnum.FeedItemQualityDisapprovalReason quality_disapproval_reasons */ 9:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.qualityDisapprovalReasons.push(reader.int32());
                    else
                        message.qualityDisapprovalReasons.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FeedItemPlaceholderPolicyInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.enums.PlaceholderTypeEnum.PlaceholderType placeholder_type_enum = 10; */
        if (message.placeholderTypeEnum !== 0)
            writer.tag(10, WireType.Varint).int32(message.placeholderTypeEnum);
        /* optional string feed_mapping_resource_name = 11; */
        if (message.feedMappingResourceName !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.feedMappingResourceName);
        /* google.ads.googleads.v11.enums.PolicyReviewStatusEnum.PolicyReviewStatus review_status = 3; */
        if (message.reviewStatus !== 0)
            writer.tag(3, WireType.Varint).int32(message.reviewStatus);
        /* google.ads.googleads.v11.enums.PolicyApprovalStatusEnum.PolicyApprovalStatus approval_status = 4; */
        if (message.approvalStatus !== 0)
            writer.tag(4, WireType.Varint).int32(message.approvalStatus);
        /* repeated google.ads.googleads.v11.common.PolicyTopicEntry policy_topic_entries = 5; */
        for (let i = 0; i < message.policyTopicEntries.length; i++)
            PolicyTopicEntry.internalBinaryWrite(message.policyTopicEntries[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.FeedItemValidationStatusEnum.FeedItemValidationStatus validation_status = 6; */
        if (message.validationStatus !== 0)
            writer.tag(6, WireType.Varint).int32(message.validationStatus);
        /* repeated google.ads.googleads.v11.resources.FeedItemValidationError validation_errors = 7; */
        for (let i = 0; i < message.validationErrors.length; i++)
            FeedItemValidationError.internalBinaryWrite(message.validationErrors[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.FeedItemQualityApprovalStatusEnum.FeedItemQualityApprovalStatus quality_approval_status = 8; */
        if (message.qualityApprovalStatus !== 0)
            writer.tag(8, WireType.Varint).int32(message.qualityApprovalStatus);
        /* repeated google.ads.googleads.v11.enums.FeedItemQualityDisapprovalReasonEnum.FeedItemQualityDisapprovalReason quality_disapproval_reasons = 9; */
        if (message.qualityDisapprovalReasons.length) {
            writer.tag(9, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.qualityDisapprovalReasons.length; i++)
                writer.int32(message.qualityDisapprovalReasons[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.FeedItemPlaceholderPolicyInfo
 */
export const FeedItemPlaceholderPolicyInfo = new FeedItemPlaceholderPolicyInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FeedItemValidationError$Type extends MessageType<FeedItemValidationError> {
    constructor() {
        super("google.ads.googleads.v11.resources.FeedItemValidationError", [
            { no: 1, name: "validation_error", kind: "enum", T: () => ["google.ads.googleads.v11.errors.FeedItemValidationErrorEnum.FeedItemValidationError", FeedItemValidationErrorEnum_FeedItemValidationError], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "description", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "feed_attribute_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "extra_info", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<FeedItemValidationError>): FeedItemValidationError {
        const message = { validationError: 0, feedAttributeIds: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FeedItemValidationError>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeedItemValidationError): FeedItemValidationError {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.errors.FeedItemValidationErrorEnum.FeedItemValidationError validation_error */ 1:
                    message.validationError = reader.int32();
                    break;
                case /* optional string description */ 6:
                    message.description = reader.string();
                    break;
                case /* repeated int64 feed_attribute_ids */ 7:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.feedAttributeIds.push(reader.int64().toBigInt());
                    else
                        message.feedAttributeIds.push(reader.int64().toBigInt());
                    break;
                case /* optional string extra_info */ 8:
                    message.extraInfo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FeedItemValidationError, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.errors.FeedItemValidationErrorEnum.FeedItemValidationError validation_error = 1; */
        if (message.validationError !== 0)
            writer.tag(1, WireType.Varint).int32(message.validationError);
        /* optional string description = 6; */
        if (message.description !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.description);
        /* repeated int64 feed_attribute_ids = 7; */
        if (message.feedAttributeIds.length) {
            writer.tag(7, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.feedAttributeIds.length; i++)
                writer.int64(message.feedAttributeIds[i]);
            writer.join();
        }
        /* optional string extra_info = 8; */
        if (message.extraInfo !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.extraInfo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.FeedItemValidationError
 */
export const FeedItemValidationError = new FeedItemValidationError$Type();
