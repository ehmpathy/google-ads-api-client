// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/user_list.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { BasicUserListInfo } from "../common/user_lists";
import { LogicalUserListInfo } from "../common/user_lists";
import { RuleBasedUserListInfo } from "../common/user_lists";
import { SimilarUserListInfo } from "../common/user_lists";
import { CrmBasedUserListInfo } from "../common/user_lists";
import { UserListAccessStatusEnum_UserListAccessStatus } from "../enums/user_list_access_status";
import { AccessReasonEnum_AccessReason } from "../enums/access_reason";
import { UserListClosingReasonEnum_UserListClosingReason } from "../enums/user_list_closing_reason";
import { UserListTypeEnum_UserListType } from "../enums/user_list_type";
import { UserListSizeRangeEnum_UserListSizeRange } from "../enums/user_list_size_range";
import { UserListMembershipStatusEnum_UserListMembershipStatus } from "../enums/user_list_membership_status";
// Proto file describing the User List resource.

/**
 * A user list. This is a list of users a customer may target.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.UserList
 */
export interface UserList {
    /**
     * Immutable. The resource name of the user list.
     * User list resource names have the form:
     *
     * `customers/{customer_id}/userLists/{user_list_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. Id of the user list.
     *
     * @generated from protobuf field: optional int64 id = 25;
     */
    id?: bigint;
    /**
     * Output only. An option that indicates if a user may edit a list. Depends on the list
     * ownership and list type. For example, external remarketing user lists are
     * not editable.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: optional bool read_only = 26;
     */
    readOnly?: boolean;
    /**
     * Name of this user list. Depending on its access_reason, the user list name
     * may not be unique (for example, if access_reason=SHARED)
     *
     * @generated from protobuf field: optional string name = 27;
     */
    name?: string;
    /**
     * Description of this user list.
     *
     * @generated from protobuf field: optional string description = 28;
     */
    description?: string;
    /**
     * Membership status of this user list. Indicates whether a user list is open
     * or active. Only open user lists can accumulate more users and can be
     * targeted to.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListMembershipStatusEnum.UserListMembershipStatus membership_status = 6;
     */
    membershipStatus: UserListMembershipStatusEnum_UserListMembershipStatus;
    /**
     * An ID from external system. It is used by user list sellers to correlate
     * IDs on their systems.
     *
     * @generated from protobuf field: optional string integration_code = 29;
     */
    integrationCode?: string;
    /**
     * Number of days a user's cookie stays on your list since its most recent
     * addition to the list. This field must be between 0 and 540 inclusive.
     * However, for CRM based userlists, this field can be set to 10000 which
     * means no expiration.
     *
     * It'll be ignored for logical_user_list.
     *
     * @generated from protobuf field: optional int64 membership_life_span = 30;
     */
    membershipLifeSpan?: bigint;
    /**
     * Output only. Estimated number of users in this user list, on the Google Display Network.
     * This value is null if the number of users has not yet been determined.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: optional int64 size_for_display = 31;
     */
    sizeForDisplay?: bigint;
    /**
     * Output only. Size range in terms of number of users of the UserList, on the Google
     * Display Network.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListSizeRangeEnum.UserListSizeRange size_range_for_display = 10;
     */
    sizeRangeForDisplay: UserListSizeRangeEnum_UserListSizeRange;
    /**
     * Output only. Estimated number of users in this user list in the google.com domain.
     * These are the users available for targeting in Search campaigns.
     * This value is null if the number of users has not yet been determined.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: optional int64 size_for_search = 32;
     */
    sizeForSearch?: bigint;
    /**
     * Output only. Size range in terms of number of users of the UserList, for Search ads.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListSizeRangeEnum.UserListSizeRange size_range_for_search = 12;
     */
    sizeRangeForSearch: UserListSizeRangeEnum_UserListSizeRange;
    /**
     * Output only. Type of this list.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListTypeEnum.UserListType type = 13;
     */
    type: UserListTypeEnum_UserListType;
    /**
     * Indicating the reason why this user list membership status is closed. It is
     * only populated on lists that were automatically closed due to inactivity,
     * and will be cleared once the list membership status becomes open.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListClosingReasonEnum.UserListClosingReason closing_reason = 14;
     */
    closingReason: UserListClosingReasonEnum_UserListClosingReason;
    /**
     * Output only. Indicates the reason this account has been granted access to the list.
     * The reason can be SHARED, OWNED, LICENSED or SUBSCRIBED.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AccessReasonEnum.AccessReason access_reason = 15;
     */
    accessReason: AccessReasonEnum_AccessReason;
    /**
     * Indicates if this share is still enabled. When a UserList is shared with
     * the user this field is set to ENABLED. Later the userList owner can decide
     * to revoke the share and make it DISABLED.
     * The default value of this field is set to ENABLED.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.UserListAccessStatusEnum.UserListAccessStatus account_user_list_status = 16;
     */
    accountUserListStatus: UserListAccessStatusEnum_UserListAccessStatus;
    /**
     * Indicates if this user list is eligible for Google Search Network.
     *
     * @generated from protobuf field: optional bool eligible_for_search = 33;
     */
    eligibleForSearch?: boolean;
    /**
     * Output only. Indicates this user list is eligible for Google Display Network.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: optional bool eligible_for_display = 34;
     */
    eligibleForDisplay?: boolean;
    /**
     * Output only. Indicates match rate for Customer Match lists. The range of this field is
     * [0-100]. This will be null for other list types or when it's not possible
     * to calculate the match rate.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: optional int32 match_rate_percentage = 24;
     */
    matchRatePercentage?: number;
    /**
     * @generated from protobuf oneof: user_list
     */
    userList: {
        oneofKind: "crmBasedUserList";
        /**
         * User list of CRM users provided by the advertiser.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.CrmBasedUserListInfo crm_based_user_list = 19;
         */
        crmBasedUserList: CrmBasedUserListInfo;
    } | {
        oneofKind: "similarUserList";
        /**
         * Output only. User list which are similar to users from another UserList.
         * These lists are readonly and automatically created by google.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.SimilarUserListInfo similar_user_list = 20;
         */
        similarUserList: SimilarUserListInfo;
    } | {
        oneofKind: "ruleBasedUserList";
        /**
         * User list generated by a rule.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.RuleBasedUserListInfo rule_based_user_list = 21;
         */
        ruleBasedUserList: RuleBasedUserListInfo;
    } | {
        oneofKind: "logicalUserList";
        /**
         * User list that is a custom combination of user lists and user interests.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.LogicalUserListInfo logical_user_list = 22;
         */
        logicalUserList: LogicalUserListInfo;
    } | {
        oneofKind: "basicUserList";
        /**
         * User list targeting as a collection of conversion or remarketing actions.
         *
         * @generated from protobuf field: google.ads.googleads.v11.common.BasicUserListInfo basic_user_list = 23;
         */
        basicUserList: BasicUserListInfo;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class UserList$Type extends MessageType<UserList> {
    constructor() {
        super("google.ads.googleads.v11.resources.UserList", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/UserList" } } },
            { no: 25, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 26, name: "read_only", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 27, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 28, name: "description", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "membership_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListMembershipStatusEnum.UserListMembershipStatus", UserListMembershipStatusEnum_UserListMembershipStatus] },
            { no: 29, name: "integration_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 30, name: "membership_life_span", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 31, name: "size_for_display", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 10, name: "size_range_for_display", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListSizeRangeEnum.UserListSizeRange", UserListSizeRangeEnum_UserListSizeRange], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 32, name: "size_for_search", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 12, name: "size_range_for_search", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListSizeRangeEnum.UserListSizeRange", UserListSizeRangeEnum_UserListSizeRange], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 13, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListTypeEnum.UserListType", UserListTypeEnum_UserListType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 14, name: "closing_reason", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListClosingReasonEnum.UserListClosingReason", UserListClosingReasonEnum_UserListClosingReason] },
            { no: 15, name: "access_reason", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AccessReasonEnum.AccessReason", AccessReasonEnum_AccessReason], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 16, name: "account_user_list_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.UserListAccessStatusEnum.UserListAccessStatus", UserListAccessStatusEnum_UserListAccessStatus] },
            { no: 33, name: "eligible_for_search", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 34, name: "eligible_for_display", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 24, name: "match_rate_percentage", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 19, name: "crm_based_user_list", kind: "message", oneof: "userList", T: () => CrmBasedUserListInfo },
            { no: 20, name: "similar_user_list", kind: "message", oneof: "userList", T: () => SimilarUserListInfo, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 21, name: "rule_based_user_list", kind: "message", oneof: "userList", T: () => RuleBasedUserListInfo },
            { no: 22, name: "logical_user_list", kind: "message", oneof: "userList", T: () => LogicalUserListInfo },
            { no: 23, name: "basic_user_list", kind: "message", oneof: "userList", T: () => BasicUserListInfo }
        ], { "google.api.resource": { type: "googleads.googleapis.com/UserList", pattern: ["customers/{customer_id}/userLists/{user_list_id}"] } });
    }
    create(value?: PartialMessage<UserList>): UserList {
        const message = { resourceName: "", membershipStatus: 0, sizeRangeForDisplay: 0, sizeRangeForSearch: 0, type: 0, closingReason: 0, accessReason: 0, accountUserListStatus: 0, userList: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UserList>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserList): UserList {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional int64 id */ 25:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* optional bool read_only */ 26:
                    message.readOnly = reader.bool();
                    break;
                case /* optional string name */ 27:
                    message.name = reader.string();
                    break;
                case /* optional string description */ 28:
                    message.description = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.UserListMembershipStatusEnum.UserListMembershipStatus membership_status */ 6:
                    message.membershipStatus = reader.int32();
                    break;
                case /* optional string integration_code */ 29:
                    message.integrationCode = reader.string();
                    break;
                case /* optional int64 membership_life_span */ 30:
                    message.membershipLifeSpan = reader.int64().toBigInt();
                    break;
                case /* optional int64 size_for_display */ 31:
                    message.sizeForDisplay = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.enums.UserListSizeRangeEnum.UserListSizeRange size_range_for_display */ 10:
                    message.sizeRangeForDisplay = reader.int32();
                    break;
                case /* optional int64 size_for_search */ 32:
                    message.sizeForSearch = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.enums.UserListSizeRangeEnum.UserListSizeRange size_range_for_search */ 12:
                    message.sizeRangeForSearch = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.UserListTypeEnum.UserListType type */ 13:
                    message.type = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.UserListClosingReasonEnum.UserListClosingReason closing_reason */ 14:
                    message.closingReason = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.AccessReasonEnum.AccessReason access_reason */ 15:
                    message.accessReason = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.UserListAccessStatusEnum.UserListAccessStatus account_user_list_status */ 16:
                    message.accountUserListStatus = reader.int32();
                    break;
                case /* optional bool eligible_for_search */ 33:
                    message.eligibleForSearch = reader.bool();
                    break;
                case /* optional bool eligible_for_display */ 34:
                    message.eligibleForDisplay = reader.bool();
                    break;
                case /* optional int32 match_rate_percentage */ 24:
                    message.matchRatePercentage = reader.int32();
                    break;
                case /* google.ads.googleads.v11.common.CrmBasedUserListInfo crm_based_user_list */ 19:
                    message.userList = {
                        oneofKind: "crmBasedUserList",
                        crmBasedUserList: CrmBasedUserListInfo.internalBinaryRead(reader, reader.uint32(), options, (message.userList as any).crmBasedUserList)
                    };
                    break;
                case /* google.ads.googleads.v11.common.SimilarUserListInfo similar_user_list */ 20:
                    message.userList = {
                        oneofKind: "similarUserList",
                        similarUserList: SimilarUserListInfo.internalBinaryRead(reader, reader.uint32(), options, (message.userList as any).similarUserList)
                    };
                    break;
                case /* google.ads.googleads.v11.common.RuleBasedUserListInfo rule_based_user_list */ 21:
                    message.userList = {
                        oneofKind: "ruleBasedUserList",
                        ruleBasedUserList: RuleBasedUserListInfo.internalBinaryRead(reader, reader.uint32(), options, (message.userList as any).ruleBasedUserList)
                    };
                    break;
                case /* google.ads.googleads.v11.common.LogicalUserListInfo logical_user_list */ 22:
                    message.userList = {
                        oneofKind: "logicalUserList",
                        logicalUserList: LogicalUserListInfo.internalBinaryRead(reader, reader.uint32(), options, (message.userList as any).logicalUserList)
                    };
                    break;
                case /* google.ads.googleads.v11.common.BasicUserListInfo basic_user_list */ 23:
                    message.userList = {
                        oneofKind: "basicUserList",
                        basicUserList: BasicUserListInfo.internalBinaryRead(reader, reader.uint32(), options, (message.userList as any).basicUserList)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserList, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional int64 id = 25; */
        if (message.id !== undefined)
            writer.tag(25, WireType.Varint).int64(message.id);
        /* optional bool read_only = 26; */
        if (message.readOnly !== undefined)
            writer.tag(26, WireType.Varint).bool(message.readOnly);
        /* optional string name = 27; */
        if (message.name !== undefined)
            writer.tag(27, WireType.LengthDelimited).string(message.name);
        /* optional string description = 28; */
        if (message.description !== undefined)
            writer.tag(28, WireType.LengthDelimited).string(message.description);
        /* google.ads.googleads.v11.enums.UserListMembershipStatusEnum.UserListMembershipStatus membership_status = 6; */
        if (message.membershipStatus !== 0)
            writer.tag(6, WireType.Varint).int32(message.membershipStatus);
        /* optional string integration_code = 29; */
        if (message.integrationCode !== undefined)
            writer.tag(29, WireType.LengthDelimited).string(message.integrationCode);
        /* optional int64 membership_life_span = 30; */
        if (message.membershipLifeSpan !== undefined)
            writer.tag(30, WireType.Varint).int64(message.membershipLifeSpan);
        /* optional int64 size_for_display = 31; */
        if (message.sizeForDisplay !== undefined)
            writer.tag(31, WireType.Varint).int64(message.sizeForDisplay);
        /* google.ads.googleads.v11.enums.UserListSizeRangeEnum.UserListSizeRange size_range_for_display = 10; */
        if (message.sizeRangeForDisplay !== 0)
            writer.tag(10, WireType.Varint).int32(message.sizeRangeForDisplay);
        /* optional int64 size_for_search = 32; */
        if (message.sizeForSearch !== undefined)
            writer.tag(32, WireType.Varint).int64(message.sizeForSearch);
        /* google.ads.googleads.v11.enums.UserListSizeRangeEnum.UserListSizeRange size_range_for_search = 12; */
        if (message.sizeRangeForSearch !== 0)
            writer.tag(12, WireType.Varint).int32(message.sizeRangeForSearch);
        /* google.ads.googleads.v11.enums.UserListTypeEnum.UserListType type = 13; */
        if (message.type !== 0)
            writer.tag(13, WireType.Varint).int32(message.type);
        /* google.ads.googleads.v11.enums.UserListClosingReasonEnum.UserListClosingReason closing_reason = 14; */
        if (message.closingReason !== 0)
            writer.tag(14, WireType.Varint).int32(message.closingReason);
        /* google.ads.googleads.v11.enums.AccessReasonEnum.AccessReason access_reason = 15; */
        if (message.accessReason !== 0)
            writer.tag(15, WireType.Varint).int32(message.accessReason);
        /* google.ads.googleads.v11.enums.UserListAccessStatusEnum.UserListAccessStatus account_user_list_status = 16; */
        if (message.accountUserListStatus !== 0)
            writer.tag(16, WireType.Varint).int32(message.accountUserListStatus);
        /* optional bool eligible_for_search = 33; */
        if (message.eligibleForSearch !== undefined)
            writer.tag(33, WireType.Varint).bool(message.eligibleForSearch);
        /* optional bool eligible_for_display = 34; */
        if (message.eligibleForDisplay !== undefined)
            writer.tag(34, WireType.Varint).bool(message.eligibleForDisplay);
        /* optional int32 match_rate_percentage = 24; */
        if (message.matchRatePercentage !== undefined)
            writer.tag(24, WireType.Varint).int32(message.matchRatePercentage);
        /* google.ads.googleads.v11.common.CrmBasedUserListInfo crm_based_user_list = 19; */
        if (message.userList.oneofKind === "crmBasedUserList")
            CrmBasedUserListInfo.internalBinaryWrite(message.userList.crmBasedUserList, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.SimilarUserListInfo similar_user_list = 20; */
        if (message.userList.oneofKind === "similarUserList")
            SimilarUserListInfo.internalBinaryWrite(message.userList.similarUserList, writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.RuleBasedUserListInfo rule_based_user_list = 21; */
        if (message.userList.oneofKind === "ruleBasedUserList")
            RuleBasedUserListInfo.internalBinaryWrite(message.userList.ruleBasedUserList, writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.LogicalUserListInfo logical_user_list = 22; */
        if (message.userList.oneofKind === "logicalUserList")
            LogicalUserListInfo.internalBinaryWrite(message.userList.logicalUserList, writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.common.BasicUserListInfo basic_user_list = 23; */
        if (message.userList.oneofKind === "basicUserList")
            BasicUserListInfo.internalBinaryWrite(message.userList.basicUserList, writer.tag(23, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.UserList
 */
export const UserList = new UserList$Type();
