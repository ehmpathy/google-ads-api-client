// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/customer.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ConversionTrackingStatusEnum_ConversionTrackingStatus } from "../enums/conversion_tracking_status_enum";
import { CustomerStatusEnum_CustomerStatus } from "../enums/customer_status";
import { CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason } from "../enums/customer_pay_per_conversion_eligibility_failure_reason";
// Proto file describing the Customer resource.

/**
 * A customer.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Customer
 */
export interface Customer {
    /**
     * Immutable. The resource name of the customer.
     * Customer resource names have the form:
     *
     * `customers/{customer_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. The ID of the customer.
     *
     * @generated from protobuf field: optional int64 id = 19;
     */
    id?: bigint;
    /**
     * Optional, non-unique descriptive name of the customer.
     *
     * @generated from protobuf field: optional string descriptive_name = 20;
     */
    descriptiveName?: string;
    /**
     * Immutable. The currency in which the account operates.
     * A subset of the currency codes from the ISO 4217 standard is
     * supported.
     *
     * @generated from protobuf field: optional string currency_code = 21;
     */
    currencyCode?: string;
    /**
     * Immutable. The local timezone ID of the customer.
     *
     * @generated from protobuf field: optional string time_zone = 22;
     */
    timeZone?: string;
    /**
     * The URL template for constructing a tracking URL out of parameters.
     *
     * @generated from protobuf field: optional string tracking_url_template = 23;
     */
    trackingUrlTemplate?: string;
    /**
     * The URL template for appending params to the final URL
     *
     * @generated from protobuf field: optional string final_url_suffix = 24;
     */
    finalUrlSuffix?: string;
    /**
     * Whether auto-tagging is enabled for the customer.
     *
     * @generated from protobuf field: optional bool auto_tagging_enabled = 25;
     */
    autoTaggingEnabled?: boolean;
    /**
     * Output only. Whether the Customer has a Partners program badge. If the Customer is not
     * associated with the Partners program, this will be false. For more
     * information, see https://support.google.com/partners/answer/3125774.
     *
     * @generated from protobuf field: optional bool has_partners_badge = 26;
     */
    hasPartnersBadge?: boolean;
    /**
     * Output only. Whether the customer is a manager.
     *
     * @generated from protobuf field: optional bool manager = 27;
     */
    manager?: boolean;
    /**
     * Output only. Whether the customer is a test account.
     *
     * @generated from protobuf field: optional bool test_account = 28;
     */
    testAccount?: boolean;
    /**
     * Call reporting setting for a customer. Only mutable in an `update`
     * operation.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.CallReportingSetting call_reporting_setting = 10;
     */
    callReportingSetting?: CallReportingSetting;
    /**
     * Output only. Conversion tracking setting for a customer.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.ConversionTrackingSetting conversion_tracking_setting = 14;
     */
    conversionTrackingSetting?: ConversionTrackingSetting;
    /**
     * Output only. Remarketing setting for a customer.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.RemarketingSetting remarketing_setting = 15;
     */
    remarketingSetting?: RemarketingSetting;
    /**
     * Output only. Reasons why the customer is not eligible to use PaymentMode.CONVERSIONS. If
     * the list is empty, the customer is eligible. This field is read-only.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.enums.CustomerPayPerConversionEligibilityFailureReasonEnum.CustomerPayPerConversionEligibilityFailureReason pay_per_conversion_eligibility_failure_reasons = 16;
     */
    payPerConversionEligibilityFailureReasons: CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[];
    /**
     * Output only. Optimization score of the customer.
     *
     * Optimization score is an estimate of how well a customer's campaigns are
     * set to perform. It ranges from 0% (0.0) to 100% (1.0). This field is null
     * for all manager customers, and for unscored non-manager customers.
     *
     * See "About optimization score" at
     * https://support.google.com/google-ads/answer/9061546.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: optional double optimization_score = 29;
     */
    optimizationScore?: number;
    /**
     * Output only. Optimization score weight of the customer.
     *
     * Optimization score weight can be used to compare/aggregate optimization
     * scores across multiple non-manager customers. The aggregate optimization
     * score of a manager is computed as the sum over all of their customers of
     * `Customer.optimization_score * Customer.optimization_score_weight`. This
     * field is 0 for all manager customers, and for unscored non-manager
     * customers.
     *
     * This field is read-only.
     *
     * @generated from protobuf field: double optimization_score_weight = 30;
     */
    optimizationScoreWeight: number;
    /**
     * Output only. The status of the customer.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.CustomerStatusEnum.CustomerStatus status = 36;
     */
    status: CustomerStatusEnum_CustomerStatus;
}
/**
 * Call reporting setting for a customer. Only mutable in an `update` operation.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.CallReportingSetting
 */
export interface CallReportingSetting {
    /**
     * Enable reporting of phone call events by redirecting them through Google
     * System.
     *
     * @generated from protobuf field: optional bool call_reporting_enabled = 10;
     */
    callReportingEnabled?: boolean;
    /**
     * Whether to enable call conversion reporting.
     *
     * @generated from protobuf field: optional bool call_conversion_reporting_enabled = 11;
     */
    callConversionReportingEnabled?: boolean;
    /**
     * Customer-level call conversion action to attribute a call conversion to.
     * If not set a default conversion action is used. Only in effect when
     * call_conversion_reporting_enabled is set to true.
     *
     * @generated from protobuf field: optional string call_conversion_action = 12;
     */
    callConversionAction?: string;
}
/**
 * A collection of customer-wide settings related to Google Ads Conversion
 * Tracking.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.ConversionTrackingSetting
 */
export interface ConversionTrackingSetting {
    /**
     * Output only. The conversion tracking id used for this account. This id doesn't indicate
     * whether the customer uses conversion tracking (conversion_tracking_status
     * does). This field is read-only.
     *
     * @generated from protobuf field: optional int64 conversion_tracking_id = 3;
     */
    conversionTrackingId?: bigint;
    /**
     * Output only. The conversion tracking id of the customer's manager. This is set when the
     * customer is opted into cross account conversion tracking, and it overrides
     * conversion_tracking_id. This field can only be managed through the Google
     * Ads UI. This field is read-only.
     *
     * @generated from protobuf field: optional int64 cross_account_conversion_tracking_id = 4;
     */
    crossAccountConversionTrackingId?: bigint;
    /**
     * Output only. Whether the customer has accepted customer data terms. If using
     * cross-account conversion tracking, this value is inherited from the
     * manager. This field is read-only. For more
     * information, see https://support.google.com/adspolicy/answer/7475709.
     *
     * @generated from protobuf field: bool accepted_customer_data_terms = 5;
     */
    acceptedCustomerDataTerms: boolean;
    /**
     * Output only. Conversion tracking status. It indicates whether the customer is using
     * conversion tracking, and who is the conversion tracking owner of this
     * customer. If this customer is using cross-account conversion tracking,
     * the value returned will differ based on the `login-customer-id` of the
     * request.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ConversionTrackingStatusEnum.ConversionTrackingStatus conversion_tracking_status = 6;
     */
    conversionTrackingStatus: ConversionTrackingStatusEnum_ConversionTrackingStatus;
    /**
     * Output only. Whether the customer is opted-in for enhanced conversions
     * for leads. If using cross-account conversion tracking, this value is
     * inherited from the manager. This field is read-only.
     *
     * @generated from protobuf field: bool enhanced_conversions_for_leads_enabled = 7;
     */
    enhancedConversionsForLeadsEnabled: boolean;
    /**
     * Output only. The resource name of the customer where conversions are created and
     * managed. This field is read-only.
     *
     * @generated from protobuf field: string google_ads_conversion_customer = 8;
     */
    googleAdsConversionCustomer: string;
}
/**
 * Remarketing setting for a customer.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.RemarketingSetting
 */
export interface RemarketingSetting {
    /**
     * Output only. The Google tag.
     *
     * @generated from protobuf field: optional string google_global_site_tag = 2;
     */
    googleGlobalSiteTag?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class Customer$Type extends MessageType<Customer> {
    constructor() {
        super("google.ads.googleads.v11.resources.Customer", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/Customer" } } },
            { no: 19, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 20, name: "descriptive_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 21, name: "currency_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 22, name: "time_zone", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 23, name: "tracking_url_template", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 24, name: "final_url_suffix", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 25, name: "auto_tagging_enabled", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 26, name: "has_partners_badge", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 27, name: "manager", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 28, name: "test_account", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 10, name: "call_reporting_setting", kind: "message", T: () => CallReportingSetting },
            { no: 14, name: "conversion_tracking_setting", kind: "message", T: () => ConversionTrackingSetting, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 15, name: "remarketing_setting", kind: "message", T: () => RemarketingSetting, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 16, name: "pay_per_conversion_eligibility_failure_reasons", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.CustomerPayPerConversionEligibilityFailureReasonEnum.CustomerPayPerConversionEligibilityFailureReason", CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 29, name: "optimization_score", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 30, name: "optimization_score_weight", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 36, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.CustomerStatusEnum.CustomerStatus", CustomerStatusEnum_CustomerStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/Customer", pattern: ["customers/{customer_id}"] } });
    }
    create(value?: PartialMessage<Customer>): Customer {
        const message = { resourceName: "", payPerConversionEligibilityFailureReasons: [], optimizationScoreWeight: 0, status: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Customer>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Customer): Customer {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional int64 id */ 19:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* optional string descriptive_name */ 20:
                    message.descriptiveName = reader.string();
                    break;
                case /* optional string currency_code */ 21:
                    message.currencyCode = reader.string();
                    break;
                case /* optional string time_zone */ 22:
                    message.timeZone = reader.string();
                    break;
                case /* optional string tracking_url_template */ 23:
                    message.trackingUrlTemplate = reader.string();
                    break;
                case /* optional string final_url_suffix */ 24:
                    message.finalUrlSuffix = reader.string();
                    break;
                case /* optional bool auto_tagging_enabled */ 25:
                    message.autoTaggingEnabled = reader.bool();
                    break;
                case /* optional bool has_partners_badge */ 26:
                    message.hasPartnersBadge = reader.bool();
                    break;
                case /* optional bool manager */ 27:
                    message.manager = reader.bool();
                    break;
                case /* optional bool test_account */ 28:
                    message.testAccount = reader.bool();
                    break;
                case /* google.ads.googleads.v11.resources.CallReportingSetting call_reporting_setting */ 10:
                    message.callReportingSetting = CallReportingSetting.internalBinaryRead(reader, reader.uint32(), options, message.callReportingSetting);
                    break;
                case /* google.ads.googleads.v11.resources.ConversionTrackingSetting conversion_tracking_setting */ 14:
                    message.conversionTrackingSetting = ConversionTrackingSetting.internalBinaryRead(reader, reader.uint32(), options, message.conversionTrackingSetting);
                    break;
                case /* google.ads.googleads.v11.resources.RemarketingSetting remarketing_setting */ 15:
                    message.remarketingSetting = RemarketingSetting.internalBinaryRead(reader, reader.uint32(), options, message.remarketingSetting);
                    break;
                case /* repeated google.ads.googleads.v11.enums.CustomerPayPerConversionEligibilityFailureReasonEnum.CustomerPayPerConversionEligibilityFailureReason pay_per_conversion_eligibility_failure_reasons */ 16:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.payPerConversionEligibilityFailureReasons.push(reader.int32());
                    else
                        message.payPerConversionEligibilityFailureReasons.push(reader.int32());
                    break;
                case /* optional double optimization_score */ 29:
                    message.optimizationScore = reader.double();
                    break;
                case /* double optimization_score_weight */ 30:
                    message.optimizationScoreWeight = reader.double();
                    break;
                case /* google.ads.googleads.v11.enums.CustomerStatusEnum.CustomerStatus status */ 36:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Customer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional int64 id = 19; */
        if (message.id !== undefined)
            writer.tag(19, WireType.Varint).int64(message.id);
        /* optional string descriptive_name = 20; */
        if (message.descriptiveName !== undefined)
            writer.tag(20, WireType.LengthDelimited).string(message.descriptiveName);
        /* optional string currency_code = 21; */
        if (message.currencyCode !== undefined)
            writer.tag(21, WireType.LengthDelimited).string(message.currencyCode);
        /* optional string time_zone = 22; */
        if (message.timeZone !== undefined)
            writer.tag(22, WireType.LengthDelimited).string(message.timeZone);
        /* optional string tracking_url_template = 23; */
        if (message.trackingUrlTemplate !== undefined)
            writer.tag(23, WireType.LengthDelimited).string(message.trackingUrlTemplate);
        /* optional string final_url_suffix = 24; */
        if (message.finalUrlSuffix !== undefined)
            writer.tag(24, WireType.LengthDelimited).string(message.finalUrlSuffix);
        /* optional bool auto_tagging_enabled = 25; */
        if (message.autoTaggingEnabled !== undefined)
            writer.tag(25, WireType.Varint).bool(message.autoTaggingEnabled);
        /* optional bool has_partners_badge = 26; */
        if (message.hasPartnersBadge !== undefined)
            writer.tag(26, WireType.Varint).bool(message.hasPartnersBadge);
        /* optional bool manager = 27; */
        if (message.manager !== undefined)
            writer.tag(27, WireType.Varint).bool(message.manager);
        /* optional bool test_account = 28; */
        if (message.testAccount !== undefined)
            writer.tag(28, WireType.Varint).bool(message.testAccount);
        /* google.ads.googleads.v11.resources.CallReportingSetting call_reporting_setting = 10; */
        if (message.callReportingSetting)
            CallReportingSetting.internalBinaryWrite(message.callReportingSetting, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.ConversionTrackingSetting conversion_tracking_setting = 14; */
        if (message.conversionTrackingSetting)
            ConversionTrackingSetting.internalBinaryWrite(message.conversionTrackingSetting, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.RemarketingSetting remarketing_setting = 15; */
        if (message.remarketingSetting)
            RemarketingSetting.internalBinaryWrite(message.remarketingSetting, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.enums.CustomerPayPerConversionEligibilityFailureReasonEnum.CustomerPayPerConversionEligibilityFailureReason pay_per_conversion_eligibility_failure_reasons = 16; */
        if (message.payPerConversionEligibilityFailureReasons.length) {
            writer.tag(16, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.payPerConversionEligibilityFailureReasons.length; i++)
                writer.int32(message.payPerConversionEligibilityFailureReasons[i]);
            writer.join();
        }
        /* optional double optimization_score = 29; */
        if (message.optimizationScore !== undefined)
            writer.tag(29, WireType.Bit64).double(message.optimizationScore);
        /* double optimization_score_weight = 30; */
        if (message.optimizationScoreWeight !== 0)
            writer.tag(30, WireType.Bit64).double(message.optimizationScoreWeight);
        /* google.ads.googleads.v11.enums.CustomerStatusEnum.CustomerStatus status = 36; */
        if (message.status !== 0)
            writer.tag(36, WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Customer
 */
export const Customer = new Customer$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CallReportingSetting$Type extends MessageType<CallReportingSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.CallReportingSetting", [
            { no: 10, name: "call_reporting_enabled", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "call_conversion_reporting_enabled", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "call_conversion_action", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/ConversionAction" } } }
        ]);
    }
    create(value?: PartialMessage<CallReportingSetting>): CallReportingSetting {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CallReportingSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CallReportingSetting): CallReportingSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool call_reporting_enabled */ 10:
                    message.callReportingEnabled = reader.bool();
                    break;
                case /* optional bool call_conversion_reporting_enabled */ 11:
                    message.callConversionReportingEnabled = reader.bool();
                    break;
                case /* optional string call_conversion_action */ 12:
                    message.callConversionAction = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CallReportingSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool call_reporting_enabled = 10; */
        if (message.callReportingEnabled !== undefined)
            writer.tag(10, WireType.Varint).bool(message.callReportingEnabled);
        /* optional bool call_conversion_reporting_enabled = 11; */
        if (message.callConversionReportingEnabled !== undefined)
            writer.tag(11, WireType.Varint).bool(message.callConversionReportingEnabled);
        /* optional string call_conversion_action = 12; */
        if (message.callConversionAction !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.callConversionAction);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.CallReportingSetting
 */
export const CallReportingSetting = new CallReportingSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ConversionTrackingSetting$Type extends MessageType<ConversionTrackingSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.ConversionTrackingSetting", [
            { no: 3, name: "conversion_tracking_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 4, name: "cross_account_conversion_tracking_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "accepted_customer_data_terms", kind: "scalar", T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "conversion_tracking_status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ConversionTrackingStatusEnum.ConversionTrackingStatus", ConversionTrackingStatusEnum_ConversionTrackingStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "enhanced_conversions_for_leads_enabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "google_ads_conversion_customer", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<ConversionTrackingSetting>): ConversionTrackingSetting {
        const message = { acceptedCustomerDataTerms: false, conversionTrackingStatus: 0, enhancedConversionsForLeadsEnabled: false, googleAdsConversionCustomer: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ConversionTrackingSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ConversionTrackingSetting): ConversionTrackingSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 conversion_tracking_id */ 3:
                    message.conversionTrackingId = reader.int64().toBigInt();
                    break;
                case /* optional int64 cross_account_conversion_tracking_id */ 4:
                    message.crossAccountConversionTrackingId = reader.int64().toBigInt();
                    break;
                case /* bool accepted_customer_data_terms */ 5:
                    message.acceptedCustomerDataTerms = reader.bool();
                    break;
                case /* google.ads.googleads.v11.enums.ConversionTrackingStatusEnum.ConversionTrackingStatus conversion_tracking_status */ 6:
                    message.conversionTrackingStatus = reader.int32();
                    break;
                case /* bool enhanced_conversions_for_leads_enabled */ 7:
                    message.enhancedConversionsForLeadsEnabled = reader.bool();
                    break;
                case /* string google_ads_conversion_customer */ 8:
                    message.googleAdsConversionCustomer = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ConversionTrackingSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 conversion_tracking_id = 3; */
        if (message.conversionTrackingId !== undefined)
            writer.tag(3, WireType.Varint).int64(message.conversionTrackingId);
        /* optional int64 cross_account_conversion_tracking_id = 4; */
        if (message.crossAccountConversionTrackingId !== undefined)
            writer.tag(4, WireType.Varint).int64(message.crossAccountConversionTrackingId);
        /* bool accepted_customer_data_terms = 5; */
        if (message.acceptedCustomerDataTerms !== false)
            writer.tag(5, WireType.Varint).bool(message.acceptedCustomerDataTerms);
        /* google.ads.googleads.v11.enums.ConversionTrackingStatusEnum.ConversionTrackingStatus conversion_tracking_status = 6; */
        if (message.conversionTrackingStatus !== 0)
            writer.tag(6, WireType.Varint).int32(message.conversionTrackingStatus);
        /* bool enhanced_conversions_for_leads_enabled = 7; */
        if (message.enhancedConversionsForLeadsEnabled !== false)
            writer.tag(7, WireType.Varint).bool(message.enhancedConversionsForLeadsEnabled);
        /* string google_ads_conversion_customer = 8; */
        if (message.googleAdsConversionCustomer !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.googleAdsConversionCustomer);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.ConversionTrackingSetting
 */
export const ConversionTrackingSetting = new ConversionTrackingSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemarketingSetting$Type extends MessageType<RemarketingSetting> {
    constructor() {
        super("google.ads.googleads.v11.resources.RemarketingSetting", [
            { no: 2, name: "google_global_site_tag", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<RemarketingSetting>): RemarketingSetting {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RemarketingSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RemarketingSetting): RemarketingSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string google_global_site_tag */ 2:
                    message.googleGlobalSiteTag = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RemarketingSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string google_global_site_tag = 2; */
        if (message.googleGlobalSiteTag !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.googleGlobalSiteTag);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.RemarketingSetting
 */
export const RemarketingSetting = new RemarketingSetting$Type();
