// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/media_file.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { MimeTypeEnum_MimeType } from "../enums/mime_type";
import { MediaTypeEnum_MediaType } from "../enums/media_type";
// Proto file describing the media file resource.

/**
 * A media file.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.MediaFile
 */
export interface MediaFile {
    /**
     * Immutable. The resource name of the media file.
     * Media file resource names have the form:
     *
     * `customers/{customer_id}/mediaFiles/{media_file_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. The ID of the media file.
     *
     * @generated from protobuf field: optional int64 id = 12;
     */
    id?: bigint;
    /**
     * Immutable. Type of the media file.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.MediaTypeEnum.MediaType type = 5;
     */
    type: MediaTypeEnum_MediaType;
    /**
     * Output only. The mime type of the media file.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.MimeTypeEnum.MimeType mime_type = 6;
     */
    mimeType: MimeTypeEnum_MimeType;
    /**
     * Immutable. The URL of where the original media file was downloaded from (or a file
     * name). Only used for media of type AUDIO and IMAGE.
     *
     * @generated from protobuf field: optional string source_url = 13;
     */
    sourceUrl?: string;
    /**
     * Immutable. The name of the media file. The name can be used by clients to help
     * identify previously uploaded media.
     *
     * @generated from protobuf field: optional string name = 14;
     */
    name?: string;
    /**
     * Output only. The size of the media file in bytes.
     *
     * @generated from protobuf field: optional int64 file_size = 15;
     */
    fileSize?: bigint;
    /**
     * @generated from protobuf oneof: mediatype
     */
    mediatype: {
        oneofKind: "image";
        /**
         * Immutable. Encapsulates an Image.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.MediaImage image = 3;
         */
        image: MediaImage;
    } | {
        oneofKind: "mediaBundle";
        /**
         * Immutable. A ZIP archive media the content of which contains HTML5 assets.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.MediaBundle media_bundle = 4;
         */
        mediaBundle: MediaBundle;
    } | {
        oneofKind: "audio";
        /**
         * Output only. Encapsulates an Audio.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.MediaAudio audio = 10;
         */
        audio: MediaAudio;
    } | {
        oneofKind: "video";
        /**
         * Immutable. Encapsulates a Video.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.MediaVideo video = 11;
         */
        video: MediaVideo;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Encapsulates an Image.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.MediaImage
 */
export interface MediaImage {
    /**
     * Immutable. Raw image data.
     *
     * @generated from protobuf field: optional bytes data = 4;
     */
    data?: Uint8Array;
    /**
     * Output only. The url to the full size version of the image.
     *
     * @generated from protobuf field: optional string full_size_image_url = 2;
     */
    fullSizeImageUrl?: string;
    /**
     * Output only. The url to the preview size version of the image.
     *
     * @generated from protobuf field: optional string preview_size_image_url = 3;
     */
    previewSizeImageUrl?: string;
}
/**
 * Represents a ZIP archive media the content of which contains HTML5 assets.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.MediaBundle
 */
export interface MediaBundle {
    /**
     * Immutable. Raw zipped data.
     *
     * @generated from protobuf field: optional bytes data = 3;
     */
    data?: Uint8Array;
    /**
     * Output only. The url to access the uploaded zipped data.
     * For example, https://tpc.googlesyndication.com/simgad/123
     * This field is read-only.
     *
     * @generated from protobuf field: optional string url = 2;
     */
    url?: string;
}
/**
 * Encapsulates an Audio.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.MediaAudio
 */
export interface MediaAudio {
    /**
     * Output only. The duration of the Audio in milliseconds.
     *
     * @generated from protobuf field: optional int64 ad_duration_millis = 2;
     */
    adDurationMillis?: bigint;
}
/**
 * Encapsulates a Video.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.MediaVideo
 */
export interface MediaVideo {
    /**
     * Output only. The duration of the Video in milliseconds.
     *
     * @generated from protobuf field: optional int64 ad_duration_millis = 5;
     */
    adDurationMillis?: bigint;
    /**
     * Immutable. The YouTube video ID (as seen in YouTube URLs). Adding prefix
     * "https://www.youtube.com/watch?v=" to this ID will get the YouTube
     * streaming URL for this video.
     *
     * @generated from protobuf field: optional string youtube_video_id = 6;
     */
    youtubeVideoId?: string;
    /**
     * Output only. The Advertising Digital Identification code for this video, as defined by
     * the American Association of Advertising Agencies, used mainly for
     * television commercials.
     *
     * @generated from protobuf field: optional string advertising_id_code = 7;
     */
    advertisingIdCode?: string;
    /**
     * Output only. The Industry Standard Commercial Identifier code for this video, used
     * mainly for television commercials.
     *
     * @generated from protobuf field: optional string isci_code = 8;
     */
    isciCode?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class MediaFile$Type extends MessageType<MediaFile> {
    constructor() {
        super("google.ads.googleads.v11.resources.MediaFile", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/MediaFile" } } },
            { no: 12, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.MediaTypeEnum.MediaType", MediaTypeEnum_MediaType], options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 6, name: "mime_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.MimeTypeEnum.MimeType", MimeTypeEnum_MimeType], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 13, name: "source_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 14, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 15, name: "file_size", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "image", kind: "message", oneof: "mediatype", T: () => MediaImage, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 4, name: "media_bundle", kind: "message", oneof: "mediatype", T: () => MediaBundle, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 10, name: "audio", kind: "message", oneof: "mediatype", T: () => MediaAudio, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 11, name: "video", kind: "message", oneof: "mediatype", T: () => MediaVideo, options: { "google.api.field_behavior": ["IMMUTABLE"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/MediaFile", pattern: ["customers/{customer_id}/mediaFiles/{media_file_id}"] } });
    }
    create(value?: PartialMessage<MediaFile>): MediaFile {
        const message = { resourceName: "", type: 0, mimeType: 0, mediatype: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MediaFile>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MediaFile): MediaFile {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional int64 id */ 12:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.enums.MediaTypeEnum.MediaType type */ 5:
                    message.type = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.MimeTypeEnum.MimeType mime_type */ 6:
                    message.mimeType = reader.int32();
                    break;
                case /* optional string source_url */ 13:
                    message.sourceUrl = reader.string();
                    break;
                case /* optional string name */ 14:
                    message.name = reader.string();
                    break;
                case /* optional int64 file_size */ 15:
                    message.fileSize = reader.int64().toBigInt();
                    break;
                case /* google.ads.googleads.v11.resources.MediaImage image */ 3:
                    message.mediatype = {
                        oneofKind: "image",
                        image: MediaImage.internalBinaryRead(reader, reader.uint32(), options, (message.mediatype as any).image)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.MediaBundle media_bundle */ 4:
                    message.mediatype = {
                        oneofKind: "mediaBundle",
                        mediaBundle: MediaBundle.internalBinaryRead(reader, reader.uint32(), options, (message.mediatype as any).mediaBundle)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.MediaAudio audio */ 10:
                    message.mediatype = {
                        oneofKind: "audio",
                        audio: MediaAudio.internalBinaryRead(reader, reader.uint32(), options, (message.mediatype as any).audio)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.MediaVideo video */ 11:
                    message.mediatype = {
                        oneofKind: "video",
                        video: MediaVideo.internalBinaryRead(reader, reader.uint32(), options, (message.mediatype as any).video)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MediaFile, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional int64 id = 12; */
        if (message.id !== undefined)
            writer.tag(12, WireType.Varint).int64(message.id);
        /* google.ads.googleads.v11.enums.MediaTypeEnum.MediaType type = 5; */
        if (message.type !== 0)
            writer.tag(5, WireType.Varint).int32(message.type);
        /* google.ads.googleads.v11.enums.MimeTypeEnum.MimeType mime_type = 6; */
        if (message.mimeType !== 0)
            writer.tag(6, WireType.Varint).int32(message.mimeType);
        /* optional string source_url = 13; */
        if (message.sourceUrl !== undefined)
            writer.tag(13, WireType.LengthDelimited).string(message.sourceUrl);
        /* optional string name = 14; */
        if (message.name !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.name);
        /* optional int64 file_size = 15; */
        if (message.fileSize !== undefined)
            writer.tag(15, WireType.Varint).int64(message.fileSize);
        /* google.ads.googleads.v11.resources.MediaImage image = 3; */
        if (message.mediatype.oneofKind === "image")
            MediaImage.internalBinaryWrite(message.mediatype.image, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.MediaBundle media_bundle = 4; */
        if (message.mediatype.oneofKind === "mediaBundle")
            MediaBundle.internalBinaryWrite(message.mediatype.mediaBundle, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.MediaAudio audio = 10; */
        if (message.mediatype.oneofKind === "audio")
            MediaAudio.internalBinaryWrite(message.mediatype.audio, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.MediaVideo video = 11; */
        if (message.mediatype.oneofKind === "video")
            MediaVideo.internalBinaryWrite(message.mediatype.video, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.MediaFile
 */
export const MediaFile = new MediaFile$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MediaImage$Type extends MessageType<MediaImage> {
    constructor() {
        super("google.ads.googleads.v11.resources.MediaImage", [
            { no: 4, name: "data", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 2, name: "full_size_image_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "preview_size_image_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<MediaImage>): MediaImage {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MediaImage>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MediaImage): MediaImage {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bytes data */ 4:
                    message.data = reader.bytes();
                    break;
                case /* optional string full_size_image_url */ 2:
                    message.fullSizeImageUrl = reader.string();
                    break;
                case /* optional string preview_size_image_url */ 3:
                    message.previewSizeImageUrl = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MediaImage, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bytes data = 4; */
        if (message.data !== undefined)
            writer.tag(4, WireType.LengthDelimited).bytes(message.data);
        /* optional string full_size_image_url = 2; */
        if (message.fullSizeImageUrl !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.fullSizeImageUrl);
        /* optional string preview_size_image_url = 3; */
        if (message.previewSizeImageUrl !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.previewSizeImageUrl);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.MediaImage
 */
export const MediaImage = new MediaImage$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MediaBundle$Type extends MessageType<MediaBundle> {
    constructor() {
        super("google.ads.googleads.v11.resources.MediaBundle", [
            { no: 3, name: "data", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 2, name: "url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<MediaBundle>): MediaBundle {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MediaBundle>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MediaBundle): MediaBundle {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bytes data */ 3:
                    message.data = reader.bytes();
                    break;
                case /* optional string url */ 2:
                    message.url = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MediaBundle, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bytes data = 3; */
        if (message.data !== undefined)
            writer.tag(3, WireType.LengthDelimited).bytes(message.data);
        /* optional string url = 2; */
        if (message.url !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.url);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.MediaBundle
 */
export const MediaBundle = new MediaBundle$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MediaAudio$Type extends MessageType<MediaAudio> {
    constructor() {
        super("google.ads.googleads.v11.resources.MediaAudio", [
            { no: 2, name: "ad_duration_millis", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<MediaAudio>): MediaAudio {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MediaAudio>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MediaAudio): MediaAudio {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 ad_duration_millis */ 2:
                    message.adDurationMillis = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MediaAudio, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 ad_duration_millis = 2; */
        if (message.adDurationMillis !== undefined)
            writer.tag(2, WireType.Varint).int64(message.adDurationMillis);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.MediaAudio
 */
export const MediaAudio = new MediaAudio$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MediaVideo$Type extends MessageType<MediaVideo> {
    constructor() {
        super("google.ads.googleads.v11.resources.MediaVideo", [
            { no: 5, name: "ad_duration_millis", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "youtube_video_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 7, name: "advertising_id_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 8, name: "isci_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<MediaVideo>): MediaVideo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MediaVideo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MediaVideo): MediaVideo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 ad_duration_millis */ 5:
                    message.adDurationMillis = reader.int64().toBigInt();
                    break;
                case /* optional string youtube_video_id */ 6:
                    message.youtubeVideoId = reader.string();
                    break;
                case /* optional string advertising_id_code */ 7:
                    message.advertisingIdCode = reader.string();
                    break;
                case /* optional string isci_code */ 8:
                    message.isciCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MediaVideo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 ad_duration_millis = 5; */
        if (message.adDurationMillis !== undefined)
            writer.tag(5, WireType.Varint).int64(message.adDurationMillis);
        /* optional string youtube_video_id = 6; */
        if (message.youtubeVideoId !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.youtubeVideoId);
        /* optional string advertising_id_code = 7; */
        if (message.advertisingIdCode !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.advertisingIdCode);
        /* optional string isci_code = 8; */
        if (message.isciCode !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.isciCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.MediaVideo
 */
export const MediaVideo = new MediaVideo$Type();
