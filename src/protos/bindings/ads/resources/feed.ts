// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/feed.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { FeedAttributeTypeEnum_FeedAttributeType } from "../enums/feed_attribute_type";
import { AffiliateLocationFeedRelationshipTypeEnum_AffiliateLocationFeedRelationshipType } from "../enums/affiliate_location_feed_relationship_type";
import { FeedStatusEnum_FeedStatus } from "../enums/feed_status";
import { FeedOriginEnum_FeedOrigin } from "../enums/feed_origin";
// Proto file describing the Feed resource.

/**
 * A feed.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Feed
 */
export interface Feed {
    /**
     * Immutable. The resource name of the feed.
     * Feed resource names have the form:
     *
     * `customers/{customer_id}/feeds/{feed_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. The ID of the feed.
     * This field is read-only.
     *
     * @generated from protobuf field: optional int64 id = 11;
     */
    id?: bigint;
    /**
     * Immutable. Name of the feed. Required.
     *
     * @generated from protobuf field: optional string name = 12;
     */
    name?: string;
    /**
     * The Feed's attributes. Required on CREATE, unless
     * system_feed_generation_data is provided, in which case Google Ads will
     * update the feed with the correct attributes.
     * Disallowed on UPDATE. Use attribute_operations to add new attributes.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.resources.FeedAttribute attributes = 4;
     */
    attributes: FeedAttribute[];
    /**
     * The list of operations changing the feed attributes. Attributes can only
     * be added, not removed.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.resources.FeedAttributeOperation attribute_operations = 9;
     */
    attributeOperations: FeedAttributeOperation[];
    /**
     * Immutable. Specifies who manages the FeedAttributes for the Feed.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.FeedOriginEnum.FeedOrigin origin = 5;
     */
    origin: FeedOriginEnum_FeedOrigin;
    /**
     * Output only. Status of the feed.
     * This field is read-only.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.FeedStatusEnum.FeedStatus status = 8;
     */
    status: FeedStatusEnum_FeedStatus;
    /**
     * @generated from protobuf oneof: system_feed_generation_data
     */
    systemFeedGenerationData: {
        oneofKind: "placesLocationFeedData";
        /**
         * Data used to configure a location feed populated from Business Profile.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData places_location_feed_data = 6;
         */
        placesLocationFeedData: Feed_PlacesLocationFeedData;
    } | {
        oneofKind: "affiliateLocationFeedData";
        /**
         * Data used to configure an affiliate location feed populated with
         * the specified chains.
         *
         * @generated from protobuf field: google.ads.googleads.v11.resources.Feed.AffiliateLocationFeedData affiliate_location_feed_data = 7;
         */
        affiliateLocationFeedData: Feed_AffiliateLocationFeedData;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Data used to configure a location feed populated from Business Profile.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData
 */
export interface Feed_PlacesLocationFeedData {
    /**
     * Immutable. Required authentication token (from OAuth API) for the email.
     * This field can only be specified in a create request. All its subfields
     * are not selectable.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData.OAuthInfo oauth_info = 1;
     */
    oauthInfo?: Feed_PlacesLocationFeedData_OAuthInfo;
    /**
     * Email address of a Business Profile or email address of a
     * manager of the Business Profile. Required.
     *
     * @generated from protobuf field: optional string email_address = 7;
     */
    emailAddress?: string;
    /**
     * Plus page ID of the managed business whose locations should be used. If
     * this field is not set, then all businesses accessible by the user
     * (specified by email_address) are used.
     * This field is mutate-only and is not selectable.
     *
     * @generated from protobuf field: string business_account_id = 8;
     */
    businessAccountId: string;
    /**
     * Used to filter Business Profile listings by business name. If
     * business_name_filter is set, only listings with a matching business name
     * are candidates to be sync'd into FeedItems.
     *
     * @generated from protobuf field: optional string business_name_filter = 9;
     */
    businessNameFilter?: string;
    /**
     * Used to filter Business Profile listings by categories. If entries
     * exist in category_filters, only listings that belong to any of the
     * categories are candidates to be sync'd into FeedItems. If no entries
     * exist in category_filters, then all listings are candidates for syncing.
     *
     * @generated from protobuf field: repeated string category_filters = 11;
     */
    categoryFilters: string[];
    /**
     * Used to filter Business Profile listings by labels. If entries exist in
     * label_filters, only listings that has any of the labels set are
     * candidates to be synchronized into FeedItems. If no entries exist in
     * label_filters, then all listings are candidates for syncing.
     *
     * @generated from protobuf field: repeated string label_filters = 12;
     */
    labelFilters: string[];
}
/**
 * Data used for authorization using OAuth.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData.OAuthInfo
 */
export interface Feed_PlacesLocationFeedData_OAuthInfo {
    /**
     * The HTTP method used to obtain authorization.
     *
     * @generated from protobuf field: optional string http_method = 4;
     */
    httpMethod?: string;
    /**
     * The HTTP request URL used to obtain authorization.
     *
     * @generated from protobuf field: optional string http_request_url = 5;
     */
    httpRequestUrl?: string;
    /**
     * The HTTP authorization header used to obtain authorization.
     *
     * @generated from protobuf field: optional string http_authorization_header = 6;
     */
    httpAuthorizationHeader?: string;
}
/**
 * Data used to configure an affiliate location feed populated with the
 * specified chains.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Feed.AffiliateLocationFeedData
 */
export interface Feed_AffiliateLocationFeedData {
    /**
     * The list of chains that the affiliate location feed will sync the
     * locations from.
     *
     * @generated from protobuf field: repeated int64 chain_ids = 3;
     */
    chainIds: bigint[];
    /**
     * The relationship the chains have with the advertiser.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AffiliateLocationFeedRelationshipTypeEnum.AffiliateLocationFeedRelationshipType relationship_type = 2;
     */
    relationshipType: AffiliateLocationFeedRelationshipTypeEnum_AffiliateLocationFeedRelationshipType;
}
/**
 * FeedAttributes define the types of data expected to be present in a Feed. A
 * single FeedAttribute specifies the expected type of the FeedItemAttributes
 * with the same FeedAttributeId. Optionally, a FeedAttribute can be marked as
 * being part of a FeedItem's unique key.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.FeedAttribute
 */
export interface FeedAttribute {
    /**
     * ID of the attribute.
     *
     * @generated from protobuf field: optional int64 id = 5;
     */
    id?: bigint;
    /**
     * The name of the attribute. Required.
     *
     * @generated from protobuf field: optional string name = 6;
     */
    name?: string;
    /**
     * Data type for feed attribute. Required.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.FeedAttributeTypeEnum.FeedAttributeType type = 3;
     */
    type: FeedAttributeTypeEnum_FeedAttributeType;
    /**
     * Indicates that data corresponding to this attribute is part of a
     * FeedItem's unique key. It defaults to false if it is unspecified. Note
     * that a unique key is not required in a Feed's schema, in which case the
     * FeedItems must be referenced by their feed_item_id.
     *
     * @generated from protobuf field: optional bool is_part_of_key = 7;
     */
    isPartOfKey?: boolean;
}
/**
 * Operation to be performed on a feed attribute list in a mutate.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.FeedAttributeOperation
 */
export interface FeedAttributeOperation {
    /**
     * Output only. Type of list operation to perform.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.FeedAttributeOperation.Operator operator = 1;
     */
    operator: FeedAttributeOperation_Operator;
    /**
     * Output only. The feed attribute being added to the list.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.FeedAttribute value = 2;
     */
    value?: FeedAttribute;
}
/**
 * The operator.
 *
 * @generated from protobuf enum google.ads.googleads.v11.resources.FeedAttributeOperation.Operator
 */
export enum FeedAttributeOperation_Operator {
    /**
     * Unspecified.
     *
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * Used for return value only. Represents value unknown in this version.
     *
     * @generated from protobuf enum value: UNKNOWN = 1;
     */
    UNKNOWN = 1,
    /**
     * Add the attribute to the existing attributes.
     *
     * @generated from protobuf enum value: ADD = 2;
     */
    ADD = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class Feed$Type extends MessageType<Feed> {
    constructor() {
        super("google.ads.googleads.v11.resources.Feed", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/Feed" } } },
            { no: 11, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 12, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 4, name: "attributes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FeedAttribute },
            { no: 9, name: "attribute_operations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FeedAttributeOperation },
            { no: 5, name: "origin", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FeedOriginEnum.FeedOrigin", FeedOriginEnum_FeedOrigin], options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 8, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FeedStatusEnum.FeedStatus", FeedStatusEnum_FeedStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 6, name: "places_location_feed_data", kind: "message", oneof: "systemFeedGenerationData", T: () => Feed_PlacesLocationFeedData },
            { no: 7, name: "affiliate_location_feed_data", kind: "message", oneof: "systemFeedGenerationData", T: () => Feed_AffiliateLocationFeedData }
        ], { "google.api.resource": { type: "googleads.googleapis.com/Feed", pattern: ["customers/{customer_id}/feeds/{feed_id}"] } });
    }
    create(value?: PartialMessage<Feed>): Feed {
        const message = { resourceName: "", attributes: [], attributeOperations: [], origin: 0, status: 0, systemFeedGenerationData: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Feed>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Feed): Feed {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional int64 id */ 11:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* optional string name */ 12:
                    message.name = reader.string();
                    break;
                case /* repeated google.ads.googleads.v11.resources.FeedAttribute attributes */ 4:
                    message.attributes.push(FeedAttribute.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated google.ads.googleads.v11.resources.FeedAttributeOperation attribute_operations */ 9:
                    message.attributeOperations.push(FeedAttributeOperation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* google.ads.googleads.v11.enums.FeedOriginEnum.FeedOrigin origin */ 5:
                    message.origin = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.FeedStatusEnum.FeedStatus status */ 8:
                    message.status = reader.int32();
                    break;
                case /* google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData places_location_feed_data */ 6:
                    message.systemFeedGenerationData = {
                        oneofKind: "placesLocationFeedData",
                        placesLocationFeedData: Feed_PlacesLocationFeedData.internalBinaryRead(reader, reader.uint32(), options, (message.systemFeedGenerationData as any).placesLocationFeedData)
                    };
                    break;
                case /* google.ads.googleads.v11.resources.Feed.AffiliateLocationFeedData affiliate_location_feed_data */ 7:
                    message.systemFeedGenerationData = {
                        oneofKind: "affiliateLocationFeedData",
                        affiliateLocationFeedData: Feed_AffiliateLocationFeedData.internalBinaryRead(reader, reader.uint32(), options, (message.systemFeedGenerationData as any).affiliateLocationFeedData)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Feed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional int64 id = 11; */
        if (message.id !== undefined)
            writer.tag(11, WireType.Varint).int64(message.id);
        /* optional string name = 12; */
        if (message.name !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.name);
        /* repeated google.ads.googleads.v11.resources.FeedAttribute attributes = 4; */
        for (let i = 0; i < message.attributes.length; i++)
            FeedAttribute.internalBinaryWrite(message.attributes[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* repeated google.ads.googleads.v11.resources.FeedAttributeOperation attribute_operations = 9; */
        for (let i = 0; i < message.attributeOperations.length; i++)
            FeedAttributeOperation.internalBinaryWrite(message.attributeOperations[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.enums.FeedOriginEnum.FeedOrigin origin = 5; */
        if (message.origin !== 0)
            writer.tag(5, WireType.Varint).int32(message.origin);
        /* google.ads.googleads.v11.enums.FeedStatusEnum.FeedStatus status = 8; */
        if (message.status !== 0)
            writer.tag(8, WireType.Varint).int32(message.status);
        /* google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData places_location_feed_data = 6; */
        if (message.systemFeedGenerationData.oneofKind === "placesLocationFeedData")
            Feed_PlacesLocationFeedData.internalBinaryWrite(message.systemFeedGenerationData.placesLocationFeedData, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* google.ads.googleads.v11.resources.Feed.AffiliateLocationFeedData affiliate_location_feed_data = 7; */
        if (message.systemFeedGenerationData.oneofKind === "affiliateLocationFeedData")
            Feed_AffiliateLocationFeedData.internalBinaryWrite(message.systemFeedGenerationData.affiliateLocationFeedData, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Feed
 */
export const Feed = new Feed$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Feed_PlacesLocationFeedData$Type extends MessageType<Feed_PlacesLocationFeedData> {
    constructor() {
        super("google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData", [
            { no: 1, name: "oauth_info", kind: "message", T: () => Feed_PlacesLocationFeedData_OAuthInfo, options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 7, name: "email_address", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "business_account_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "business_name_filter", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "category_filters", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "label_filters", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Feed_PlacesLocationFeedData>): Feed_PlacesLocationFeedData {
        const message = { businessAccountId: "", categoryFilters: [], labelFilters: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Feed_PlacesLocationFeedData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Feed_PlacesLocationFeedData): Feed_PlacesLocationFeedData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData.OAuthInfo oauth_info */ 1:
                    message.oauthInfo = Feed_PlacesLocationFeedData_OAuthInfo.internalBinaryRead(reader, reader.uint32(), options, message.oauthInfo);
                    break;
                case /* optional string email_address */ 7:
                    message.emailAddress = reader.string();
                    break;
                case /* string business_account_id */ 8:
                    message.businessAccountId = reader.string();
                    break;
                case /* optional string business_name_filter */ 9:
                    message.businessNameFilter = reader.string();
                    break;
                case /* repeated string category_filters */ 11:
                    message.categoryFilters.push(reader.string());
                    break;
                case /* repeated string label_filters */ 12:
                    message.labelFilters.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Feed_PlacesLocationFeedData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData.OAuthInfo oauth_info = 1; */
        if (message.oauthInfo)
            Feed_PlacesLocationFeedData_OAuthInfo.internalBinaryWrite(message.oauthInfo, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional string email_address = 7; */
        if (message.emailAddress !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.emailAddress);
        /* string business_account_id = 8; */
        if (message.businessAccountId !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.businessAccountId);
        /* optional string business_name_filter = 9; */
        if (message.businessNameFilter !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.businessNameFilter);
        /* repeated string category_filters = 11; */
        for (let i = 0; i < message.categoryFilters.length; i++)
            writer.tag(11, WireType.LengthDelimited).string(message.categoryFilters[i]);
        /* repeated string label_filters = 12; */
        for (let i = 0; i < message.labelFilters.length; i++)
            writer.tag(12, WireType.LengthDelimited).string(message.labelFilters[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData
 */
export const Feed_PlacesLocationFeedData = new Feed_PlacesLocationFeedData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Feed_PlacesLocationFeedData_OAuthInfo$Type extends MessageType<Feed_PlacesLocationFeedData_OAuthInfo> {
    constructor() {
        super("google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData.OAuthInfo", [
            { no: 4, name: "http_method", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "http_request_url", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "http_authorization_header", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<Feed_PlacesLocationFeedData_OAuthInfo>): Feed_PlacesLocationFeedData_OAuthInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Feed_PlacesLocationFeedData_OAuthInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Feed_PlacesLocationFeedData_OAuthInfo): Feed_PlacesLocationFeedData_OAuthInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string http_method */ 4:
                    message.httpMethod = reader.string();
                    break;
                case /* optional string http_request_url */ 5:
                    message.httpRequestUrl = reader.string();
                    break;
                case /* optional string http_authorization_header */ 6:
                    message.httpAuthorizationHeader = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Feed_PlacesLocationFeedData_OAuthInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string http_method = 4; */
        if (message.httpMethod !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.httpMethod);
        /* optional string http_request_url = 5; */
        if (message.httpRequestUrl !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.httpRequestUrl);
        /* optional string http_authorization_header = 6; */
        if (message.httpAuthorizationHeader !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.httpAuthorizationHeader);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Feed.PlacesLocationFeedData.OAuthInfo
 */
export const Feed_PlacesLocationFeedData_OAuthInfo = new Feed_PlacesLocationFeedData_OAuthInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Feed_AffiliateLocationFeedData$Type extends MessageType<Feed_AffiliateLocationFeedData> {
    constructor() {
        super("google.ads.googleads.v11.resources.Feed.AffiliateLocationFeedData", [
            { no: 3, name: "chain_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "relationship_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AffiliateLocationFeedRelationshipTypeEnum.AffiliateLocationFeedRelationshipType", AffiliateLocationFeedRelationshipTypeEnum_AffiliateLocationFeedRelationshipType] }
        ]);
    }
    create(value?: PartialMessage<Feed_AffiliateLocationFeedData>): Feed_AffiliateLocationFeedData {
        const message = { chainIds: [], relationshipType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Feed_AffiliateLocationFeedData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Feed_AffiliateLocationFeedData): Feed_AffiliateLocationFeedData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated int64 chain_ids */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.chainIds.push(reader.int64().toBigInt());
                    else
                        message.chainIds.push(reader.int64().toBigInt());
                    break;
                case /* google.ads.googleads.v11.enums.AffiliateLocationFeedRelationshipTypeEnum.AffiliateLocationFeedRelationshipType relationship_type */ 2:
                    message.relationshipType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Feed_AffiliateLocationFeedData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated int64 chain_ids = 3; */
        if (message.chainIds.length) {
            writer.tag(3, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.chainIds.length; i++)
                writer.int64(message.chainIds[i]);
            writer.join();
        }
        /* google.ads.googleads.v11.enums.AffiliateLocationFeedRelationshipTypeEnum.AffiliateLocationFeedRelationshipType relationship_type = 2; */
        if (message.relationshipType !== 0)
            writer.tag(2, WireType.Varint).int32(message.relationshipType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Feed.AffiliateLocationFeedData
 */
export const Feed_AffiliateLocationFeedData = new Feed_AffiliateLocationFeedData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FeedAttribute$Type extends MessageType<FeedAttribute> {
    constructor() {
        super("google.ads.googleads.v11.resources.FeedAttribute", [
            { no: 5, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.FeedAttributeTypeEnum.FeedAttributeType", FeedAttributeTypeEnum_FeedAttributeType] },
            { no: 7, name: "is_part_of_key", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<FeedAttribute>): FeedAttribute {
        const message = { type: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FeedAttribute>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeedAttribute): FeedAttribute {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 id */ 5:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* optional string name */ 6:
                    message.name = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.FeedAttributeTypeEnum.FeedAttributeType type */ 3:
                    message.type = reader.int32();
                    break;
                case /* optional bool is_part_of_key */ 7:
                    message.isPartOfKey = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FeedAttribute, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 id = 5; */
        if (message.id !== undefined)
            writer.tag(5, WireType.Varint).int64(message.id);
        /* optional string name = 6; */
        if (message.name !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.name);
        /* google.ads.googleads.v11.enums.FeedAttributeTypeEnum.FeedAttributeType type = 3; */
        if (message.type !== 0)
            writer.tag(3, WireType.Varint).int32(message.type);
        /* optional bool is_part_of_key = 7; */
        if (message.isPartOfKey !== undefined)
            writer.tag(7, WireType.Varint).bool(message.isPartOfKey);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.FeedAttribute
 */
export const FeedAttribute = new FeedAttribute$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FeedAttributeOperation$Type extends MessageType<FeedAttributeOperation> {
    constructor() {
        super("google.ads.googleads.v11.resources.FeedAttributeOperation", [
            { no: 1, name: "operator", kind: "enum", T: () => ["google.ads.googleads.v11.resources.FeedAttributeOperation.Operator", FeedAttributeOperation_Operator], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 2, name: "value", kind: "message", T: () => FeedAttribute, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } }
        ]);
    }
    create(value?: PartialMessage<FeedAttributeOperation>): FeedAttributeOperation {
        const message = { operator: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FeedAttributeOperation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeedAttributeOperation): FeedAttributeOperation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.ads.googleads.v11.resources.FeedAttributeOperation.Operator operator */ 1:
                    message.operator = reader.int32();
                    break;
                case /* google.ads.googleads.v11.resources.FeedAttribute value */ 2:
                    message.value = FeedAttribute.internalBinaryRead(reader, reader.uint32(), options, message.value);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FeedAttributeOperation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.ads.googleads.v11.resources.FeedAttributeOperation.Operator operator = 1; */
        if (message.operator !== 0)
            writer.tag(1, WireType.Varint).int32(message.operator);
        /* google.ads.googleads.v11.resources.FeedAttribute value = 2; */
        if (message.value)
            FeedAttribute.internalBinaryWrite(message.value, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.FeedAttributeOperation
 */
export const FeedAttributeOperation = new FeedAttributeOperation$Type();
