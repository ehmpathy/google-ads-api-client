// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/label.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { TextLabel } from "../common/text_label";
import { LabelStatusEnum_LabelStatus } from "../enums/label_status";
/**
 * A label.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.Label
 */
export interface Label {
    /**
     * Immutable. Name of the resource.
     * Label resource names have the form:
     * `customers/{customer_id}/labels/{label_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. ID of the label. Read only.
     *
     * @generated from protobuf field: optional int64 id = 6;
     */
    id?: bigint;
    /**
     * The name of the label.
     *
     * This field is required and should not be empty when creating a new label.
     *
     * The length of this string should be between 1 and 80, inclusive.
     *
     * @generated from protobuf field: optional string name = 7;
     */
    name?: string;
    /**
     * Output only. Status of the label. Read only.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.LabelStatusEnum.LabelStatus status = 4;
     */
    status: LabelStatusEnum_LabelStatus;
    /**
     * A type of label displaying text on a colored background.
     *
     * @generated from protobuf field: google.ads.googleads.v11.common.TextLabel text_label = 5;
     */
    textLabel?: TextLabel;
}
// @generated message type with reflection information, may provide speed optimized methods
class Label$Type extends MessageType<Label> {
    constructor() {
        super("google.ads.googleads.v11.resources.Label", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/Label" } } },
            { no: 6, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 7, name: "name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.LabelStatusEnum.LabelStatus", LabelStatusEnum_LabelStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "text_label", kind: "message", T: () => TextLabel }
        ], { "google.api.resource": { type: "googleads.googleapis.com/Label", pattern: ["customers/{customer_id}/labels/{label_id}"] } });
    }
    create(value?: PartialMessage<Label>): Label {
        const message = { resourceName: "", status: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Label>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Label): Label {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional int64 id */ 6:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* optional string name */ 7:
                    message.name = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.LabelStatusEnum.LabelStatus status */ 4:
                    message.status = reader.int32();
                    break;
                case /* google.ads.googleads.v11.common.TextLabel text_label */ 5:
                    message.textLabel = TextLabel.internalBinaryRead(reader, reader.uint32(), options, message.textLabel);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Label, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional int64 id = 6; */
        if (message.id !== undefined)
            writer.tag(6, WireType.Varint).int64(message.id);
        /* optional string name = 7; */
        if (message.name !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.name);
        /* google.ads.googleads.v11.enums.LabelStatusEnum.LabelStatus status = 4; */
        if (message.status !== 0)
            writer.tag(4, WireType.Varint).int32(message.status);
        /* google.ads.googleads.v11.common.TextLabel text_label = 5; */
        if (message.textLabel)
            TextLabel.internalBinaryWrite(message.textLabel, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.Label
 */
export const Label = new Label$Type();
