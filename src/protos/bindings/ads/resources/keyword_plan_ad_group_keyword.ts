// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/keyword_plan_ad_group_keyword.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { KeywordMatchTypeEnum_KeywordMatchType } from "../enums/keyword_match_type";
// Proto file describing the keyword plan ad group keyword resource.

/**
 * A Keyword Plan ad group keyword.
 * Max number of keyword plan keywords per plan: 10000.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.KeywordPlanAdGroupKeyword
 */
export interface KeywordPlanAdGroupKeyword {
    /**
     * Immutable. The resource name of the Keyword Plan ad group keyword.
     * KeywordPlanAdGroupKeyword resource names have the form:
     *
     * `customers/{customer_id}/keywordPlanAdGroupKeywords/{kp_ad_group_keyword_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * The Keyword Plan ad group to which this keyword belongs.
     *
     * @generated from protobuf field: optional string keyword_plan_ad_group = 8;
     */
    keywordPlanAdGroup?: string;
    /**
     * Output only. The ID of the Keyword Plan keyword.
     *
     * @generated from protobuf field: optional int64 id = 9;
     */
    id?: bigint;
    /**
     * The keyword text.
     *
     * @generated from protobuf field: optional string text = 10;
     */
    text?: string;
    /**
     * The keyword match type.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.KeywordMatchTypeEnum.KeywordMatchType match_type = 5;
     */
    matchType: KeywordMatchTypeEnum_KeywordMatchType;
    /**
     * A keyword level max cpc bid in micros (for example, $1 = 1mm). The currency
     * is the same as the account currency code. This will override any CPC bid
     * set at the keyword plan ad group level. Not applicable for negative
     * keywords. (negative = true) This field is Optional.
     *
     * @generated from protobuf field: optional int64 cpc_bid_micros = 11;
     */
    cpcBidMicros?: bigint;
    /**
     * Immutable. If true, the keyword is negative.
     *
     * @generated from protobuf field: optional bool negative = 12;
     */
    negative?: boolean;
}
// @generated message type with reflection information, may provide speed optimized methods
class KeywordPlanAdGroupKeyword$Type extends MessageType<KeywordPlanAdGroupKeyword> {
    constructor() {
        super("google.ads.googleads.v11.resources.KeywordPlanAdGroupKeyword", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/KeywordPlanAdGroupKeyword" } } },
            { no: 8, name: "keyword_plan_ad_group", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/KeywordPlanAdGroup" } } },
            { no: 9, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 10, name: "text", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "match_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.KeywordMatchTypeEnum.KeywordMatchType", KeywordMatchTypeEnum_KeywordMatchType] },
            { no: 11, name: "cpc_bid_micros", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "negative", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/, options: { "google.api.field_behavior": ["IMMUTABLE"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/KeywordPlanAdGroupKeyword", pattern: ["customers/{customer_id}/keywordPlanAdGroupKeywords/{keyword_plan_ad_group_keyword_id}"] } });
    }
    create(value?: PartialMessage<KeywordPlanAdGroupKeyword>): KeywordPlanAdGroupKeyword {
        const message = { resourceName: "", matchType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<KeywordPlanAdGroupKeyword>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeywordPlanAdGroupKeyword): KeywordPlanAdGroupKeyword {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* optional string keyword_plan_ad_group */ 8:
                    message.keywordPlanAdGroup = reader.string();
                    break;
                case /* optional int64 id */ 9:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* optional string text */ 10:
                    message.text = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.KeywordMatchTypeEnum.KeywordMatchType match_type */ 5:
                    message.matchType = reader.int32();
                    break;
                case /* optional int64 cpc_bid_micros */ 11:
                    message.cpcBidMicros = reader.int64().toBigInt();
                    break;
                case /* optional bool negative */ 12:
                    message.negative = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: KeywordPlanAdGroupKeyword, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* optional string keyword_plan_ad_group = 8; */
        if (message.keywordPlanAdGroup !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.keywordPlanAdGroup);
        /* optional int64 id = 9; */
        if (message.id !== undefined)
            writer.tag(9, WireType.Varint).int64(message.id);
        /* optional string text = 10; */
        if (message.text !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.text);
        /* google.ads.googleads.v11.enums.KeywordMatchTypeEnum.KeywordMatchType match_type = 5; */
        if (message.matchType !== 0)
            writer.tag(5, WireType.Varint).int32(message.matchType);
        /* optional int64 cpc_bid_micros = 11; */
        if (message.cpcBidMicros !== undefined)
            writer.tag(11, WireType.Varint).int64(message.cpcBidMicros);
        /* optional bool negative = 12; */
        if (message.negative !== undefined)
            writer.tag(12, WireType.Varint).bool(message.negative);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.KeywordPlanAdGroupKeyword
 */
export const KeywordPlanAdGroupKeyword = new KeywordPlanAdGroupKeyword$Type();
