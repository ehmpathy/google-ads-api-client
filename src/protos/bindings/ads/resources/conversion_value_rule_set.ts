// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/conversion_value_rule_set.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ConversionActionCategoryEnum_ConversionActionCategory } from "../enums/conversion_action_category";
import { ConversionValueRuleSetStatusEnum_ConversionValueRuleSetStatus } from "../enums/conversion_value_rule_set_status";
import { ValueRuleSetAttachmentTypeEnum_ValueRuleSetAttachmentType } from "../enums/value_rule_set_attachment_type";
import { ValueRuleSetDimensionEnum_ValueRuleSetDimension } from "../enums/value_rule_set_dimension";
// Proto file describing the Conversion Value Rule Set resource.

/**
 * A conversion value rule set
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.ConversionValueRuleSet
 */
export interface ConversionValueRuleSet {
    /**
     * Immutable. The resource name of the conversion value rule set.
     * Conversion value rule set resource names have the form:
     *
     * `customers/{customer_id}/conversionValueRuleSets/{conversion_value_rule_set_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Output only. The ID of the conversion value rule set.
     *
     * @generated from protobuf field: int64 id = 2;
     */
    id: bigint;
    /**
     * Resource names of rules within the rule set.
     *
     * @generated from protobuf field: repeated string conversion_value_rules = 3;
     */
    conversionValueRules: string[];
    /**
     * Defines dimensions for Value Rule conditions. The condition types of value
     * rules within this value rule set must be of these dimensions. The first
     * entry in this list is the primary dimension of the included value rules.
     * When using value rule primary dimension segmentation, conversion values
     * will be segmented into the values adjusted by value rules and the original
     * values, if some value rules apply.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.enums.ValueRuleSetDimensionEnum.ValueRuleSetDimension dimensions = 4;
     */
    dimensions: ValueRuleSetDimensionEnum_ValueRuleSetDimension[];
    /**
     * Output only. The resource name of the conversion value rule set's owner customer.
     * When the value rule set is inherited from a manager
     * customer, owner_customer will be the resource name of the manager whereas
     * the customer in the resource_name will be of the requesting serving
     * customer.
     * ** Read-only **
     *
     * @generated from protobuf field: string owner_customer = 5;
     */
    ownerCustomer: string;
    /**
     * Immutable. Defines the scope where the conversion value rule set is attached.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ValueRuleSetAttachmentTypeEnum.ValueRuleSetAttachmentType attachment_type = 6;
     */
    attachmentType: ValueRuleSetAttachmentTypeEnum_ValueRuleSetAttachmentType;
    /**
     * The resource name of the campaign when the conversion value rule
     * set is attached to a campaign.
     *
     * @generated from protobuf field: string campaign = 7;
     */
    campaign: string;
    /**
     * Output only. The status of the conversion value rule set.
     * ** Read-only **
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.ConversionValueRuleSetStatusEnum.ConversionValueRuleSetStatus status = 8;
     */
    status: ConversionValueRuleSetStatusEnum_ConversionValueRuleSetStatus;
    /**
     * Immutable. The conversion action categories of the conversion value rule set.
     *
     * @generated from protobuf field: repeated google.ads.googleads.v11.enums.ConversionActionCategoryEnum.ConversionActionCategory conversion_action_categories = 9;
     */
    conversionActionCategories: ConversionActionCategoryEnum_ConversionActionCategory[];
}
// @generated message type with reflection information, may provide speed optimized methods
class ConversionValueRuleSet$Type extends MessageType<ConversionValueRuleSet> {
    constructor() {
        super("google.ads.googleads.v11.resources.ConversionValueRuleSet", [
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/ConversionValueRuleSet" } } },
            { no: 2, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 3, name: "conversion_value_rules", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/ConversionValueRule" } } },
            { no: 4, name: "dimensions", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.ValueRuleSetDimensionEnum.ValueRuleSetDimension", ValueRuleSetDimensionEnum_ValueRuleSetDimension] },
            { no: 5, name: "owner_customer", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"], "google.api.resource_reference": { type: "googleads.googleapis.com/Customer" } } },
            { no: 6, name: "attachment_type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ValueRuleSetAttachmentTypeEnum.ValueRuleSetAttachmentType", ValueRuleSetAttachmentTypeEnum_ValueRuleSetAttachmentType], options: { "google.api.field_behavior": ["IMMUTABLE"] } },
            { no: 7, name: "campaign", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.resource_reference": { type: "googleads.googleapis.com/Campaign" } } },
            { no: 8, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.ConversionValueRuleSetStatusEnum.ConversionValueRuleSetStatus", ConversionValueRuleSetStatusEnum_ConversionValueRuleSetStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 9, name: "conversion_action_categories", kind: "enum", repeat: 1 /*RepeatType.PACKED*/, T: () => ["google.ads.googleads.v11.enums.ConversionActionCategoryEnum.ConversionActionCategory", ConversionActionCategoryEnum_ConversionActionCategory], options: { "google.api.field_behavior": ["IMMUTABLE"] } }
        ], { "google.api.resource": { type: "googleads.googleapis.com/ConversionValueRuleSet", pattern: ["customers/{customer_id}/conversionValueRuleSets/{conversion_value_rule_set_id}"] } });
    }
    create(value?: PartialMessage<ConversionValueRuleSet>): ConversionValueRuleSet {
        const message = { resourceName: "", id: 0n, conversionValueRules: [], dimensions: [], ownerCustomer: "", attachmentType: 0, campaign: "", status: 0, conversionActionCategories: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ConversionValueRuleSet>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ConversionValueRuleSet): ConversionValueRuleSet {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* int64 id */ 2:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* repeated string conversion_value_rules */ 3:
                    message.conversionValueRules.push(reader.string());
                    break;
                case /* repeated google.ads.googleads.v11.enums.ValueRuleSetDimensionEnum.ValueRuleSetDimension dimensions */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.dimensions.push(reader.int32());
                    else
                        message.dimensions.push(reader.int32());
                    break;
                case /* string owner_customer */ 5:
                    message.ownerCustomer = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.ValueRuleSetAttachmentTypeEnum.ValueRuleSetAttachmentType attachment_type */ 6:
                    message.attachmentType = reader.int32();
                    break;
                case /* string campaign */ 7:
                    message.campaign = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.ConversionValueRuleSetStatusEnum.ConversionValueRuleSetStatus status */ 8:
                    message.status = reader.int32();
                    break;
                case /* repeated google.ads.googleads.v11.enums.ConversionActionCategoryEnum.ConversionActionCategory conversion_action_categories */ 9:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.conversionActionCategories.push(reader.int32());
                    else
                        message.conversionActionCategories.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ConversionValueRuleSet, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* int64 id = 2; */
        if (message.id !== 0n)
            writer.tag(2, WireType.Varint).int64(message.id);
        /* repeated string conversion_value_rules = 3; */
        for (let i = 0; i < message.conversionValueRules.length; i++)
            writer.tag(3, WireType.LengthDelimited).string(message.conversionValueRules[i]);
        /* repeated google.ads.googleads.v11.enums.ValueRuleSetDimensionEnum.ValueRuleSetDimension dimensions = 4; */
        if (message.dimensions.length) {
            writer.tag(4, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.dimensions.length; i++)
                writer.int32(message.dimensions[i]);
            writer.join();
        }
        /* string owner_customer = 5; */
        if (message.ownerCustomer !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.ownerCustomer);
        /* google.ads.googleads.v11.enums.ValueRuleSetAttachmentTypeEnum.ValueRuleSetAttachmentType attachment_type = 6; */
        if (message.attachmentType !== 0)
            writer.tag(6, WireType.Varint).int32(message.attachmentType);
        /* string campaign = 7; */
        if (message.campaign !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.campaign);
        /* google.ads.googleads.v11.enums.ConversionValueRuleSetStatusEnum.ConversionValueRuleSetStatus status = 8; */
        if (message.status !== 0)
            writer.tag(8, WireType.Varint).int32(message.status);
        /* repeated google.ads.googleads.v11.enums.ConversionActionCategoryEnum.ConversionActionCategory conversion_action_categories = 9; */
        if (message.conversionActionCategories.length) {
            writer.tag(9, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.conversionActionCategories.length; i++)
                writer.int32(message.conversionActionCategories[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.ConversionValueRuleSet
 */
export const ConversionValueRuleSet = new ConversionValueRuleSet$Type();
