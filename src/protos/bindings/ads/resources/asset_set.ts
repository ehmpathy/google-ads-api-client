// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "ads/resources/asset_set.proto" (package "google.ads.googleads.v11.resources", syntax proto3)
// tslint:disable
//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { AssetSetStatusEnum_AssetSetStatus } from "../enums/asset_set_status";
import { AssetSetTypeEnum_AssetSetType } from "../enums/asset_set_type";
/**
 * An asset set representing a collection of assets.
 * Use AssetSetAsset to link an asset to the asset set.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AssetSet
 */
export interface AssetSet {
    /**
     * Output only. The ID of the asset set.
     *
     * @generated from protobuf field: int64 id = 6;
     */
    id: bigint;
    /**
     * Immutable. The resource name of the asset set.
     * Asset set resource names have the form:
     *
     * `customers/{customer_id}/assetSets/{asset_set_id}`
     *
     * @generated from protobuf field: string resource_name = 1;
     */
    resourceName: string;
    /**
     * Required. Name of the asset set. Required. It must have a minimum length of 1 and
     * maximum length of 128.
     *
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * Required. Immutable. The type of the asset set. Required.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AssetSetTypeEnum.AssetSetType type = 3;
     */
    type: AssetSetTypeEnum_AssetSetType;
    /**
     * Output only. The status of the asset set. Read-only.
     *
     * @generated from protobuf field: google.ads.googleads.v11.enums.AssetSetStatusEnum.AssetSetStatus status = 4;
     */
    status: AssetSetStatusEnum_AssetSetStatus;
    /**
     * Merchant ID and Feed Label from Google Merchant Center.
     *
     * @generated from protobuf field: google.ads.googleads.v11.resources.AssetSet.MerchantCenterFeed merchant_center_feed = 5;
     */
    merchantCenterFeed?: AssetSet_MerchantCenterFeed;
}
/**
 * Merchant ID and Feed Label from Google Merchant Center.
 *
 * @generated from protobuf message google.ads.googleads.v11.resources.AssetSet.MerchantCenterFeed
 */
export interface AssetSet_MerchantCenterFeed {
    /**
     * Required. Merchant ID from Google Merchant Center
     *
     * @generated from protobuf field: int64 merchant_id = 1;
     */
    merchantId: bigint;
    /**
     * Optional. Feed Label from Google Merchant Center.
     *
     * @generated from protobuf field: optional string feed_label = 2;
     */
    feedLabel?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class AssetSet$Type extends MessageType<AssetSet> {
    constructor() {
        super("google.ads.googleads.v11.resources.AssetSet", [
            { no: 6, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 1, name: "resource_name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["IMMUTABLE"], "google.api.resource_reference": { type: "googleads.googleapis.com/AssetSet" } } },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 3, name: "type", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AssetSetTypeEnum.AssetSetType", AssetSetTypeEnum_AssetSetType], options: { "google.api.field_behavior": ["REQUIRED", "IMMUTABLE"] } },
            { no: 4, name: "status", kind: "enum", T: () => ["google.ads.googleads.v11.enums.AssetSetStatusEnum.AssetSetStatus", AssetSetStatusEnum_AssetSetStatus], options: { "google.api.field_behavior": ["OUTPUT_ONLY"] } },
            { no: 5, name: "merchant_center_feed", kind: "message", T: () => AssetSet_MerchantCenterFeed }
        ], { "google.api.resource": { type: "googleads.googleapis.com/AssetSet", pattern: ["customers/{customer_id}/assetSets/{asset_set_id}"] } });
    }
    create(value?: PartialMessage<AssetSet>): AssetSet {
        const message = { id: 0n, resourceName: "", name: "", type: 0, status: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AssetSet>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssetSet): AssetSet {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 6:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string resource_name */ 1:
                    message.resourceName = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* google.ads.googleads.v11.enums.AssetSetTypeEnum.AssetSetType type */ 3:
                    message.type = reader.int32();
                    break;
                case /* google.ads.googleads.v11.enums.AssetSetStatusEnum.AssetSetStatus status */ 4:
                    message.status = reader.int32();
                    break;
                case /* google.ads.googleads.v11.resources.AssetSet.MerchantCenterFeed merchant_center_feed */ 5:
                    message.merchantCenterFeed = AssetSet_MerchantCenterFeed.internalBinaryRead(reader, reader.uint32(), options, message.merchantCenterFeed);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AssetSet, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 id = 6; */
        if (message.id !== 0n)
            writer.tag(6, WireType.Varint).int64(message.id);
        /* string resource_name = 1; */
        if (message.resourceName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.resourceName);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* google.ads.googleads.v11.enums.AssetSetTypeEnum.AssetSetType type = 3; */
        if (message.type !== 0)
            writer.tag(3, WireType.Varint).int32(message.type);
        /* google.ads.googleads.v11.enums.AssetSetStatusEnum.AssetSetStatus status = 4; */
        if (message.status !== 0)
            writer.tag(4, WireType.Varint).int32(message.status);
        /* google.ads.googleads.v11.resources.AssetSet.MerchantCenterFeed merchant_center_feed = 5; */
        if (message.merchantCenterFeed)
            AssetSet_MerchantCenterFeed.internalBinaryWrite(message.merchantCenterFeed, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AssetSet
 */
export const AssetSet = new AssetSet$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AssetSet_MerchantCenterFeed$Type extends MessageType<AssetSet_MerchantCenterFeed> {
    constructor() {
        super("google.ads.googleads.v11.resources.AssetSet.MerchantCenterFeed", [
            { no: 1, name: "merchant_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/, options: { "google.api.field_behavior": ["REQUIRED"] } },
            { no: 2, name: "feed_label", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "google.api.field_behavior": ["OPTIONAL"] } }
        ]);
    }
    create(value?: PartialMessage<AssetSet_MerchantCenterFeed>): AssetSet_MerchantCenterFeed {
        const message = { merchantId: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AssetSet_MerchantCenterFeed>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssetSet_MerchantCenterFeed): AssetSet_MerchantCenterFeed {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 merchant_id */ 1:
                    message.merchantId = reader.int64().toBigInt();
                    break;
                case /* optional string feed_label */ 2:
                    message.feedLabel = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AssetSet_MerchantCenterFeed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 merchant_id = 1; */
        if (message.merchantId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.merchantId);
        /* optional string feed_label = 2; */
        if (message.feedLabel !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.feedLabel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message google.ads.googleads.v11.resources.AssetSet.MerchantCenterFeed
 */
export const AssetSet_MerchantCenterFeed = new AssetSet_MerchantCenterFeed$Type();
